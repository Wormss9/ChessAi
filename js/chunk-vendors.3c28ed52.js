(self["webpackChunkfrontend"]=self["webpackChunkfrontend"]||[]).push([[998],{478:function(e,t,n){"use strict";n.d(t,{Cq7:function(){return a},XeE:function(){return ci}});var s={};n.r(s),n.d(s,{assertParamsValid:function(){return Do},computeFlatOffset:function(){return qo},computeOutShape:function(){return Lo},getNormalizedAxes:function(){return Bo},isSliceContinous:function(){return jo},maskToAxes:function(){return Oo},parseSliceParams:function(){return Ko},sliceInfo:function(){return Xo},startForAxis:function(){return Go},startIndicesWithElidedDims:function(){return Wo},stopForAxis:function(){return Ho},stopIndicesWithElidedDims:function(){return Uo},stridesForAxis:function(){return Vo},stridesWithElidedDims:function(){return Mo}});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:function(){return Ef},computeOutShape:function(){return Tf},segOpComputeOptimalWindowSize:function(){return Nf}});var i={};n.r(i),n.d(i,{ERF_A1:function(){return Gp},ERF_A2:function(){return Hp},ERF_A3:function(){return jp},ERF_A4:function(){return qp},ERF_A5:function(){return Kp},ERF_P:function(){return Vp},PARALLELIZE_THRESHOLD:function(){return Ep},RowPartitionType:function(){return Sp},SELU_SCALE:function(){return Up},SELU_SCALEALPHA:function(){return Wp},applyActivation:function(){return Yh},assertAndGetBroadcastShape:function(){return ro},assertAxesAreInnerMostDims:function(){return dc},assertParamsConsistent:function(){return kp},assignToTypedArray:function(){return ef},axesAreInnerMostDims:function(){return lc},calculateShapes:function(){return Bp},checkEinsumDimSizes:function(){return cf},checkPadOnDimRoundingMode:function(){return kl},combineLocations:function(){return uc},combineRaggedTensorToTensorShapes:function(){return Cp},complexWithEvenIndex:function(){return Yp},complexWithOddIndex:function(){return Zp},computeConv2DInfo:function(){return ol},computeConv3DInfo:function(){return ll},computeDefaultPad:function(){return hl},computeDilation2DInfo:function(){return rl},computeOptimalWindowSize:function(){return Rp},computeOutAndReduceShapes:function(){return cc},computeOutShape:function(){return Ip},computePool2DInfo:function(){return il},computePool3DInfo:function(){return al},convertConv2DDataFormat:function(){return wl},decodeEinsumEquation:function(){return lf},eitherStridesOrDilationsAreOne:function(){return yl},expandShapeToKeepDim:function(){return hc},exponent:function(){return nf},exponents:function(){return tf},fromStringArrayToUint8:function(){return Af},fromUint8ToStringArray:function(){return Rf},getAxesPermutation:function(){return pc},getBroadcastDims:function(){return no},getComplexWithIndex:function(){return Qp},getEinsumComputePath:function(){return hf},getEinsumPermutation:function(){return uf},getFusedBiasGradient:function(){return Jh},getFusedDyActivation:function(){return Xh},getImageCenter:function(){return Ap},getInnerMostAxes:function(){return gc},getPermuted:function(){return Fp},getRaggedRank:function(){return Np},getReductionAxes:function(){return so},getReshaped:function(){return _p},getReshapedPermuted:function(){return Dp},getRowPartitionTypesHelper:function(){return $p},getSliceBeginCoords:function(){return Op},getSliceSize:function(){return Lp},getSparseFillEmptyRowsIndicesDenseShapeMismatch:function(){return gf},getSparseFillEmptyRowsNegativeIndexErrorMessage:function(){return mf},getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:function(){return bf},getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return vf},getSparseReshapeInputOutputMismatchErrorMessage:function(){return kf},getSparseReshapeInputOutputMultipleErrorMessage:function(){return wf},getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:function(){return xf},getSparseReshapeNegativeOutputDimErrorMessage:function(){return yf},getSparseSegmentReductionIndicesOutOfRangeErrorMessage:function(){return $f},getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return If},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return Sf},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:function(){return Cf},getUndoAxesPermutation:function(){return fc},isIdentityPermutation:function(){return df},log:function(){return Is},mergeRealAndImagArrays:function(){return Xp},prepareAndValidate:function(){return Mp},prepareSplitSize:function(){return ff},segment_util:function(){return r},shouldFuse:function(){return Zh},slice_util:function(){return s},splitRealAndImagArrays:function(){return Jp},stridesOrDilationsArePositive:function(){return vl},tupleValuesAreOne:function(){return xl},upcastType:function(){return Or},validateDefaultValueShape:function(){return Tp},validateInput:function(){return Pp},validateUpdateShape:function(){return zp},warn:function(){return ks}});var a={};n.r(a),n.d(a,{modelFromJSON:function(){return tI}});var o={};n.r(o),n.d(o,{addImpl:function(){return G$},bincountImpl:function(){return JN},bincountReduceImpl:function(){return YN},castImpl:function(){return P$},ceilImpl:function(){return nT},concatImpl:function(){return uT},equalImpl:function(){return oE},expImpl:function(){return xE},expm1Impl:function(){return IE},floorImpl:function(){return GE},gatherNdImpl:function(){return eR},gatherV2Impl:function(){return sR},greaterEqualImpl:function(){return uR},greaterImpl:function(){return aR},lessEqualImpl:function(){return IR},lessImpl:function(){return vR},linSpaceImpl:function(){return $R},logImpl:function(){return ER},maxImpl:function(){return jR},maximumImpl:function(){return XR},minimumImpl:function(){return dA},multiplyImpl:function(){return YT},negImpl:function(){return SA},notEqualImpl:function(){return LA},prodImpl:function(){return ZA},raggedGatherImpl:function(){return l_},raggedRangeImpl:function(){return d_},raggedTensorToTensorImpl:function(){return y_},rangeImpl:function(){return k_},rsqrtImpl:function(){return B_},scatterImpl:function(){return V_},sigmoidImpl:function(){return R$},simpleAbsImpl:function(){return eN},sliceImpl:function(){return HN},sparseFillEmptyRowsImpl:function(){return gF},sparseReshapeImpl:function(){return xF},sparseSegmentReductionImpl:function(){return wF},sqrtImpl:function(){return RF},squaredDifferenceImpl:function(){return DF},stridedSliceImpl:function(){return PF},stringNGramsImpl:function(){return VF},stringSplitImpl:function(){return qF},stringToHashBucketFastImpl:function(){return JF},subImpl:function(){return EE},tileImpl:function(){return sD},topKImpl:function(){return lD},transposeImpl:function(){return uN},uniqueImpl:function(){return wD}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const l=1e-7,u=1e-4;class c{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class h{refCount(e){return d("refCount")}incRef(e){return d("incRef")}timerAvailable(){return!0}time(e){return d("time")}read(e){return d("read")}readSync(e){return d("readSync")}readToGPU(e,t){return d("readToGPU")}numDataIds(){return d("numDataIds")}disposeData(e,t){return d("disposeData")}write(e,t,n){return d("write")}move(e,t,n,s,r){return d("move")}createTensorFromGPUData(e,t,n){return d("createTensorFromGPUData")}memory(){return d("memory")}floatPrecision(){return d("floatPrecision")}epsilon(){return 32===this.floatPrecision()?l:u}dispose(){return d("dispose")}}function d(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function p(e){let t=e.length,n=0;while(t>0)n=Math.random()*t|0,t--,m(e,t,n)}function f(e,t,n){return Math.max(e,Math.min(t,n))}function g(e){return e%2===0?e:e+1}function m(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function b(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function x(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function y(e,t,n=""){x(k(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function v(e){x(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function w(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function k(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function I(e){return e%1===0}function S(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function C(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function $(e,t=(e=>0),n,s){return new Promise(((r,i)=>{let a=0;const o=()=>{if(e())return void r();a++;const l=t(a);null!=n&&a>=n?i():null!=s?s(o,l):setTimeout(o,l)};o()}))}function N(e,t){let n=1,s=-1;for(let i=0;i<e.length;++i)if(e[i]>=0)n*=e[i];else if(-1===e[i]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(e[i]<0)throw Error(`Shapes can not be < 0. Found ${e[i]} at dim ${i}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function T(e,t){const n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),x(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),x(e.every((e=>I(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function E(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||r?null:T(t,e).sort();let a=0;for(let o=0;o<e.length;++o){if(null!=i){if(i[a]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==i[a]||i[a]>o)&&1===e[o]&&(n.push(e[o]),s.push(o)),i[a]<=o&&a++}1!==e[o]&&(n.push(e[o]),s.push(o))}return{newShape:n,keptDims:s}}function R(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function A(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function _(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function F(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function D(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function O(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function L(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function M(e){return"string"===typeof e||e instanceof String}function z(e){return"boolean"===typeof e}function P(e){return"number"===typeof e}function B(e){return Array.isArray(e)?B(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":P(e)?"float32":M(e)?"string":z(e)?"bool":"float32"}function W(e){return!!(e&&e.constructor&&e.call&&e.apply)}function U(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function G(e,t,n,s=!1){const r=new Array;if(1===t.length){const i=t[0]*(s?2:1);for(let t=0;t<i;t++)r[t]=n[e+t]}else{const i=t[0],a=t.slice(1),o=a.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<i;t++)r[t]=G(e+t*o,a,n,s)}return r}function H(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return G(0,e,t,n)}function j(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function q(e,t){const n=K(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function K(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function X(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return H(e,new Float32Array(n));if("int32"===t)return H(e,new Int32Array(n));if("bool"===t)return H(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function J(e){e.forEach((t=>{x(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Y(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function Z(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function Q(e){return e&&e.then&&"function"===typeof e.then}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ee="tfjsflags";class te{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ne,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(ie().getBool("IS_TEST")||ie().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];ie().getBool("IS_TEST")||ie().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Q(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(ee in e){const t=e[ee].split(",");t.forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=re(t,n)}))}}}function ne(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(se(t,n[0],n[1]),n.join("=")))),t}function se(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function re(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function ie(){return oe}let ae,oe=null;function le(e){oe=e}function ue(){if(null==ae){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}ae=e}return ae}function ce(){const e=ue();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function he(e,t){const n=ce();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const de="Abs",pe="Acos",fe="Acosh",ge="Add",me="AddN",be="All",xe="Any",ye="ArgMax",ve="ArgMin",we="Asin",ke="Asinh",Ie="Atan",Se="Atanh",Ce="Atan2",$e="AvgPool",Ne="AvgPoolGrad",Te="AvgPool3D",Ee="AvgPool3DGrad",Re="BatchMatMul",Ae="BatchToSpaceND",_e="Bincount",Fe="BroadcastTo",De="BroadcastArgs",Oe="Cast",Le="Ceil",Me="ClipByValue",ze="Complex",Pe="ComplexAbs",Be="Concat",We="Conv2D",Ue="Conv2DBackpropFilter",Ve="Conv2DBackpropInput",Ge="Conv3D",He="Conv3DBackpropFilterV2",je="Conv3DBackpropInputV2",qe="Cos",Ke="Cosh",Xe="Cumprod",Je="Cumsum",Ye="CropAndResize",Ze="DenseBincount",Qe="DepthToSpace",et="DepthwiseConv2dNative",tt="DepthwiseConv2dNativeBackpropFilter",nt="DepthwiseConv2dNativeBackpropInput",st="Diag",rt="Dilation2D",it="Dilation2DBackpropInput",at="Dilation2DBackpropFilter",ot="RealDiv",lt="Einsum",ut="Elu",ct="EluGrad",ht="Erf",dt="Equal",pt="Exp",ft="ExpandDims",gt="Expm1",mt="FFT",bt="Fill",xt="FlipLeftRight",yt="Floor",vt="FloorDiv",wt="FusedBatchNorm",kt="GatherV2",It="GatherNd",St="Greater",Ct="GreaterEqual",$t="Identity",Nt="IFFT",Tt="Imag",Et="IsFinite",Rt="IsInf",At="IsNan",_t="LeakyRelu",Ft="Less",Dt="LessEqual",Ot="LinSpace",Lt="Log",Mt="Log1p",zt="LogicalAnd",Pt="LogicalNot",Bt="LogicalOr",Wt="LogSoftmax",Ut="LRN",Vt="LRNGrad",Gt="Max",Ht="Maximum",jt="MaxPool",qt="MaxPoolGrad",Kt="MaxPool3D",Xt="MaxPool3DGrad",Jt="MaxPoolWithArgmax",Yt="Mean",Zt="Min",Qt="Minimum",en="MirrorPad",tn="Mod",nn="Multinomial",sn="Multiply",rn="Neg",an="NotEqual",on="NonMaxSuppressionV3",ln="NonMaxSuppressionV4",un="NonMaxSuppressionV5",cn="OnesLike",hn="OneHot",dn="Pack",pn="PadV2",fn="Pow",gn="Prelu",mn="Prod",bn="RaggedGather",xn="RaggedRange",yn="RaggedTensorToTensor",vn="Range",wn="Real",kn="Reciprocal",In="Relu",Sn="Reshape",Cn="ResizeNearestNeighbor",$n="ResizeNearestNeighborGrad",Nn="ResizeBilinear",Tn="ResizeBilinearGrad",En="Relu6",Rn="Reverse",An="Round",_n="Rsqrt",Fn="ScatterNd",Dn="SearchSorted",On="Select",Ln="Selu",Mn="Slice",zn="Sin",Pn="Sinh",Bn="Sign",Wn="Sigmoid",Un="Softplus",Vn="Sqrt",Gn="Sum",Hn="SpaceToBatchND",jn="SplitV",qn="Softmax",Kn="SparseFillEmptyRows",Xn="SparseReshape",Jn="SparseSegmentMean",Yn="SparseSegmentSum",Zn="SparseToDense",Qn="SquaredDifference",es="Square",ts="StridedSlice",ns="StringNGrams",ss="StringSplit",rs="StringToHashBucketFast",is="Sub",as="Tan",os="Tanh",ls="Tile",us="TopK",cs="Transform",hs="Transpose",ds="Unique",ps="Unpack",fs="UnsortedSegmentSum",gs="ZerosLike",ms="Step",bs="FromPixels",xs="RotateWithOffset",ys="_FusedMatMul",vs="FusedConv2D",ws="FusedDepthwiseConv2D";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ks(...e){ie().getBool("IS_TEST")||ie().getBool("PROD")||console.warn(...e)}function Is(...e){ie().getBool("IS_TEST")||ie().getBool("PROD")||console.log(...e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ss=he("kernelRegistry",(()=>new Map)),Cs=he("gradRegistry",(()=>new Map));function $s(e,t){const n=As(e,t);return Ss.get(n)}function Ns(e){return Cs.get(e)}function Ts(e){const t=Ss.entries(),n=[];while(1){const{done:s,value:r}=t.next();if(s)break;const[i,a]=r,[o]=i.split("_");o===e&&n.push(a)}return n}function Es(e){const{kernelName:t,backendName:n}=e,s=As(t,n);Ss.has(s)&&ks(`The kernel '${t}' for backend '${n}' is already registered`),Ss.set(s,e)}function Rs(e){const{kernelName:t}=e;Cs.has(t)&&ie().getBool("DEBUG")&&ks(`Overriding the gradient for '${t}'`),Cs.set(t,e)}function As(e,t){return`${t}_${e}`}var _s=n(720),Fs=n.n(_s);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ds=Fs()||_s;function Os(e){return Ds.fromString(e,!0,16)}const Ls=Os("c3a5c85c97cb3127"),Ms=Os("b492b66fbe98f273"),zs=Os("9ae16a3b2f90404f");function Ps(e){return e.xor(e.shru(47))}function Bs(e,t,n){const s=e.slice(t,t+n);return Ds.fromBytes(Array.from(s),!0,!0)}function Ws(e,t){return Bs(e,t,8)}function Us(e,t){return Bs(e,t,4)}function Vs(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Gs(e,t,n=Os("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Hs(e,t,n,s,r,i){r=r.add(e),i=Vs(i.add(r).add(s),21);const a=r;return r=r.add(t),r=r.add(n),i=i.add(Vs(r,44)),[r.add(s),i.add(a)]}function js(e,t,n,s){return Hs(Ws(e,t),Ws(e,t+8),Ws(e,t+16),Ws(e,t+24),n,s)}function qs(e,t=e.length){if(t>=8){const n=zs.add(2*t),s=Ws(e,0).add(zs),r=Ws(e,t-8),i=Vs(r,37).mul(n).add(s),a=Vs(s,25).add(r).mul(n);return Gs(i,a,n)}if(t>=4){const n=zs.add(2*t),s=Us(e,0);return Gs(s.shl(3).add(t),Us(e,t-4),n)}if(t>0){const n=e[0],s=e[t>>1],r=e[t-1],i=n+(s<<8),a=t+(r<<2);return Ps(zs.mul(i).xor(Ls.mul(a))).mul(zs)}return zs}function Ks(e,t=e.length){const n=zs.add(2*t),s=Ws(e,0).mul(Ms),r=Ws(e,8),i=Ws(e,t-8).mul(n),a=Ws(e,t-16).mul(zs);return Gs(Vs(s.add(r),43).add(Vs(i,30)).add(a),s.add(Vs(r.add(zs),18)).add(i),n)}function Xs(e,t=e.length){const n=zs.add(2*t),s=Ws(e,0).mul(zs),r=Ws(e,8),i=Ws(e,t-8).mul(n),a=Ws(e,t-16).mul(zs),o=Vs(s.add(r),43).add(Vs(i,30)).add(a),l=Gs(o,s.add(Vs(r.add(zs),18)).add(i),n),u=Ws(e,16).mul(n),c=Ws(e,24),h=o.add(Ws(e,t-32)).mul(n),d=l.add(Ws(e,t-24)).mul(n);return Gs(Vs(u.add(c),43).add(Vs(h,30)).add(d),u.add(Vs(c.add(s),18)).add(h),n)}function Js(e,t=e.length){const n=Ds.fromNumber(81,!0);if(t<=32)return t<=16?qs(e,t):Ks(e,t);if(t<=64)return Xs(e,t);let s=n,r=n.mul(Ms).add(113),i=Ps(r.mul(zs).add(113)).mul(zs),a=[Ds.UZERO,Ds.UZERO],o=[Ds.UZERO,Ds.UZERO];s=s.mul(zs).add(Ws(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=Vs(s.add(r).add(a[0]).add(Ws(e,l+8)),37).mul(Ms),r=Vs(r.add(a[1]).add(Ws(e,l+48)),42).mul(Ms),s=s.xor(o[1]),r=r.add(a[0]).add(Ws(e,l+40)),i=Vs(i.add(o[0]),33).mul(Ms),a=js(e,l,a[1].mul(Ms),s.add(o[0])),o=js(e,l+32,i.add(o[1]),r.add(Ws(e,l+16))),[i,s]=[s,i],l+=64}while(l!==u);const h=Ms.add(i.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),s=Vs(s.add(r).add(a[0]).add(Ws(e,l+8)),37).mul(h),r=Vs(r.add(a[1]).add(Ws(e,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(a[0].mul(9).add(Ws(e,l+40))),i=Vs(i.add(o[0]),33).mul(h),a=js(e,l,a[1].mul(h),s.add(o[0])),o=js(e,l+32,i.add(o[1]),r.add(Ws(e,l+16))),[i,s]=[s,i],Gs(Gs(a[0],o[0],h).add(Ps(r).mul(Ls)).add(i),Gs(a[1],o[1],h).add(s),h)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ys(e,t){return"string"===t?tr(e):Qs([e],t)}function Zs(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function Qs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=rr(e)),ie().getBool("DEBUG")&&_(e,t),Zs(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function er(){return ie().platform.now()}function tr(e,t="utf-8"){return t=t||"utf-8",ie().platform.encode(e,t)}function nr(e,t="utf-8"){return t=t||"utf-8",ie().platform.decode(e,t)}function sr(e){return ie().platform.isTypedArray(e)}function rr(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||Q(e)||null==e||sr(e)&&n)t.push(e);else if(Array.isArray(e)||sr(e))for(let s=0;s<e.length;++s)rr(e[s],t,n);else{let s=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(s=Math.max(s,Number(t)));for(let r=0;r<=s;r++)rr(e[r],t,n)}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ir{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new or)}profileKernel(e,t,n){let s;const r=()=>{s=n()};let i;const a=er();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const e of s)e.dataSync();i=Promise.resolve({kernelMs:er()-a})}if(ie().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){const t=s[l];t.data().then((n=>{ar(n,t.dtype,e)}))}const o={kernelName:e,outputs:s,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))};return o}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),s,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function ar(e,t,n){if("float32"!==t)return!1;for(let s=0;s<e.length;s++){const t=e[s];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class or{logKernelProfile(e,t,n,s,r,i){const a="number"===typeof s?C(`${s}ms`,9):s["error"],o=C(e,25),l=t.rank,u=t.size,c=C(t.shape.toString(),14);let h="";for(const d in r){const e=r[d];if(null!=e){const n=e.shape||t.shape,s=n.length;h+=`${d}: ${s}D ${s>0?n:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lr(e,t,n){const s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],i=n.inputs;for(const e in i){const a=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[a.id]){n.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[n.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(i[t.outputs[e].id]){for(const e in n)i[n[e].id]=!0,a[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(r[t.id]&&a[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];s[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}function ur(e,t,n,s){for(let r=t.length-1;r>=0;r--){const i=t[r],a=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const a=i.inputs[t];if(!k(r.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=r;else{const t=e[a.id];e[a.id]=s(t,r),t.dispose()}}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const cr=20,hr=3,dr=7;function pr(e,t,n,s){const r=V(t),i=fr(e,t,n,r),a=t.length,o=br(e,t,n,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function fr(e,t,n,s){const r=w(t),i=s[s.length-1],a=new Array(i).fill(0),o=t.length,l="complex64"===n?xr(e):e;if(o>1)for(let u=0;u<r/i;u++){const e=u*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],gr(l[e+t],0,n).length)}return a}function gr(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(dr))} + ${parseFloat(e[1].toFixed(dr))}j`:M(e)?`'${e}'`:"bool"===n?mr(e):parseFloat(e.toFixed(dr)).toString(),C(s,t)}function mr(e){return 0===e?"false":"true"}function br(e,t,n,s,r,i=!0){const a="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){const t=xr(e);return[gr(t[0],0,n)]}return"bool"===n?[mr(e[0])]:[e[0].toString()]}if(1===l){if(o>cr){const t=hr*a;let s=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-hr)*a,o*a));return"complex64"===n&&(s=xr(s),i=xr(i)),["["+s.map(((e,t)=>gr(e,r[t],n))).join(", ")+", ..., "+i.map(((e,t)=>gr(e,r[o-hr+t],n))).join(", ")+"]"]}const t="complex64"===n?xr(e):Array.from(e);return["["+t.map(((e,t)=>gr(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*a,d=[];if(o>cr){for(let t=0;t<hr;t++){const s=t*h,i=s+h;d.push(...br(e.slice(s,i),u,n,c,r,!1))}d.push("...");for(let t=o-hr;t<o;t++){const s=t*h,i=s+h;d.push(...br(e.slice(s,i),u,n,c,r,t===o-1))}}else for(let g=0;g<o;g++){const t=g*h,s=t+h;d.push(...br(e.slice(t,s),u,n,c,r,g===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let f=",\n";for(let g=2;g<l;g++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function xr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=w(e),null!=n){const e=n.length;x(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||A(t,this.size),this.strides=V(e)}set(e,...t){0===t.length&&(t=[0]),x(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return vr().makeTensor(this.values,this.shape,this.dtype)}}let vr=null,wr=null,kr=null;function Ir(e){vr=e}function Sr(e){wr=e}function Cr(e){kr=e}class $r{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=w(e),this.strides=V(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return wr.buffer(this.shape,this.dtype,e)}bufferSync(){return wr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return H(this.shape,e,"complex64"===this.dtype)}arraySync(){return H(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=vr().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>nr(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),vr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=vr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>nr(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await vr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(vr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return wr.print(this,e)}clone(){return this.throwIfDisposed(),wr.clone(this)}toString(e=!1){const t=this.dataSync();return pr(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),wr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),vr().makeVariable(this,e,t,n)}}function Nr(){return he("Tensor",(()=>$r))}Object.defineProperty($r,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Nr();class Tr extends $r{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!k(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);vr().disposeTensor(this),this.dataId=e.dataId,vr().incRef(this,null)}dispose(){vr().disposeVariable(this),this.isDisposedInternal=!0}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Er,Rr,Ar,_r,Fr;Object.defineProperty(Tr,Symbol.hasInstance,{value:e=>e instanceof $r&&null!=e.assign&&e.assign instanceof Function}),function(e){e["R0"]="R0",e["R1"]="R1",e["R2"]="R2",e["R3"]="R3",e["R4"]="R4",e["R5"]="R5",e["R6"]="R6"}(Er||(Er={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="int32",e["complex64"]="complex64"}(Rr||(Rr={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="bool",e["complex64"]="complex64"}(Ar||(Ar={})),function(e){e["float32"]="float32",e["int32"]="float32",e["bool"]="float32",e["complex64"]="complex64"}(_r||(_r={})),function(e){e["float32"]="complex64",e["int32"]="complex64",e["bool"]="complex64",e["complex64"]="complex64"}(Fr||(Fr={}));const Dr={float32:_r,int32:Rr,bool:Ar,complex64:Fr};function Or(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Dr[e][t]}function Lr(e){return Or(e,"int32")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mr(e,t){if(e.dtype===t.dtype)return[e,t];const n=Or(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function zr(e,t){return t.some((t=>t.id===e.id))}function Pr(e){const t=[],n=new Set;return Br(e,t,n),t}function Br(e,t,n){if(null==e)return;if(e instanceof $r)return void t.push(e);if(!Wr(e))return;const s=e;for(const r in s){const e=s[r];n.has(e)||(n.add(e),Br(e,t,n))}}function Wr(e){return Array.isArray(e)||"object"===typeof e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ur(e){return null!=e.kernelName}class Vr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Gr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Vr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],s=await this.initializeBackend(n).success;if(s)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ks(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e),s=n?await t:t;if(!s)return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new ir(this.backendInstance),!0}setupRegisteredKernels(){const e=Ts(this.backendName);e.forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){const t=Ts(e);t.forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof h||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ks(`Initialization of backend ${e} failed`),ks(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(n){return ks(`Initialization of backend ${e} failed`),ks(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),i=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(s){throw t(),s}}nextTensorId(){return Gr.nextTensorId++}nextVariableId(){return Gr.nextVariableId++}clone(e){const t=qr.runKernel($t,{x:e}),n={x:e},s=e=>({x:()=>{const t="float32",n={x:e},s={dtype:t};return qr.runKernel(Oe,n,s)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;const s=null!=$s(e,this.backendName);if(!s)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=s-t-r-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Ur(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ur(e)){const{kernelName:t,inputs:r,attrs:i}=e;null==this.backendName&&this.backend;const l=$s(t,this.backendName);x(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),a=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const u=a.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(s){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};a=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Ur(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=a()})),s&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const s=Ns(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let i;s.saveAllInputs?(x(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const a=n.filter(((e,t)=>r[t]));return i.concat(a)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&M(e[0])&&(r=e.map((e=>tr(e))));const i=s.write(r,t,n),a=new $r(t,n,i,this.nextTensorId());if(this.trackTensor(a,s),"string"===n){const e=this.state.tensorInfo.get(i),t=L(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,s){n=n||"float32";const r={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:s,dtype:r}=e,i=new $r(s,r,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new Tr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*O(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Tr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*O(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=Ns(e);null!=o&&(s=o.gradFunc),null!=s&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=K(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Pr(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(x(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));x(r instanceof $r,(()=>"The result y returned by f() must be a tensor."));const i=lr(this.state.activeTape,t,r);if(!s&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?Hr(r.shape):n,ur(e,i,(e=>this.tidy(e)),Kr);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return x(W(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;x(t.every((e=>e instanceof $r)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};t.forEach(((e,t)=>{s[t]=e}));const r=(s,r)=>(n=e(...t,r),x(n.value instanceof $r,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),x(W(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),i=(e,s)=>{const r=n.gradFunc(e,s),i=Array.isArray(r)?r:[r];x(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),x(i.every((e=>e instanceof $r)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((e,t)=>{a[t]=()=>e})),a};return this.runKernelFunc({forwardFunc:r,backwardsFunc:i,inputs:s})}}readSync(e){const t=this.state.tensorInfo.get(e);return t.backend.readSync(e)}read(e){const t=this.state.tensorInfo.get(e);return t.backend.read(e)}readToGPU(e,t){const n=this.state.tensorInfo.get(e);return n.backend.readToGPU(e,t)}async time(e){const t=er(),n=await this.backend.time(e);return n.wallMs=er()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Vr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Hr(e){const t=q(w(e),"float32");return qr.makeTensor(t,e,"float32")}function jr(){const e=ue();if(null==e._tfengine){const t=new te(e);e._tfengine=new Gr(t)}return le(e._tfengine.ENV),Ir((()=>e._tfengine)),e._tfengine}Gr.nextTensorId=0,Gr.nextVariableId=0;const qr=jr();function Kr(e,t){const n={a:e,b:t};return qr.runKernel(ge,n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xr(){return"undefined"!==typeof navigator&&null!=navigator}let Jr;function Yr(e){if(void 0!==Jr)return Jr;if(e||Xr()){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Zr(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Qr=ie();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ei(e,t){let n=e;if(sr(e))return"string"===t?[]:[e.length];const s="object"===typeof e;if(s){if("texture"in e){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if("buffer"in e&&!(e.buffer instanceof ArrayBuffer))return[e.buffer.size/(null==t?4:O(t))]}if(!Array.isArray(e))return[];const r=[];while(Array.isArray(n)||sr(n)&&"string"!==t)r.push(n.length),n=n[0];return Array.isArray(e)&&ie().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ti(e,r,[]),r}function ti(e,t,n){if(n=n||[],!Array.isArray(e)&&!sr(e))return void x(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));x(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),x(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let r=0;r<e.length;++r)ti(e[r],s,n.concat(r))}function ni(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function si(e,t,n,s="numeric"){if(e instanceof $r)return ni(s,e.dtype,t,n),e;let r=B(e);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),ni(s,r,t,n),null==e||!sr(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const i=ei(e,r);sr(e)||Array.isArray(e)||(e=[e]);const a=!0,o="string"!==r?Qs(e,r):rr(e,[],a);return qr.makeTensor(o,i,r)}function ri(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const r=e;return r.map(((e,r)=>si(e,`${t}[${r}]`,n,s)))}Qr.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Qr.registerFlag("IS_BROWSER",(()=>Zr())),Qr.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),Qr.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Qr.registerFlag("PROD",(()=>!1)),Qr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Qr.getBool("DEBUG"))),Qr.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Qr.registerFlag("IS_TEST",(()=>!1)),Qr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Qr.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Qr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Qr.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ii="__op";function ai(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=ii;const r=(...e)=>{qr.startScope(n);try{const t=s(...e);return Q(t)&&console.error("Cannot return a Promise inside of tidy."),qr.endScope(t),t}catch(t){throw qr.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oi(e,t){const n=si(e,"real","complex"),s=si(t,"imag","complex");y(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return qr.runKernel(ze,r)}const li=ai({complex_:oi});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ui(e,t,n,s){if(null==s)s=B(e);else if("complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if("object"===typeof e&&("texture"in e||"buffer"in e&&!(e.buffer instanceof ArrayBuffer))){if("float32"!==s&&"int32"!==s)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return qr.backend.createTensorFromGPUData(e,t||n,s)}if(!sr(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){J(t);const e=w(t),s=w(n);x(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let r=0;r<n.length;++r){const e=n[r],s=r!==n.length-1||e!==w(t.slice(r));x(n[r]===t[r]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return sr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?Qs(e,s):rr(e,[],!0),qr.makeTensor(e,t,s)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ci(e,t,n){const s=ei(e,n);return ui(e,t,s,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const hi={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},di=4;async function pi(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+di*t.length,s=new Uint8Array(n);let r=0;for(let i=0;i<t.length;i++){const e=t[i],n=new Uint8Array(new Uint32Array([e.length]).buffer);s.set(n,r),r+=di,s.set(e,r),r+=e.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}const i=await Promise.all(s);return{data:gi(i),specs:n}}function fi(e,t){const n={};let s,r=0;for(const i of t){const t=i.name,a=i.dtype,o=i.shape,l=w(o);let u;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const o=hi[n.dtype],c=e.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=Ei()),u=s(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}r+=l*o}else if("string"===a){const t=w(i.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+di))[0];r+=di;const n=new Uint8Array(e.slice(r,r+t));u.push(n),r+=t}}else{const s=hi[a],i=e.slice(r,r+l*s);if("float32"===a)u=new Float32Array(i);else if("int32"===a)u=new Int32Array(i);else if("bool"===a)u=new Uint8Array(i);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);{u=new Float32Array(i);const e=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],s[t]=u[2*t+1];const r=ci(e,o,"float32"),a=ci(s,o,"float32");n[t]=li(r,a),r.dispose(),a.dispose()}}r+=l*s}"complex64"!==a&&(n[t]=ci(u,o,a))}return n}function gi(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const mi="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function bi(e){return mi?Buffer.byteLength(e):new Blob([e]).size}function xi(e){if(mi)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function yi(e){if(mi){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function vi(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function wi(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function ki(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(s.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(s.initializerSignature=e.initializerSignature),s}async function Ii(e,t){let n,s;return null!=e.weightsManifest&&([n,s]=await t(e.weightsManifest)),ki(e,n,s)}function Si(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:bi(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:bi(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Ci(e){const t=[];for(const n of e)t.push(...n.weights);return t}function $i(){const e=e=>{let t=e<<13,n=0;while(0===(8388608&t))n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function Ni(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function Ti(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function Ei(){const e=$i(),t=Ni(),n=Ti();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let a=0;a<s.length;a++){const r=s[a],o=e[n[r>>10]+(1023&r)]+t[r>>10];i[a]=o}return new Float32Array(r)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ri{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ri.instance&&(Ri.instance=new Ri),Ri.instance}static registerSaveRouter(e){Ri.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ri.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ri.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ri.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[],r="load"===t?Ri.getInstance().loadRouters:Ri.getInstance().saveRouters;return r.forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const Ai=e=>Ri.getSaveHandlers(e),_i="tensorflowjs",Fi=1,Di="models_store",Oi="model_info_store";function Li(){if(!ie().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Mi(e){const t=e.result;t.createObjectStore(Di,{keyPath:"modelPath"}),t.createObjectStore(Oi,{keyPath:"modelPath"})}class zi{constructor(e){if(this.indexedDB=Li(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(_i,Fi);s.onupgradeneeded=()=>Mi(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(Di,"readonly"),s=t.objectStore(Di),i=s.get(this.modelPath);i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(i.result.modelArtifacts)},i.onerror=e=>(r.close(),n(i.error)),t.oncomplete=()=>r.close()}else{const s=Si(t),i=r.transaction(Oi,"readwrite");let a=i.objectStore(Oi);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(Di,"readwrite");const o=l.objectStore(Di),u=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});u.onsuccess=()=>e({modelArtifactsInfo:s}),u.onerror=e=>{a=i.objectStore(Oi);const t=a.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},o.onerror=e=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}zi.URL_SCHEME="indexeddb://";const Pi=e=>ie().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(zi.URL_SCHEME)?Bi(e.slice(zi.URL_SCHEME.length)):null;function Bi(e){return new zi(e)}function Wi(e){return e.startsWith(zi.URL_SCHEME)?e.slice(zi.URL_SCHEME.length):e}Ri.registerSaveRouter(Pi),Ri.registerLoadRouter(Pi);class Ui{constructor(){this.indexedDB=Li()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(_i,Fi);n.onupgradeneeded=()=>Mi(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(Oi,"readonly"),i=r.objectStore(Oi),a=i.getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=Wi(e),new Promise(((t,n)=>{const s=this.indexedDB.open(_i,Fi);s.onupgradeneeded=()=>Mi(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(Oi,"readwrite"),a=i.objectStore(Oi),o=a.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=a.delete(e),i=()=>{l=r.transaction(Di,"readwrite");const s=l.objectStore(Di),i=s.delete(e);i.onsuccess=()=>t(o.result.modelArtifactsInfo),i.onerror=e=>n(o.error)};s.onsuccess=i,s.onerror=e=>(i(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Vi="/",Gi="tensorflowjs_models",Hi="info",ji="model_topology",qi="weight_specs",Ki="weight_data",Xi="model_metadata";function Ji(e){return{info:[Gi,e,Hi].join(Vi),topology:[Gi,e,ji].join(Vi),weightSpecs:[Gi,e,qi].join(Vi),weightData:[Gi,e,Ki].join(Vi),modelMetadata:[Gi,e,Xi].join(Vi)}}function Yi(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Zi(e){const t=e.split(Vi);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Vi)}function Qi(e){return e.startsWith(ea.URL_SCHEME)?e.slice(ea.URL_SCHEME.length):e}class ea{constructor(e){if(!ie().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ji(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=Si(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,xi(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw Yi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=yi(i),t}}ea.URL_SCHEME="localstorage://";const ta=e=>ie().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ea.URL_SCHEME)?na(e.slice(ea.URL_SCHEME.length)):null;function na(e){return new ea(e)}Ri.registerSaveRouter(ta),Ri.registerLoadRouter(ta);class sa{constructor(){x(ie().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),x("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Gi+Vi,n=Vi+Hi;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){const t=Zi(r);e[t]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=Qi(e);const t=Ji(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return Yi(t),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ra="://";class ia{constructor(){this.managers={}}static getInstance(){return null==ia.instance&&(ia.instance=new ia),ia.instance}static registerManager(e,t){x(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(ra)&&(e=e.slice(0,e.indexOf(ra))),x(e.length>0,(()=>"scheme must not be an empty string."));const n=ia.getInstance();x(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ia.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ia.getInstance().managers)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aa{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&ie().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();const t=this.functionRefs[e.data.index];t(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}}if(ie().get("IS_BROWSER")){ie().setPlatform("browser",new aa);try{ia.registerManager(ea.URL_SCHEME,new sa)}catch(eX){}try{ia.registerManager(zi.URL_SCHEME,new Ui)}catch(eX){}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const oa={importFetch:()=>n(410)};let la;class ua{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ie().global.fetch?ie().global.fetch(e,t):(null==la&&(la=oa.importFetch()),la(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ca(e,t="float32",n){return t=t||"float32",J(e),new yr(e,t,n)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ha(e,t){const n=si(e,"x","cast");if(!F(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return qr.runKernel(Oe,s,r)}ie().get("IS_NODE")&&!ie().get("IS_BROWSER")&&ie().setPlatform("node",new ua);const da=ai({cast_:ha});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pa(e){const t=si(e,"x","clone","string_or_numeric"),n={x:t};return qr.runKernel($t,n)}const fa=ai({clone_:pa});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ga(e,t=!1){console.log(e.toString(t))}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
jr();const ma={buffer:ca,cast:da,clone:fa,print:ga};function ba(e){ie().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function xa(){return qr}function ya(){return qr.memory()}function va(e,t){return qr.tidy(e,t)}function wa(e){const t=Pr(e);t.forEach((e=>e.dispose()))}function ka(e){return qr.keep(e)}function Ia(e,t,n=1){return qr.registerBackend(e,t,n)}function Sa(){return qr.backend}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ca(e,t){let n=si(e,"a","add"),s=si(t,"b","add");[n,s]=Mr(n,s);const r={a:n,b:s};return qr.runKernel(ge,r)}Sr(ma),Cr(ba);const $a=ai({add_:Ca});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Na(e,t){let n=si(e,"a","floorDiv"),s=si(t,"b","floorDiv");[n,s]=Mr(n,s);const r={a:n,b:s};return qr.runKernel(vt,r)}const Ta=ai({floorDiv_:Na});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ea(e,t){let n=si(e,"a","div"),s=si(t,"b","div");if([n,s]=Mr(n,s),"int32"===n.dtype&&"int32"===s.dtype)return Ta(n,s);const r={a:n,b:s},i={};return qr.runKernel(ot,r,i)}const Ra=ai({div_:Ea});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Aa(e,t){let n=si(e,"a","mul"),s=si(t,"b","mul");[n,s]=Mr(n,s);const r={a:n,b:s};return qr.runKernel(sn,r)}const _a=ai({mul_:Aa});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fa(e){const t=si(e,"x","sqrt","float32"),n={x:t};return qr.runKernel(Vn,n)}const Da=ai({sqrt_:Fa});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Oa(e){const t=si(e,"x","square"),n={};return qr.runKernel("Square",{x:t},n)}const La=ai({square_:Oa});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ma(e){const t=si(e,"x","zerosLike"),n={x:t};return qr.runKernel(gs,n)}const za=ai({zerosLike_:Ma});function Pa(e,t){x(W(e),(()=>"The f passed in variableGrads(f) must be a function")),x(null==t||Array.isArray(t)&&t.every((e=>e instanceof Tr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in qr.registeredVariables)t.push(qr.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),x(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const i=!0,{value:a,grads:o}=qr.gradients(e,t,null,i);x(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),x(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const l={};return t.forEach(((e,t)=>{null!=o[t]&&(l[e.name]=o[t])})),null!=s&&s.forEach((e=>l[e.name]=null)),{value:a,grads:l}}function Ba(e){return qr.customGrad(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wa(e,t){if((sr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&sr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const n=[],s=[];return ui(e,n,s,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ua{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Va{constructor(){this.classNameMap={}}static getMap(){return null==Va.instance&&(Va.instance=new Va),Va.instance}static register(e){Va.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ga(e){x(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),x("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),x(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Va.register(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ha extends Ua{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return wa(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Pa(e,t)}dispose(){null!=this.iterations_&&wa(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Wa(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ha,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ja extends Ha{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=qr.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const s=qr.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:va((()=>za(s).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:va((()=>za(s).variable(r)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;va((()=>{const e=$a(_a(a,this.rho),_a(La(i),1-this.rho)),t=_a(Ra(Da($a(o,this.epsilon)),Da($a(a,this.epsilon))),i),n=$a(_a(o,this.rho),_a(La(t),1-this.rho));a.assign(e),o.assign(n);const r=$a(_a(t,-this.learningRate),s);s.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(wa(this.accumulatedGrads.map((e=>e.variable))),wa(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["rho"],t["epsilon"])}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qa(e,t,n){J(e);const s={shape:e,value:t,dtype:n};return qr.runKernel(bt,{},s)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ka extends Ha{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const s=qr.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:va((()=>qa(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const i=this.accumulatedGrads[n].variable;va((()=>{const e=$a(i,La(r));i.assign(e);const t=$a(_a(Ra(r,Da($a(e,qr.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&wa(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t["learningRate"],t["initialAccumulatorValue"])}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xa(e,t){let n=si(e,"base","pow"),s=si(t,"exp","pow");[n,s]=Mr(n,s);const r={a:n,b:s};return qr.runKernel(fn,r)}const Ja=ai({pow_:Xa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ya(e,t){let n=si(e,"a","sub"),s=si(t,"b","sub");[n,s]=Mr(n,s);const r={a:n,b:s};return qr.runKernel(is,r)}const Za=ai({sub_:Ya});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Qa extends Ha{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],va((()=>{this.accBeta1=Wa(t).variable(),this.accBeta2=Wa(n).variable()})),null==s&&(this.epsilon=qr.backend.epsilon())}static get className(){return"Adam"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);va((()=>{const n=Za(1,this.accBeta1),s=Za(1,this.accBeta2);t.forEach(((t,r)=>{const i=qr.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:va((()=>za(i).variable(a)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:va((()=>za(i).variable(a)))});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedSecondMoment[r].variable,c=$a(_a(l,this.beta1),_a(o,1-this.beta1)),h=$a(_a(u,this.beta2),_a(La(o),1-this.beta2)),d=Ra(c,n),p=Ra(h,s);l.assign(c),u.assign(h);const f=$a(_a(Ra(d,$a(Da(p),this.epsilon)),-this.learningRate),i);i.assign(f)})),this.accBeta1.assign(_a(this.accBeta1,this.beta1)),this.accBeta2.assign(_a(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&wa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&wa(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),va((()=>{this.accBeta1.assign(Ja(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ja(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eo(e){const t=si(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return qr.runKernel(Pe,e)}{const e={x:t};return qr.runKernel(de,e)}}const to=ai({abs_:eo});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function no(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const i=n-1-r,a=e[i]||1,o=t[t.length-1-r]||1;o>1&&1===a&&s.unshift(i)}return s}function so(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],i=t.length-s-1,a=t[i];(null==r||1===r&&a>1)&&n.unshift(i)}return n}function ro(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let i=t[t.length-r-1];if(null==i&&(i=1),1===s)n.unshift(i);else if(1===i)n.unshift(s);else{if(s!==i){const n=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(n)}n.unshift(s)}}return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function io(e,t){let n=si(e,"a","maximum"),s=si(t,"b","maximum");[n,s]=Mr(n,s),"bool"===n.dtype&&(n=da(n,"int32"),s=da(s,"int32")),ro(n.shape,s.shape);const r={a:n,b:s};return qr.runKernel(Ht,r)}const ao=ai({maximum_:io});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oo extends Ha{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],va((()=>{this.iteration=Wa(0).variable(),this.accBeta1=Wa(t).variable()})),null==s&&(this.epsilon=qr.backend.epsilon())}static get className(){return"Adamax"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);va((()=>{const n=Za(1,this.accBeta1),s=Ra(-this.learningRate,$a(_a(this.iteration,this.decay),1));t.forEach(((t,r)=>{const i=qr.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:za(i).variable(a)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:za(i).variable(a)});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedWeightedInfNorm[r].variable,c=$a(_a(l,this.beta1),_a(o,1-this.beta1)),h=_a(u,this.beta2),d=to(o),p=ao(h,d);l.assign(c),u.assign(p);const f=$a(_a(Ra(s,n),Ra(c,$a(p,this.epsilon))),i);i.assign(f)})),this.iteration.assign($a(this.iteration,1)),this.accBeta1.assign(_a(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&wa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&wa(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"],t["decay"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class lo extends Ha{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}static get className(){return"SGD"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=qr.registeredVariables[t];va((()=>{const e=$a(_a(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ka(Wa(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),0!==e.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t["learningRate"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class uo extends lo{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Wa(this.momentum)}static get className(){return"Momentum"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const s=qr.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:va((()=>za(s).variable(e)))}}const r=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&va((()=>{let e;const t=$a(_a(this.m,r),i);e=this.useNesterov?$a(_a(this.c,$a(i,_a(t,this.m))),s):$a(_a(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&wa(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t["learningRate"],t["momentum"],t["useNesterov"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class co extends Ha{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=qr.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const s=qr.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:va((()=>za(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:va((()=>za(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:va((()=>za(s).variable(r)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;va((()=>{const e=$a(_a(a,this.decay),_a(La(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=$a(_a(t,this.decay),_a(i,1-this.decay)),l=Ra(_a(i,this.learningRate),Da(Za(e,$a(La(r),this.epsilon)))),u=$a(_a(o,this.momentum),l);a.assign(e),t.assign(r),o.assign(u);const c=Za(s,u);s.assign(c)}else{const e=$a(_a(a,this.decay),_a(La(i),1-this.decay)),t=$a(_a(o,this.momentum),Ra(_a(i,this.learningRate),Da($a(e,this.epsilon))));a.assign(e),o.assign(t);const n=Za(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&wa(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&wa(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&wa(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t["learningRate"],t["decay"],t["momentum"],t["epsilon"],t["centered"])}}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ho=[ja,Ka,Qa,oo,uo,co,lo];function po(){for(const e of ho)Ga(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const fo="model",go=".json",mo=".weights.bin";function bo(e){return new Promise((e=>setTimeout(e))).then(e)}class xo{constructor(e){if(!ie().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(xo.URL_SCHEME)&&(e=e.slice(xo.URL_SCHEME.length)),null!=e&&0!==e.length||(e=fo),this.modelJsonFileName=e+go,this.weightDataFileName=e+mo}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=wi(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=r,await bo((()=>i.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await bo((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Si(e)}}}}xo.URL_SCHEME="downloads://";const yo=e=>ie().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(xo.URL_SCHEME)?vo(e.slice(xo.URL_SCHEME.length)):null;function vo(e="model"){return new xo(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wo(e,t,n,s){a(e),n=null==n?0:n,s=null==s?1:s,o(n,s);let r=0;const i=i=>(i.then((i=>{const a=n+ ++r/e.length*(s-n);return t(a),i})),i);function a(e){x(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}function o(e,t){x(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),x(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),x(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}return Promise.all(e.map(i))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function ko(e,t){null==t&&(t={});const n=null==t.fetchFunc?ie().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=0,i=.5,a=null==t.onProgress?await Promise.all(s):await wo(s,t.onProgress,r,i),o=a.map((e=>e.arrayBuffer())),l=.5,u=1,c=null==t.onProgress?await Promise.all(o):await wo(o,t.onProgress,l,u);return c}async function Io(e,t="",n,s){const r=e=>ko(e,{requestInit:s}),i=So(r);return i(e,t,n)}function So(e){return async(t,n="",s)=>{const r=t.map((()=>!1)),i={},a=null!=s?s.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=hi[l]*w(e.shape),c=()=>{r[t]=!0,null==i[t]&&(i[t]=[]),i[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=s?s.forEach(((t,n)=>{t===e.name&&(c(),a[n]=!0)})):c(),o.push(e.name),n+=u}))})),!a.every((e=>e))){const e=s.filter(((e,t)=>!a[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let d=0;return l.forEach((e=>{const n=t[e].paths.length;let s=0;for(let t=0;t<n;t++)s+=c[d+t].byteLength;const r=new ArrayBuffer(s),a=new Uint8Array(r);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[d+t]);a.set(e,o),o+=e.byteLength}const l=i[e];l.forEach((e=>{const t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=fi(t,[e.manifestEntry]);for(const s in n)h[s]=n[s]})),d+=n})),h}}Ri.registerSaveRouter(yo);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Co="application/octet-stream",$o="application/json";class No{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(x("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ie().platform.fetch,x(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&x(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=wi(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:$o}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:Co}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Si(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ii(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=To(t),r=this.weightPathPrefix||n,i=Ci(e),a=[],o=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):a.push(r+e+s);this.weightUrlConverter&&a.push(...await Promise.all(o));const l=await ko(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,vi(l)]}}function To(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function Eo(e){return null!=e.match(No.URL_SCHEME_REGEX)}No.URL_SCHEME_REGEX=/^https?:\/\//;const Ro=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Eo(e))):Eo(e),n)return Ao(e,t)}return null};function Ao(e,t){return new No(e,t)}Ri.registerSaveRouter(Ro),Ri.registerLoadRouter(Ro);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const _o=-2,Fo=-1;function Do(e,t,n){const s=e.shape.length;x(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),x(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)x(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function Oo(e){const t=[];let n=0;while(e>0)1&e&&t.push(n),e/=2,n++;return t}function Lo(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function Mo(e,t,n,s){const r=[...e];for(let i=r.length;i<s.length;i++)r.push(1);for(let i=0;i<n;i++)0===i?r[t]=1:(r.splice(t,0,1),r.pop());return r}function zo(e,t,n){return n<=e?n:n-(t-1)}function Po(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function Bo(e,t,n,s,r,i,a,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Wo(a,l,u,s,e),h=Uo(o,l,u,r,e),d=Mo(i,l,u,e)}else for(let p=0;p<u;p++)c[p]=Go(a,s,i,e,p,l),h[p]=Ho(o,r,i,e,p,l),d[p]=Vo(i,p,l);return{begin:c,end:h,strides:d}}function Wo(e,t,n,s,r){const i=[...r],a=Po(n,t);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=0;else{const r=zo(t,n,o);let a=s[r];e&1<<r&&(a=0),i[o]=a}return i}function Uo(e,t,n,s,r){const i=[...r],a=Po(n,t);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=Number.MAX_SAFE_INTEGER;else{const r=zo(t,n,o);let a=s[r];e&1<<r&&(a=Number.MAX_SAFE_INTEGER),i[o]=a}for(let o=0;o<i.length;o++){const e=r[o];i[o]<0&&(i[o]+=e),i[o]=f(0,i[o],r[o])}return i}function Vo(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function Go(e,t,n,s,r,i){let a=t[r];const o=n[r]||1;(e&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=f(0,a,l-1),a}function Ho(e,t,n,s,r,i){let a=t[r];const o=n[r]||1;(e&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=o>0?f(0,a,l):f(-1,a,l-1),a}function jo(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function qo(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function Ko(e,t,n){let s;const r=e.shape.length;let i;return s="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{x(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(x(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,i]}function Xo(e,t,n,s,r,i,a,o,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=a&&0!==(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let y=0;y<h.dims;y++)c&&0!==(1<<y&o)&&h.numAddAxisAfterEllipsis++,1<<y&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};Jo(h,d);let p=!0,f=!0,g=!0;const m=[],b=[];for(let y=0;y<e.length;++y){if(0===d.strides[y])throw Error(`strides[${y}] must be non-zero`);const t=!!(d.shrinkAxisMask&1<<y),n=e[y];if(-1===n){m.push(t?1:-1);continue}const s=[d.beginMask&1<<y,d.endMask&1<<y],r=[d.strides[y]>0?0:-1,d.strides[y]>0?n:n-1];if(t&&d.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[y];const i=!!(d.beginMask&1<<y&&d.endMask&1<<y);if(d.beginValid&&d.endValid){if(t){const e=d.begin[y]<0?n+d.begin[y]:d.begin[y];if(d.begin[y]=e,d.end[y]=d.begin[y]+1,e<0||e>=n)throw Error(`slice index ${d.begin[y]} of dimension ${y} out of bounds.`)}else d.begin[y]=Yo(d.begin[y],0,d.strides[y],n,s,r),d.end[y]=Yo(d.end[y],1,d.strides[y],n,s,r);const e=1===d.strides[y]&&0===d.begin[y]&&d.end[y]===n;p=p&&e,f=f&&(0===y&&1===d.strides[y]||e)}else p=p&&1===d.strides[y]&&i,f=f&&(0===y&&1===d.strides[y]||i);let a,o=!1;if(d.beginValid&&d.endValid?(a=d.end[y]-d.begin[y],o=!0):t?(a=1,o=!0):i&&n>=0&&(a=d.strides[y]<0?-n:n,o=!0),o){let e;e=0===a||a<0!==d.strides[y]<0?0:Math.trunc(a/d.strides[y])+(a%d.strides[y]!==0?1:0),m.push(e)}else m.push(-1)}for(let y=0;y<d.finalShapeGatherIndices.length;++y){const e=d.finalShapeGatherIndices[y];e>=0?b.push(m[e]):e===_o&&b.push(1)}const x=b.filter(((e,t)=>d.finalShapeGatherIndices[t]!==_o));return{finalShapeSparse:x,finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function Jo(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(_o),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(Fo),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function Yo(e,t,n,s,r,i){if(r[t])return n>0?i[t]:i[t+1&1];{const t=e<0?s+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zo(e,t=null,n=!1){const s=si(e,"x","all","bool"),r={x:s},i={axis:t,keepDims:n};return qr.runKernel(be,r,i)}const Qo=ai({all_:Zo});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function el(e,t=null,n=!1){const s=si(e,"x","any","bool"),r={x:s},i={axis:t,keepDims:n};return qr.runKernel(xe,r,i)}const tl=ai({any_:el});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nl(e,t=0){const n=si(e,"x","argMax"),s={x:n},r={axis:t};return qr.runKernel(ye,s,r)}const sl=ai({argMax_:nl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rl(e,t,n,s,r="NHWC",i){const a=e[3],o=[...t,a],l=wl(r);return ol(e,o,n,i,s,null,null,l)}function il(e,t,n,s,r,i,a="channelsLast"){const[o,l]=dl(t);let u;if("channelsLast"===a)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,e[1],e[1]]}return ol(e,u,n,s,r,i,!1,a)}function al(e,t,n,s,r,i,a="NDHWC"){const[o,l,u]=pl(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return ll(e,c,n,s,r,!1,h,i)}function ol(e,t,n,s,r,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=dl(n),[b,x]=dl(s),y=fl(d,b),v=fl(p,x),{padInfo:w,outHeight:k,outWidth:I}=gl(r,u,c,g,m,y,v,i,o),S=a?f*h:f;let C;return"channelsFirst"===o?C=[l,S,k,I]:"channelsLast"===o&&(C=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:e,outShape:C,filterShape:t}}function ll(e,t,n,s,r,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,x,y]=pl(n),[v,w,k]=pl(s),I=fl(p,v),S=fl(f,w),C=fl(g,k),{padInfo:$,outDepth:N,outHeight:T,outWidth:E}=ml(r,u,c,h,b,x,y,I,S,C,o),R=i?m*d:m;let A;return"channelsFirst"===a?A=[l,R,N,T,E]:"channelsLast"===a&&(A=[l,N,T,E,R]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:T,outWidth:E,outChannels:R,padInfo:$,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function ul(e,t,n,s,r){null==s&&(s=hl(e,t,n));const i=e[0],a=e[1],o=bl((i-t+2*s)/n+1,r),l=bl((a-t+2*s)/n+1,r);return[o,l]}function cl(e,t,n,s,r,i){null==r&&(r=hl(e,t[0],s[0]));const a=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*r>=t[o]&&(a[o]=bl((e[o]-t[o]+2*r)/s[o]+1,i));return a}function hl(e,t,n,s=1){const r=fl(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function dl(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function pl(e){return"number"===typeof e?[e,e,e]:e}function fl(e,t){return t<=1?e:e+(e-1)*(t-1)}function gl(e,t,n,s,r,i,a,o,l){let u,c,h;if("number"===typeof e){const r=0===e?"VALID":"NUMBER";u={top:e,bottom:e,left:e,right:e,type:r};const a=ul([t,n],i,s,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+i-t),o=Math.max(0,(h-1)*r+a-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2),f=o-p;u={top:l,bottom:d,left:p,right:f,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/s),h=Math.ceil((n-a+1)/r);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1],m=0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT";u={top:d,bottom:p,left:f,right:g,type:m},c=bl((t-i+d+p)/s+1,o),h=bl((n-a+f+g)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}function ml(e,t,n,s,r,i,a,o,l,u,c){let h,d,p,f;if("valid"===e&&(e=0),"number"===typeof e){const g=0===e?"VALID":"NUMBER";h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:g};const m=cl([t,n,s,1],[o,l,u],1,[r,i,a],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/r),p=Math.ceil(n/i),f=Math.ceil(s/a);const e=(d-1)*r+o-t,c=(p-1)*i+l-n,g=(f-1)*a+u-s,m=Math.floor(e/2),b=e-m,x=Math.floor(c/2),y=c-x,v=Math.floor(g/2),w=g-v;h={top:x,bottom:y,left:v,right:w,front:m,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function bl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function xl(e){const[t,n,s]=dl(e);return 1===t&&1===n&&1===s}function yl(e,t){return xl(e)||xl(t)}function vl(e){return dl(e).every((e=>e>0))}function wl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function kl(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)x(I(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{x(I(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Il(e,t){const n=si(e,"x","reshape","string_or_numeric"),s={x:n},r={shape:t};return qr.runKernel(Sn,s,r)}const Sl=ai({reshape_:Il});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cl(e,t,n,s,r){const i=si(e,"x","avgPool","float32"),a=1;x(yl(n,a),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));let o=i,l=!1;3===i.rank&&(l=!0,o=Sl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),x(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),kl("avgPool",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let h=qr.runKernel($e,u,c);return h=da(h,i.dtype),l?Sl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const $l=ai({avgPool_:Cl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nl(e,t,n,s,r,i="NDHWC"){const a=si(e,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=Sl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),x(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),x("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),x("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),kl("avgPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:i};let h=qr.runKernel(Te,u,c);return h=da(h,o.dtype),l?Sl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Tl=ai({avgPool3d_:Nl});function El(e){let t;return t=0===e.rank||1===e.rank?Sl(e,[1,1,1,e.size]):2===e.rank?Sl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Sl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rl(e,t,n,s,r,i){null==i&&(i=.001);const a=si(e,"x","batchNorm"),o=si(t,"mean","batchNorm"),l=si(n,"variance","batchNorm");let u,c;null!=r&&(u=si(r,"scale","batchNorm")),null!=s&&(c=si(s,"offset","batchNorm")),x(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),x(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),x(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=El(a),d={x:h,scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:i},f=qr.runKernel(wt,d,p);return Sl(f,a.shape)}const Al=ai({batchNorm_:Rl});function _l(e,t,n,s,r,i){const a=si(e,"x","batchNorm"),o=si(t,"mean","batchNorm"),l=si(n,"variance","batchNorm");let u,c;return null!=r&&(u=si(r,"scale","batchNorm")),null!=s&&(c=si(s,"offset","batchNorm")),x(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),x(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),x(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&x(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&x(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Al(a,o,l,c,u,i)}const Fl=ai({batchNorm2d_:_l});function Dl(e,t,n,s,r,i){const a=si(e,"x","batchNorm"),o=si(t,"mean","batchNorm"),l=si(n,"variance","batchNorm");let u,c;return null!=r&&(u=si(r,"scale","batchNorm")),null!=s&&(c=si(s,"offset","batchNorm")),x(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),x(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),x(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&x(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&x(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Al(a,o,l,c,u,i)}const Ol=ai({batchNorm3d_:Dl});function Ll(e,t,n,s,r,i){const a=si(e,"x","batchNorm"),o=si(t,"mean","batchNorm"),l=si(n,"variance","batchNorm");let u,c;return null!=r&&(u=si(r,"scale","batchNorm")),null!=s&&(c=si(s,"offset","batchNorm")),x(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),x(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),x(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&x(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&x(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Al(a,o,l,c,u,i)}const Ml=ai({batchNorm4d_:Ll});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zl(e,t){let n=si(e,"broadcastTo","x");const s=n.shape;if(J(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();while(e.length<t.length)e.unshift(1);n=Sl(n,e)}const r=n.shape,i=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])i[u]=1;else if(1!==n.shape[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);const a=i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0));if(0===a.length)return fa(n);const o={x:n},l={reps:i};return qr.runKernel(ls,o,l)}const Pl=ai({broadcastTo_:zl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bl(e,t,n){const s=si(e,"x","clipByValue");if(x(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return qa(s.shape,t,s.dtype);const r={x:s},i={clipValueMin:t,clipValueMax:n};return qr.runKernel(Me,r,i)}const Wl=ai({clipByValue_:Bl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ul(e,t=0){x(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ri(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return fa(n[0]);const s=n,r={axis:t};return qr.runKernel(Be,s,r)}const Vl=ai({concat_:Ul});function Gl(e){return Vl(e,0)}const Hl=ai({concat1d_:Gl});function jl(e,t){return Vl(e,t)}const ql=ai({concat2d_:jl});function Kl(e,t){return Vl(e,t)}const Xl=ai({concat3d_:Kl});function Jl(e,t){return Vl(e,t)}const Yl=ai({concat4d_:Jl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zl(e,t,n,s,r="NHWC",i=[1,1],a){const o=si(e,"x","conv2d","float32"),l=si(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Sl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),x(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),x(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),kl("conv2d",s,a);const h="NHWC"===r?u.shape[3]:u.shape[1];x(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),x(yl(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),x(vl(i),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),x(vl(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},f=qr.runKernel(We,d,p);return c?Sl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Ql=ai({conv2d_:Zl});function eu(e,t,n,s,r="NWC",i=1,a){const o=si(e,"x","conv1d"),l=si(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Sl(o,[1,o.shape[0],o.shape[1]])),x(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),x(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),kl("conv1d",s,a),x(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),x(yl(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),x(vl(i),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),x(vl(n),(()=>"Error in conv1D: Stride should be larger than 0.")),x("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=Sl(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Sl(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=[1,n],f=[1,i],g="NHWC",m=Ql(d,h,p,s,g,f,a);return Sl(m,c?[m.shape[2],m.shape[3]]:[m.shape[0],m.shape[2],m.shape[3]])}const tu=ai({conv1d_:eu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nu(e,t,n,s,r,i="NHWC",a){x(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Sl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),x(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),x(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),x(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];x(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),x(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),kl("conv2dDerInput",r,a);const d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,inputShape:o},f=qr.runKernel(Ve,d,p);return u?Sl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const su=ai({conv2DBackpropInput_:nu});function ru(e,t,n,s,r,i){const a=si(e,"x","conv2dTranspose"),o=si(t,"filter","conv2dTranspose");return su(n,a,o,s,r,"NHWC",i)}const iu=ai({conv2dTranspose_:ru});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function au(e,t,n,s,r="NDHWC",i=[1,1,1]){const a=si(e,"x","conv3d"),o=si(t,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=Sl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),x(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),x(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),x(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),x(yl(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),x("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`)),x(vl(i),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),x(vl(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:i},d=qr.runKernel(Ge,c,h);return u?Sl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const ou=ai({conv3d_:au});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lu(e,t,n,s,r){x(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,a=t,o=!1;4===t.rank&&(o=!0,a=Sl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const l=i[4],u=a.shape[4];x(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),x(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),x(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),x(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),x(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:r,strides:s,inputShape:i},d=qr.runKernel(je,c,h);return o?Sl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const uu=ai({conv3DBackpropInput_:lu});function cu(e,t,n,s,r){const i=si(e,"x","conv3dTranspose"),a=si(t,"filter","conv3dTranspose");return uu(n,i,a,s,r)}const hu=ai({conv3dTranspose_:cu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function du(e,t,n,s=!1){const r=si(e,"x","denseBincount"),i=si(t,"weights","denseBincount");x("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),x(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),x(n>=0,(()=>`size must be non-negative, but got ${n}.`)),x(i.size===r.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`));const a={x:r,weights:i},o={size:n,binaryOutput:s};return qr.runKernel(Ze,a,o)}const pu=ai({denseBincount_:du});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fu(e,t,n,s,r="NHWC",i=[1,1],a){const o=si(e,"x","depthwiseConv2d","float32"),l=si(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Sl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),x(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),x(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];x(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),kl("depthwiseConv2d",s,a);const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},f=qr.runKernel(et,d,p);return c?Sl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const gu=ai({depthwiseConv2d_:fu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mu(e){const t=si(e,"x","elu","float32"),n={x:t};return qr.runKernel(ut,n)}const bu=ai({elu_:mu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xu(e,t){let n=si(e,"a","equal","string_or_numeric"),s=si(t,"b","equal","string_or_numeric");[n,s]=Mr(n,s),ro(n.shape,s.shape);const r={a:n,b:s};return qr.runKernel(dt,r)}const yu=ai({equal_:xu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vu(e){const t=si(e,"x","exp"),n={x:t};return qr.runKernel(pt,n)}const wu=ai({exp_:vu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ku(e,t=0){const n=si(e,"x","expandDims","string_or_numeric");x(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return qr.runKernel(ft,s,r)}const Iu=ai({expandDims_:ku});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Su(e,t){const n=si(e,"x","tile","string_or_numeric");x(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return qr.runKernel(ls,s,r)}const Cu=ai({tile_:Su});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $u(e,t,n,s="float32"){null==t&&(t=e);const r=ca([e,t],s),i=e<=t?e:t;for(let o=0;o<i;++o)r.set(1,o,o);const a=Sl(r.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return Cu(Iu(a,0),[n[0],1,1]);if(2===n.length)return Cu(Iu(Iu(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Cu(Iu(Iu(Iu(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const Nu=ai({eye_:$u});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tu(e){const t=si(e,"x","floor","float32"),n={x:t};return qr.runKernel(yt,n)}const Eu=ai({floor_:Tu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ru(e,t,n=0,s=0){const r=si(e,"x","gather"),i=si(t,"indices","gather","int32"),a={x:r,indices:i},o={axis:n,batchDims:s};return qr.runKernel(kt,a,o)}const Au=ai({gather_:Ru});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _u(e,t){let n=si(e,"a","greater","string_or_numeric"),s=si(t,"b","greater","string_or_numeric");[n,s]=Mr(n,s),ro(n.shape,s.shape);const r={a:n,b:s};return qr.runKernel(St,r)}const Fu=ai({greater_:_u});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Du(e,t){let n=si(e,"a","greaterEqual","string_or_numeric"),s=si(t,"b","greaterEqual","string_or_numeric");[n,s]=Mr(n,s),ro(n.shape,s.shape);const r={a:n,b:s};return qr.runKernel(Ct,r)}const Ou=ai({greaterEqual_:Du});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Lu(e,t=.2){const n=si(e,"x","leakyRelu"),s={x:n},r={alpha:t};return qr.runKernel(_t,s,r)}const Mu=ai({leakyRelu_:Lu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zu(e){const t=si(e,"x","log","float32"),n={x:t};return qr.runKernel(Lt,n)}const Pu=ai({log_:zu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bu(e){const t=si(e,"x","log1p"),n={x:t};return qr.runKernel(Mt,n)}const Wu=ai({log1p_:Bu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Uu(e,t=null,n=!1){const s=si(e,"x","max"),r={x:s},i={reductionIndices:t,keepDims:n};return qr.runKernel(Gt,r,i)}const Vu=ai({max_:Uu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gu(e,t=null,n=!1){let s=si(e,"x","sum");"bool"===s.dtype&&(s=da(s,"int32"));const r={x:s},i={axis:t,keepDims:n};return qr.runKernel(Gn,r,i)}const Hu=ai({sum_:Gu});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ju(e,t=-1){const n=si(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const s=Ba(((e,n)=>{const s=!0,r=Vu(e,t,!0),i=Za(e,r),a=Za(da(i,"float32"),Pu(Hu(wu(i),t,s)));n([a]);const o=(e,n)=>{const[s]=n,r=!0,i=wu(s);return Za(e,_a(Hu(e,t,r),i))};return{value:a,gradFunc:o}}));return s(n)}const qu=ai({logSoftmax_:ju});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ku(e,t){const n=si(e,"a","logicalAnd","bool"),s=si(t,"b","logicalAnd","bool");ro(n.shape,s.shape);const r={a:n,b:s};return qr.runKernel(zt,r)}const Xu=ai({logicalAnd_:Ku});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ju(e,t,n=!1,s=!1){let r=si(e,"a","matMul"),i=si(t,"b","matMul");[r,i]=Mr(r,i);const a={a:r,b:i},o={transposeA:n,transposeB:s};return qr.runKernel(Re,a,o)}const Yu=ai({matMul_:Ju});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zu(e,t,n,s,r){const i=si(e,"x","maxPool"),a=1;let o=i,l=!1;3===i.rank&&(l=!0,o=Sl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),x(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),x(yl(n,a),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),kl("maxPool",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},h=qr.runKernel(jt,u,c);return l?Sl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Qu=ai({maxPool_:Zu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ec(e,t=[1,1,1],n,s,r,i="NDHWC"){const a=si(e,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=Sl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),x(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),x("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),kl("maxPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:i},h=qr.runKernel(Kt,u,c);return l?Sl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const tc=ai({maxPool3d_:ec});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nc(e,t=null,n=!1){const s=si(e,"x","mean"),r={x:s},i={axis:t,keepDims:n};return qr.runKernel(Yt,r,i)}const sc=ai({mean_:nc});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rc(e,t=null,n=!1){const s=si(e,"x","min"),r={x:s},i={axis:t,keepDims:n};return qr.runKernel(Zt,r,i)}const ic=ai({min_:rc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ac(e,t){let n=si(e,"a","minimum"),s=si(t,"b","minimum");[n,s]=Mr(n,s),"bool"===n.dtype&&(n=da(n,"int32"),s=da(s,"int32")),ro(n.shape,s.shape);const r={a:n,b:s};return qr.runKernel(Qt,r)}const oc=ai({minimum_:ac});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function uc(e,t,n){const s=e.length+t.length,r=[];let i=0,a=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[i++]):r.push(t[a++]);return r}function cc(e,t){const n=[],s=e.length;for(let i=0;i<s;i++)-1===t.indexOf(i)&&n.push(e[i]);const r=t.map((t=>e[t]));return[n,r]}function hc(e,t){const n=t.map((e=>1));return uc(e,n,t)}function dc(e,t,n){x(lc(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function pc(e,t){if(lc(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function fc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function gc(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mc(e,t=null,n=!1){e=si(e,"x","moments");const s=T(t,e.shape),r=sc(e,s,n);let i=r.shape;n||(i=hc(r.shape,s));const a=La(Za(da(e,"float32"),Sl(r,i))),o=sc(a,s,n);return{mean:r,variance:o}}const bc=ai({moments_:mc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xc(e){const t=si(e,"x","neg"),n={x:t};return qr.runKernel(rn,n)}const yc=ai({neg_:xc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vc(e,t){let n=si(e,"a","notEqual","string_or_numeric"),s=si(t,"b","notEqual","string_or_numeric");[n,s]=Mr(n,s),ro(n.shape,s.shape);const r={a:n,b:s};return qr.runKernel(an,r)}const wc=ai({notEqual_:vc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kc(e,t,n=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i=si(e,"indices","oneHot","int32"),a={indices:i},o={dtype:r,depth:t,onValue:n,offValue:s};return qr.runKernel(hn,a,o)}const Ic=ai({oneHot_:kc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sc(e,t="float32"){if(J(e),"complex64"===t){const t=Sc(e,"float32"),n=Sc(e,"float32");return li(t,n)}const n=K(w(e),t);return qr.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cc(e,t="float32"){if(J(e),"complex64"===t){const t=Cc(e,"float32"),n=Sc(e,"float32");return li(t,n)}const n=q(w(e),t);return qr.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $c(e){const t=si(e,"x","onesLike"),n={x:t};return qr.runKernel(cn,n)}const Nc=ai({onesLike_:$c});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tc(e,t,n=0){const s=si(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},i={x:s};return qr.runKernel(pn,i,r)}const Ec=ai({pad_:Tc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rc(e,t){const n=si(e,"x","prelu"),s=si(t,"alpha","prelu"),r={x:n,alpha:s};return qr.runKernel(gn,r)}const Ac=ai({prelu_:Rc});var _c=n(377);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Fc{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=r||Math.random();this.random=_c.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;while(!n){let s,r,i;do{s=2*this.random()-1,r=2*this.random()-1,i=s*s+r*r}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*s*a,t=this.mean+this.stdDev*r*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Dc{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"===typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=_c.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Oc(e,t=0,n=1,s,r){if(J(e),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const i=new Fc(t,n,s,!1,r),a=ca(e,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const Lc=ai({randomNormal_:Oc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mc(e,t=0,n=1,s="float32",r){J(e);const i=ca(e,s),a=new Dc(t,n,null,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const zc=ai({randomUniform_:Mc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pc(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return qr.runKernel(vn,{},r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bc(e){const t=si(e,"x","relu"),n={x:t};return qr.runKernel(In,n)}const Wc=ai({relu_:Bc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Uc(e,t){const n=si(e,"x","reverse"),s={x:n},r={dims:t};return qr.runKernel(Rn,s,r)}const Vc=ai({reverse_:Uc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gc(e){const t=si(e,"x","selu"),n={x:t};return qr.runKernel(Ln,n)}const Hc=ai({selu_:Gc});function jc(e,t,n,s,r,i=[1,1],a="NHWC"){const o=si(e,"x","separableConv2d"),l=si(t,"depthwiseFilter","separableConv2d"),u=si(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Sl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");x(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),x(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),x(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),x(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),x(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];x(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=gu(c,l,s,r,a,i),g=1,m=Ql(f,u,g,"valid",a);return h?Sl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const qc=ai({separableConv2d_:jc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kc(e){const t=si(e,"x","sigmoid","float32"),n={x:t};return qr.runKernel(Wn,n)}const Xc=ai({sigmoid_:Kc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jc(e,t,n){const s=si(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:t,size:n};return qr.runKernel(Mn,r,i)}const Yc=ai({slice_:Jc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zc(e,t,n){const s=si(e,"x","slice1d");return x(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),Yc(s,[t],[n])}const Qc=ai({slice1d_:Zc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eh(e,t,n){const s=si(e,"x","slice2d");return x(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),Yc(s,t,n)}const th=ai({slice2d_:eh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nh(e,t,n){const s=si(e,"x","slice3d");return x(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),Yc(s,t,n)}const sh=ai({slice3d_:nh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rh(e,t,n){const s=si(e,"x","slice4d");return x(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),Yc(s,t,n)}const ih=ai({slice4d_:rh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ah(e,t=-1){const n=si(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return qr.runKernel(qn,s,r)}const oh=ai({softmax_:ah});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lh(e){const t=si(e,"x","softplus"),n={x:t};return qr.runKernel(Un,n)}const uh=ai({softplus_:lh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ch(e,t,n=0){const s=si(e,"x","split"),r={x:s},i={numOrSizeSplits:t,axis:n};return qr.runKernel(jn,r,i)}const hh=ai({split_:ch});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dh(e,t){const n=si(e,"x","squeeze","string_or_numeric");return Sl(n,E(n.shape,t).newShape)}const ph=ai({squeeze_:dh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fh(e,t=0){const n=ri(e,"tensors","stack","string_or_numeric");x(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&x(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return qr.runKernel(dn,s,r)}const gh=ai({stack_:fh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mh(e){const t=si(e,"x","tanh","float32"),n={x:t};return qr.runKernel(os,n)}const bh=ai({tanh_:mh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xh(e,t){v(e);const n=ei(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");const s=null;return ui(e,s,n,t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yh(e,t=0,n=1,s,r){if(J(e),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const i=new Fc(t,n,s,!0,r),a=ca(e,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const vh=ai({truncatedNormal_:yh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wh(e,t=0){const n=si(e,"x","unstack","string_or_numeric");x(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return qr.runKernel(ps,s,r)}const kh=ai({unstack_:wh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ih(e,t=!0,n,s){return qr.makeVariable(e,t,n,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sh(e,t,n){const s=si(t,"a","where"),r=si(n,"b","where"),i=si(e,"condition","where","bool"),a=ro(ro(i.shape,s.shape),r.shape),o=Pl(i,a),l=Pl(s,a),u=Pl(r,a),c={condition:o,t:l,e:u};return qr.runKernel(On,c)}const Ch=ai({where_:Sh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $h(e){const t=si(e,"input","imag"),n={input:t};return qr.runKernel(Tt,n)}const Nh=ai({imag_:$h});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Th(e){const t=si(e,"input","real"),n={input:t};return qr.runKernel(wn,n)}const Eh=ai({real_:Th});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rh(e,t,n){const s=si(e,"x","transpose");if(null==t&&(t=s.shape.map(((e,t)=>t)).reverse()),x(s.rank===t.length,(()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`)),t.forEach((e=>{x(e>=0&&e<s.rank,(()=>"All entries in 'perm' must be between 0 and "+(s.rank-1)+` but got ${t}`))})),s.rank<=1)return s.clone();const r={x:s},i={perm:t};return"complex64"===s.dtype?va((()=>{let e=Eh(s),t=Nh(s);return e=qr.runKernel(hs,{x:e},i),t=qr.runKernel(hs,{x:t},i),n&&(t=yc(t)),li(e,t)})):qr.runKernel(hs,r,i)}const Ah=ai({transpose_:Rh});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _h(e,t){if(null==t)return e.shape.slice();if(k(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fh(e,t,n,s){const r=si(e,"x","dropout");if(x("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),x(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof $r?r.clone():r;const i=_h(r,n),a=1-t,o=Ra(Eu($a(zc(i,0,1,"float32",s),a)),a);return _a(r,o)}const Dh=ai({dropout_:Fh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Oh(e){x("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return qr.runKernel(mt,t)}const Lh=ai({fft_:Oh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mh(e,t){x("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,r=Yc(e,s,i),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=Vl([e,Sc(s)],e.shape.length-1),n=t}else r=e;const i=za(r),a=Sl(li(r,i),[s,n]),o=Lh(a),l=Math.floor(n/2)+1,u=Eh(o),c=Nh(o),h=hh(u,[l,n-l],u.shape.length-1),d=hh(c,[l,n-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,Sl(li(h[0],d[0]),p)}const zh=ai({rfft_:Mh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ph(e){x("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return qr.runKernel(Nt,t)}const Bh=ai({ifft_:Ph});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wh(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=Sl(e,[n,t]);s=Bh(r)}else{const r=[n,2*(t-1)],i=Sl(Eh(e),[n,t]),a=Sl(Nh(e),[n,t]),o=Vc(Yc(i,[0,1],[n,t-2]),1),l=_a(Vc(Yc(a,[0,1],[n,t-2]),1),Wa(-1)),u=Vl([i,o],1),c=Vl([a,l],1),h=Sl(li(u,c),[r[0],r[1]]);s=Bh(h)}if(s=Eh(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=Sl(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}const Uh=ai({irfft_:Wh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vh(e,t,n,s,r,i="NHWC",a){let o=e;3===e.rank&&(o=Sl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Sl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),x(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),x(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),x(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];x(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),x(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),kl("conv2dDerFilter",r,a);const h={x:o,dy:l},d={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,filterShape:n};return qr.runKernel(Ue,h,d)}const Gh=ai({conv2DBackpropFilter_:Vh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hh(e){const t=si(e,"x","relu6"),n={x:t};return qr.runKernel(En,n)}const jh=ai({relu6_:Hh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qh(e,t=0){const n=si(e,"x","step"),s={x:n},r={alpha:t};return qr.runKernel(ms,s,r)}const Kh=ai({step_:qh});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return _a(e,Kh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Jh(e,t){let n=t;const s=so(e.shape,t.shape);return s.length>0&&(n=Hu(n,s)),Sl(n,e.shape)}function Yh(e,t,n,s){if("linear"===t)return e;if("relu"===t)return Wc(e);if("elu"===t)return bu(e);if("relu6"===t)return jh(e);if("prelu"===t)return Ac(e,n);if("leakyrelu"===t)return Mu(e,s);if("sigmoid"===t)return Xc(e);throw new Error(`Unknown fused activation ${t}.`)}const Zh=(e,t)=>{const n=e>0;return!n||"linear"===t};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qh({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Zh(qr.state.gradientDepth,l)){x("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Ql(e,t,n,s,r,i,a);return null!=o&&(h=$a(h,o)),Yh(h,l,u,c)}const h=si(e,"x","conv2d","float32"),d=si(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Sl(h,[1,h.shape[0],h.shape[1],h.shape[2]])),x(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),x(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),kl("fused conv2d",s,a);const g="NHWC"===r?p.shape[3]:p.shape[1];x(d.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`)),x(yl(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const m=ol(p.shape,d.shape,n,i,s,a);let b,y;if(null!=o&&(b=si(o,"bias","fused conv2d"),[b]=Mr(b,h),"NHWC"===r?ro(m.outShape,b.shape):(x(b.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`)),x(0===b.shape.length||b.shape[0]===m.outChannels||1===b.shape[0],(()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${m.outChannels})`)))),null!=u){const e=u.shape;if(x(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)x(1===e[0]||e[0]===m.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${m.outChannels}).`));else if(3===e.length)try{ro(e,m.outShape)}catch(I){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(t)}y=si(u,"prelu weights","fused conv2d")}const v=(e,t)=>{x("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));const[a,o,u,c]=t,h=Xh(e,u,l);x(xl(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=su(o.shape,h,a,n,s),p=Gh(o,h,a.shape,n,s),f=[d,p];if(null!=c){const e=Jh(c,h);f.push(e)}return f},w={x:p,filter:d,bias:b,preluActivationWeights:y},k={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const e=Ba(((e,t,n)=>{let s=qr.runKernel(vs,w,k);return n([t,e,s]),f&&(s=Sl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(p,d)}{const e=Ba(((e,t,n,s)=>{let r=qr.runKernel(vs,w,k);return s([t,e,r,n]),f&&(r=Sl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(p,d,b)}}const ed=ai({fusedConv2d_:Qh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function td(e,t,n,s,r,i=[1,1],a){let o=e;3===e.rank&&(o=Sl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Sl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:a,dilations:i,filterShape:n};return qr.runKernel(tt,u,c)}const nd=ai({depthwiseConv2dNativeBackpropFilter_:td});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sd(e,t,n,s,r,i=[1,1],a){let o=t,l=!1;3===t.rank&&(l=!0,o=Sl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:a,dilations:i,inputShape:e},h=qr.runKernel(nt,u,c);return l?Sl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const rd=ai({depthwiseConv2dNativeBackpropInput_:sd});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function id({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(!1===Zh(qr.state.gradientDepth,i)){let l=Yu(e,t,n,s);return null!=r&&(l=$a(l,r)),Yh(l,i,a,o)}let l=si(e,"a","fused matMul"),u=si(t,"b","fused matMul");[l,u]=Mr(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=w(f),b=w(g);x(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const y=ro(l.shape.slice(0,-2),u.shape.slice(0,-2)),v=y.concat([d,p]),k=Sl(l,n?[m,c,d]:[m,d,c]),I=Sl(u,s?[b,p,h]:[b,h,p]);let S,C;null!=r&&(S=si(r,"bias","fused matMul"),[S]=Mr(S,l),ro(v,S.shape)),null!=a&&(C=si(a,"prelu weights","fused matMul"));const $=(e,t)=>{const[a,o,l,u]=t,c=Xh(Sl(e,l.shape),l,i);let h,d;if(n||s?!n&&s?(h=Yu(c,o,!1,!1),d=Yu(c,a,!0,!1)):n&&!s?(h=Yu(o,c,!1,!0),d=Yu(a,c,!1,!1)):(h=Yu(o,c,!0,!0),d=Yu(c,a,!0,!0)):(h=Yu(c,o,!1,!0),d=Yu(a,c,!0,!1)),null!=r){const e=Jh(u,c);return[h,d,e]}return[h,d]},N={a:k,b:I,bias:S,preluActivationWeights:C},T={transposeA:n,transposeB:s,activation:i,leakyreluAlpha:o};if(null==r){const e=Ba(((e,t,n)=>{const s=qr.runKernel(ys,N,T);return n([e,t,s]),{value:Sl(s,v),gradFunc:$}}));return e(k,I)}{const e=Ba(((e,t,n,s)=>{const r=qr.runKernel(ys,N,T);return s([e,t,r,n]),{value:Sl(r,v),gradFunc:$}}));return e(k,I,S)}}const ad=ai({fusedMatMul_:id});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function od(e,t,n){if(v(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=ei(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ui(e,t,s,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ld(e,t,n,s,r="bilinear",i=0){const a=si(e,"image","cropAndResize"),o=si(t,"boxes","cropAndResize","float32"),l=si(n,"boxInd","cropAndResize","int32"),u=o.shape[0];x(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),x(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),x(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),x(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),x(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),x("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:a,boxes:o,boxInd:l},h={method:r,extrapolationValue:i,cropSize:s},d=qr.runKernel(Ye,c,h);return d}const ud=ai({cropAndResize_:ld});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cd(e){const t=si(e,"image","flipLeftRight","float32");x(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t},s=qr.runKernel(xt,n,{});return s}const hd=ai({flipLeftRight_:cd});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dd(e){const t=si(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];x(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),x(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Cu(t,r)}const pd=ai({grayscaleToRGB_:dd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fd(e,t,n=0,s=.5){const r=si(e,"image","rotateWithOffset","float32");x(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const i={image:r},a={radians:t,fillValue:n,center:s},o=qr.runKernel(xs,i,a);return o}const gd=ai({rotateWithOffset_:fd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function md(e,t,n,s,r,i){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=e.shape[0];return n=Math.min(n,a),x(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),x(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),x(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),x(1===t.rank,(()=>"scores must be a 1D tensor")),x(t.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`)),x(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bd(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=si(e,"boxes","nonMaxSuppression","float32"),a=si(t,"scores","nonMaxSuppression","float32"),o=md(i,a,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return qr.runKernel(on,{boxes:i,scores:a},l)}const xd=ai({nonMaxSuppression_:bd});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yd(e,t,n){const s=vd(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function vd(e,t,n){return kd(e,t,n||wd)}function wd(e,t){return e>t?1:e<t?-1:0}function kd(e,t,n){let s=0,r=e.length,i=0,a=!1;while(s<r){i=s+(r-s>>>1);const o=n(t,e[i]);o>0?s=i+1:(r=i,a=!o)}return a?s:-s-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Id(e,t,n,s,r){return $d(e,t,n,s,r,0)}function Sd(e,t,n,s,r,i){return $d(e,t,n,s,r,0,!1,i,!0)}function Cd(e,t,n,s,r,i){return $d(e,t,n,s,r,i,!0)}function $d(e,t,n,s,r,i,a=!1,o=!1,l=!1){const u=[];for(let m=0;m<t.length;m++)t[m]>r&&u.push({score:t[m],boxIndex:m,suppressBeginIndex:0});u.sort(Ed);const c=i>0?-.5/i:0,h=[],d=[];while(h.length<n&&u.length>0){const t=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=t;if(n<r)break;let o=!1;for(let l=h.length-1;l>=a;--l){const n=Nd(e,i,h[l]);if(n>=s){o=!0;break}if(t.score=t.score*Td(s,c,n),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(i),d.push(t.score)):t.score>r&&yd(u,t,Ed))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return a&&(g["selectedScores"]=d),l&&(g["validOutputs"]=p),g}function Nd(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),i=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(i,u),m=Math.max(a,c),b=Math.min(o,h),x=Math.min(l,d),y=Math.max(b-g,0)*Math.max(x-m,0);return y/(p+f-y)}function Td(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function Ed(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Rd(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=si(e,"boxes","nonMaxSuppressionAsync"),a=si(t,"scores","nonMaxSuppressionAsync"),o=md(i,a,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=Id(u,c,n,s,r);return i!==e&&i.dispose(),a!==t&&a.dispose(),xh(h,"int32")}const Ad=Rd;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _d(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=si(e,"boxes","nonMaxSuppression"),o=si(t,"scores","nonMaxSuppression"),l=md(a,o,n,s,r,i);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u={boxes:a,scores:o},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i},h=qr.runKernel(un,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const Fd=ai({nonMaxSuppressionWithScore_:_d});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Dd(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=si(e,"boxes","nonMaxSuppressionAsync"),o=si(t,"scores","nonMaxSuppressionAsync"),l=md(a,o,n,s,r,i);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=Cd(c,h,n,s,r,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:xh(d,"int32"),selectedScores:xh(p)}}const Od=Dd;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ld(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=si(e,"boxes","nonMaxSuppression"),o=si(t,"scores","nonMaxSuppression"),l=md(a,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:a,scores:o},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:i},f=qr.runKernel(ln,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const Md=ai({nonMaxSuppressionPadded_:Ld});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function zd(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=si(e,"boxes","nonMaxSuppressionAsync"),o=si(t,"scores","nonMaxSuppressionAsync"),l=md(a,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:g}=Sd(d,p,u,c,h,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:xh(f,"int32"),validOutputs:Wa(g,"int32")}}const Pd=zd;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bd(e,t,n=!1,s=!1){const r=si(e,"images","resizeBilinear");x(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),x(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),x(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=r,a=!1;3===r.rank&&(a=!0,i=Sl(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:s,size:t},u=qr.runKernel(Nn,o,l);return a?Sl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Wd=ai({resizeBilinear_:Bd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ud(e,t,n=!1,s=!1){const r=si(e,"images","resizeNearestNeighbor");x(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),x(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),x("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),x(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=r,a=!1;3===r.rank&&(a=!0,i=Sl(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:s,size:t},u=qr.runKernel(Cn,o,l);return a?Sl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Vd=ai({resizeNearestNeighbor_:Ud});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gd(e,t,n){const s=si(e,"x","bincount"),r=si(t,"weights","bincount");x("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),x(n>=0,(()=>`size must be non-negative, but got ${n}.`)),x(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const i={x:s,weights:r},a={size:n};return qr.runKernel(_e,i,a)}const Hd=ai({bincount_:Gd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jd(e,t){let n=si(e,"a","lessEqual","string_or_numeric"),s=si(t,"b","lessEqual","string_or_numeric");[n,s]=Mr(n,s),ro(n.shape,s.shape);const r={a:n,b:s};return qr.runKernel(Dt,r)}const qd=ai({lessEqual_:jd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kd(e){const t=si(e,"x","round"),n={x:t};return qr.runKernel(An,n)}const Xd=ai({round_:Kd});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jd(e,t="binary",n=!1,s=.5){const r=si(e,"image","threshold"),i=.2989,a=.587,o=.114,l=r.shape[0]*r.shape[1];let u,c,h,d,p=_a(xh([s]),255);if(x(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),x(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),x("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),x("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[u,c,h]=hh(r,[1,1,1],-1);const e=_a(u,i),t=_a(c,a),n=_a(h,o);d=$a($a(e,t),n)}else d=e;if("otsu"===t){const e=Hd(da(Xd(d),"int32"),ci([]),256);p=Yd(e,l)}const f=n?qd(d,p):Fu(d,p),g=da(_a(f,255),"int32");return g}function Yd(e,t){let n,s,r,i,a,o,l=xh([-1]),u=xh([0]),c=xh([0]);for(let h=0;h<e.size-1;h++){n=Yc(e,0,h+1),s=Yc(e,h+1),a=Ra(Hu(n),t),o=Ra(Hu(s),t);const d=Hu(_a(n,Pc(0,n.size)));r=Ra(d,Hu(n));const p=qa(s.shape,n.size),f=$a(Pc(0,s.size),p),g=_a(s,f);i=Ra(Hu(g),Hu(s));const m=Za(r,i),b=Za(r,i),x=_a(a,o);c=_a(_a(x,m),b);const y=Fu(c,u);u=Ch(y,c,u),l=Ch(y,xh([h]),l)}return l}const Zd=ai({threshold_:Jd});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qd(e,t,n="nearest",s="constant",r=0,i){const a=si(e,"image","transform","float32"),o=si(t,"transforms","transform","float32");x(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),x(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),x(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:a,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:i};return qr.runKernel(cs,l,u)}const ep=ai({transform_:Qd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tp(e,t,n){x(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),x(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=si(e,"a","bandPart");x(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[i,a]=s.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);t<0&&(t=i),n<0&&(n=a);const o=Sl(Pc(0,i,1,"int32"),[-1,1]),l=Pc(0,a,1,"int32"),u=Za(o,l),c=Xu(qd(u,Wa(+t,"int32")),Ou(u,Wa(-n,"int32"))),h=Sc([i,a],s.dtype);return Sl(gh(kh(Sl(s,[-1,i,a])).map((e=>Ch(c,e,h)))),r)}const np=ai({bandPart_:tp});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sp(e,t="euclidean",n=null,s=!1){e=si(e,"x","norm");const r=rp(e,t,n);let i=r.shape;if(s){const t=T(n,e.shape);i=hc(r.shape,t)}return Sl(r,i)}function rp(e,t,n=null){if(0===e.rank)return to(e);if(1!==e.rank&&null===n)return rp(Sl(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Hu(to(e),n);if(t===1/0)return Vu(to(e),n);if(t===-1/0)return ic(to(e),n);if("euclidean"===t||2===t)return Da(Hu(Ja(to(e),Wa(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Vu(Hu(to(e),n[0]),n[1]-1);if(t===1/0)return Vu(Hu(to(e),n[1]),n[0]);if(t===-1/0)return ic(Hu(to(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Da(Hu(La(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const ip=ai({norm_:sp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ap(e){let t;if(Array.isArray(e)){t=!1,x(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)x(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=hh(e,e.shape[0],0).map((e=>ph(e,[0])));x(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let r=0;r<e.length;++r)n.push(qr.tidy((()=>{let e=s[r];if(r>0)for(let t=0;t<r;++t){const s=_a(Hu(_a(n[t],e)),n[t]);e=Za(e,s)}return Ra(e,ip(e,"euclidean"))})));return t?gh(n,0):n}const op=ai({gramSchmidt_:ap});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lp(e,t=!1){if(x(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return up(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=kh(Sl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],i=[];s.forEach((e=>{const[n,s]=up(e,t);r.push(n),i.push(s)}));const a=Sl(gh(r,0),e.shape),o=Sl(gh(i,0),e.shape);return[a,o]}}function up(e,t=!1){return qr.tidy((()=>{x(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=Nu(n),i=fa(e);const a=od([[1]],[1,1]);let o=fa(a);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=i,l=o,u=r;[o,i,r]=qr.tidy((()=>{const t=Yc(i,[e,e],[n-e,1]),l=ip(t),u=Yc(i,[e,e],[1,1]),c=Ch(Fu(u,0),od([[-1]]),od([[1]])),h=Za(u,_a(c,l)),d=Ra(t,h);o=1===d.shape[0]?fa(a):Vl([a,Yc(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=yc(Ra(Yu(c,h),l)),f=Yc(i,[e,0],[n-e,s]),g=_a(p,o),m=Ah(o);if(0===e)i=Za(f,Yu(g,Yu(m,f)));else{const t=Za(f,Yu(g,Yu(m,f)));i=Vl([Yc(i,[0,0],[e,s]),t],0)}const b=Ah(g),x=Yc(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Za(x,Yu(Yu(x,o),b));else{const t=Za(x,Yu(Yu(x,o),b));r=Vl([Yc(r,[0,0],[n,e]),t],1)}return[o,i,r]})),wa([t,l,u])}return!t&&n>s&&(r=Yc(r,[0,0],[n,s]),i=Yc(i,[0,0],[s,s])),[r,i]}))}const cp=ai({qr_:lp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var hp;(function(e){e[e["NONE"]=0]="NONE",e[e["MEAN"]=1]="MEAN",e[e["SUM"]=2]="SUM",e[e["SUM_BY_NONZERO_WEIGHTS"]=3]="SUM_BY_NONZERO_WEIGHTS"})(hp||(hp={}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dp(e,t){let n=si(e,"a","squaredDifference"),s=si(t,"b","squaredDifference");[n,s]=Mr(n,s),ro(n.shape,s.shape);const r={a:n,b:s},i={};return qr.runKernel(Qn,r,i)}const pp=ai({squaredDifference_:dp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fp(e,t=null,n=!1){const s=si(e,"x","logSumExp"),r=T(t,s.shape),i=Vu(s,r,!0),a=Za(s,i),o=wu(a),l=Hu(o,r),u=Pu(l),c=$a(Sl(i,u.shape),u);if(n){const e=hc(c.shape,r);return Sl(c,e)}return c}const gp=ai({logSumExp_:fp});const mp={flipLeftRight:hd,grayscaleToRGB:pd,resizeNearestNeighbor:Vd,resizeBilinear:Wd,rotateWithOffset:gd,cropAndResize:ud,nonMaxSuppression:xd,nonMaxSuppressionAsync:Ad,nonMaxSuppressionWithScore:Fd,nonMaxSuppressionWithScoreAsync:Od,nonMaxSuppressionPadded:Md,nonMaxSuppressionPaddedAsync:Pd,threshold:Zd,transform:ep},bp={bandPart:np,gramSchmidt:op,qr:cp};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class xp{static sgd(e){return new lo(e)}static momentum(e,t,n=!1){return new uo(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new co(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Qa(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new ja(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new oo(e,t,n,s,r)}static adagrad(e,t=.1){return new Ka(e,t)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const yp=xp,vp=(()=>"undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e())();function wp(){return new Promise((e=>vp((()=>e()))))}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kp(e,t){const n=e[0].length;e.forEach(((e,t)=>{x(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),x(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let i=0;i<n;i++)x(i===t||e[i]===s[i],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Ip(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Sp;function Cp(e,t,n){let s=new Array;if(null==n&&null==t)return s;if(null==t)while(s.length<e+n.length)s.push(-1);else s=t.slice();if(null==n)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const i=n[r],a=s[s.length-n.length+r],o=s[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${i} but shape[${r+e}] = ${o}`)}else s[a]=i}return s}function $p(e){const t={FIRST_DIM_SIZE:Sp.FIRST_DIM_SIZE,VALUE_ROWIDS:Sp.VALUE_ROWIDS,ROW_LENGTHS:Sp.ROW_LENGTHS,ROW_SPLITS:Sp.ROW_SPLITS,ROW_LIMITS:Sp.ROW_LIMITS,ROW_STARTS:Sp.ROW_STARTS},n=[];for(const s of e){if(!(s in t))break;n.push(t[s])}return n}function Np(e){return 0===e.length?0:e[0]===Sp.FIRST_DIM_SIZE?e.length-1:e.length}function Tp(e,t){if(null==e||null==t)return;const n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const n=e[r],s=t[r+1];if(n>=0&&s>=0&&1!==n&&n!==s)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${s}`)}}(function(e){e[e["FIRST_DIM_SIZE"]=0]="FIRST_DIM_SIZE",e[e["VALUE_ROWIDS"]=1]="VALUE_ROWIDS",e[e["ROW_LENGTHS"]=2]="ROW_LENGTHS",e[e["ROW_SPLITS"]=3]="ROW_SPLITS",e[e["ROW_LIMITS"]=4]="ROW_LIMITS",e[e["ROW_STARTS"]=5]="ROW_STARTS"})(Sp||(Sp={}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ep=30;function Rp(e){return e<=Ep?e:U(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ap(e,t,n){const s=n*("number"===typeof e?e:e[0]),r=t*("number"===typeof e?e:e[1]);return[s,r]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _p(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function Fp(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2===1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function Dp(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let i=1;i<e.length;++i)i<=t.length?s?r.push(t[i-1]*e[i]):r.push(e[i]/t[i-1]):r.push(e[i]);return r}function Op(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function Lp(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}function Mp(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===w(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,i=r[r.length-1];let a=1;for(let h=0;h<r.length-1;++h)a*=r[h];const o=e.shape,l=r.slice();l.pop();let u=1;for(let h=i;h<n;++h)u*=o[h],l.push(o[h]);const c=[...V(e.shape).map((e=>e/u)),1].slice(0,i);return[l,a,u,c]}function zp(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(i+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(i+" update.rank != "+(r+e.length-s));for(let a=0;a<r;++a)if(n.shape[a]!==t.shape[a])throw new Error(i+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<n.rank-r;++a)if(n.shape[a+r]!==e[a+s])throw new Error(i+` updates.shape[${a+r}] (${n.shape[a+r]}) != shape[${a+r}] (${e[a+r]})`)}function Pp(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}zp(n,t,e)}function Bp(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,i=n.length;let a=1;for(let h=r;h<i;++h)a*=n[h];const o=r<1?1:r,l=w(t.shape)/o,u=[...V(n.slice(0,r)),1],c=w(n);return{sliceRank:r,numUpdates:l,sliceSize:a,strides:u,outputSize:c}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Wp=1.7580993408473768,Up=1.0507009873554805,Vp=.3275911,Gp=.254829592,Hp=-.284496736,jp=1.421413741,qp=-1.453152027,Kp=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xp(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Jp(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Yp(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function Zp(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function Qp(e,t){const n=e[2*t],s=e[2*t+1];return{real:n,imag:s}}function ef(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function tf(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const i=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:n,imag:s}}function nf(e,t,n){const s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),i=Math.sin(s);return{real:r,imag:i}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const sf="->",rf=/->/g,af=",",of="...";function lf(e,t){e=e.replace(/\s/g,"");const n=(e.length-e.replace(rf,"").length)/sf.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${sf}").`);const[s,r]=e.split(sf);x(-1===s.indexOf(of),(()=>`The ellipsis notation ("${of}") is not supported yet.`));const i=s.split(af),a=i.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<r.length;++d){const e=r[d];if(!i.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<s.length;++d){const e=s[d];-1===o.indexOf(e)&&e!==af&&o.push(e)}const l=new Array(i.length);for(let d=0;d<a;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let e=0;e<i[d].length;++e)l[d].push(o.indexOf(i[d][e]))}const u=o.length,c=r.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function uf(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const s=[];for(let r=0;r<e;++r)-1===n[r]&&s.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function cf(e,t,n){const s=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===s[t[r][n]]?s[t[r][n]]=e[n]:x(s[t[r][n]]===e[n],(()=>`Expected dimension ${s[t[r][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function hf(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let a=0;a<r;++a)s.push([]);const i=[];for(let a=0;a<n.length;++a){const e=n[a],r=pf(t,e);for(const t of r)-1===i.indexOf(t)&&(s[a].push(t),i.push(t))}return{path:n,steps:s}}function df(e){return e.every(((e,t)=>e===t))}function pf(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function ff(e,t,n=0){let s=[];if("number"===typeof t)x(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);x(r<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const s=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-s}x(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function mf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function bf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function yf(e,t){return`size ${e} must be non-negative, not ${t}`}function vf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function wf(e,t){const n=w(e),s=w(t);return`Input to reshape is a SparseTensor with ${n}\n  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function kf(e,t){const n=w(e),s=w(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function If(){return"segment ids must be >= 0"}function Sf(){return"segment ids are not increasing"}function Cf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function $f(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nf(e,t){let n,s=!1;e<=Ep?(n=e,s=!0):n=U(e,Math.floor(Math.sqrt(e)));while(!s)n>t||n===e?s=!0:n=U(e,n+1);return n}function Tf(e,t,n){const s=[],r=e.length;for(let i=0;i<r;i++)i!==t?s.push(e[i]):s.push(n);return s}function Ef(e,t,n,s){const r=t.shape.length,i=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${i}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const a=e.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=s;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=s;h<r;h++)o.push(t.shape[h]);for(let h=n+1;h<i;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rf(e){try{return e.map((e=>nr(e)))}catch(eX){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${eX}`)}}function Af(e){return e.map((e=>tr(e)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _f(e,t){const n=[];for(let i=0;i<t.length;i++)t[i]&&n.push(i);const s=ca(e,"int32"),r=ca([n.length,e.length],"int32");for(let i=0;i<n.length;i++){const t=s.indexToLoc(n[i]),a=i*e.length;r.values.set(t,a)}return r.toTensor()}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
po();
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ff={kernelName:de,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(e,Kh(da(n,"float32"),-1))}}},Df={kernelName:pe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=La(da(n,"float32")),s=Da(Za(Wa(1),t));return yc(Ra(e,s))}}}},Of={kernelName:fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Da(Za(La(da(n,"float32")),1));return Ra(e,t)}}}},Lf={kernelName:ge,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ro(n.shape,s.shape),i=()=>{let t=e;const s=so(n.shape,r);return s.length>0&&(t=Hu(t,s)),Sl(t,n.shape)},a=()=>{let t=e;const n=so(s.shape,r);return n.length>0&&(t=Hu(t,n)),Sl(t,s.shape)};return{a:i,b:a}}},Mf={kernelName:me,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},zf={kernelName:ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>za(n)}}},Pf={kernelName:ve,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>za(n)}}},Bf={kernelName:we,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,Da(Za(Wa(1),La(da(n,"float32")))))}}},Wf={kernelName:ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Da($a(Wa(1),La(da(n,"float32"))));return Ra(e,t)}}}},Uf={kernelName:Ce,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ro(n.shape,s.shape),i=()=>{const t=$a(La(n),La(s));let i=_a(e,Ra(s,t));const a=so(n.shape,r);return a.length>0&&(i=Hu(i,a)),Sl(i,n.shape)},a=()=>{const t=$a(La(n),La(s));let i=yc(_a(e,Ra(n,t)));const a=so(s.shape,r);return a.length>0&&(i=Hu(i,a)),Sl(i,s.shape)};return{a:i,b:a}}},Vf={kernelName:Ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,$a(La(da(n,"float32")),1))}}},Gf={kernelName:Se,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,Za(Wa(1),La(da(n,"float32"))))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hf(e,t,n,s,r,i){const a=si(e,"dy","avgPool3dGrad"),o=si(t,"input","avgPool3dGrad");let l=a,u=o,c=!1;4===o.rank&&(c=!0,l=Sl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=Sl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),x(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),x(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),kl("avgPool3dGrad",r,i);const h={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:i},p=qr.runKernel(Ee,h,d);return c?Sl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const jf=ai({avgPool3dGrad_:Hf}),qf={kernelName:Te,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>jf(e,s,r,i,a,o)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kf(e,t,n,s,r){const i=si(e,"dy","avgPoolGrad"),a=si(t,"input","avgPoolGrad");x(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=Sl(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=Sl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),x(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),x(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},d=qr.runKernel(Ne,c,h);return u?Sl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Xf=ai({avgPoolGrad_:Kf}),Jf={kernelName:$e,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:i,pad:a}=n;return{x:()=>Xf(e,s,r,i,a)}}},Yf={kernelName:Re,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>Yu(e,r,!1,!1),b:()=>Yu(e,s,!0,!1)}:i&&!a?{a:()=>Yu(r,e,!1,!0),b:()=>Yu(s,e,!1,!1)}:{a:()=>Yu(r,e,!0,!0),b:()=>Yu(e,s,!0,!0)}:{a:()=>Yu(e,r,!1,!0),b:()=>Yu(s,e,!0,!1)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zf(e,t,n){const s=si(e,"x","spaceToBatchND");x(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),x(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),x(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},i={blockShape:t,paddings:n};return qr.runKernel(Hn,r,i)}const Qf=ai({spaceToBatchND_:Zf}),eg={kernelName:Ae,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>Qf(e,s,r)}}},tg={kernelName:Fe,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,i=s.shape,a=Array.from(i);for(let l=r.length-1;l>=0;l--)if(r[l]===i[l])a[l]=1;else if(1!==r[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const o=[];for(let l=0;l<a.length;l++)a[l]>1&&o.push(l);return{x:()=>Hu(e,o,!0)}}},ng={kernelName:Oe,gradFunc:e=>({x:()=>e.clone()})},sg={kernelName:Le,gradFunc:e=>({x:()=>za(e)})},rg={kernelName:Me,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:i}=n;return{x:()=>Ch(Xu(Ou(s,r),qd(s,i)),e,za(e))}}},ig={kernelName:Pe,inputsToSave:["x"],gradFunc:Ff.gradFunc},ag={kernelName:Be,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,i=T(r,t[0].shape)[0],a=s.map((e=>e[i])),o=hh(e,a,i);return o.map((e=>()=>e))}},og={kernelName:We,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return x(xl(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>su(s.shape,e,r,a,o,l),filter:()=>Gh(s,e,r.shape,a,o,l)}}},lg={kernelName:Ve,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Ql(e,r,i,a,o,1,l),filter:()=>Gh(e,s,r.shape,i,a,o,l)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ug(e,t,n,s,r){let i=e;4===e.rank&&(i=Sl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let a=t;4===a.rank&&(a=Sl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),x(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),x(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),x(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),x(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),x(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:s,pad:r,filterShape:n};return qr.runKernel(He,o,l)}const cg=ai({conv3DBackpropFilter_:ug}),hg={kernelName:Ge,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:i}=n;x(xl(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[a,o]=t;return{x:()=>uu(a.shape,e,o,r,i),filter:()=>cg(a,e,o.shape,r,i)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dg(e){const t=si(e,"x","sin","float32"),n={x:t};return qr.runKernel(zn,n)}const pg=ai({sin_:dg}),fg={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(yc(pg(da(n,"float32"))),e)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gg(e){const t=si(e,"x","sinh"),n={x:t};return qr.runKernel(Pn,n)}const mg=ai({sinh_:gg}),bg={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(mg(da(n,"float32")),e)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xg(e,t=0,n=!1,s=!1){const r=si(e,"x","cumsum"),i={x:r},a={axis:t,exclusive:n,reverse:s};return qr.runKernel(Je,i,a)}const yg=ai({cumsum_:xg}),vg={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:i,reverse:a}=n;return{x:()=>{const t=pc([r],s.rank);let n=yg(e,r,i,!a);return null!=t&&(n=Ah(n,t)),n}}}},wg={kernelName:et,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:a}=n,o=null==s?[1,1]:s;x(xl(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return x(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),x(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),x(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),x(yl(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),kl("depthwiseConv2d",i,a),{x:()=>rd(l.shape,e,u,r,i,o,a),filter:()=>nd(l,e,u.shape,r,i,o,a)}}},kg={kernelName:rt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,i={x:s,filter:r,dy:e},a={x:s,filter:r,dy:e};return{x:()=>qr.runKernel(it,i,n),filter:()=>qr.runKernel(at,a,n)}}},Ig={kernelName:ut,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>qr.runKernel(ct,s)}}},Sg={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=_a(wu(yc(La(n))),2/Math.sqrt(Math.PI));return{x:()=>_a(e,s)}}},Cg={kernelName:pt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(e,n)}}},$g={kernelName:ft,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Sl(e,n.shape)}}},Ng={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(e,wu(n))}}},Tg={kernelName:yt,gradFunc:e=>({x:()=>za(e)})},Eg={kernelName:vt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ro(n.shape,s.shape),i=()=>{const t=Ra(e,da(s,"float32")),i=so(n.shape,r);return i.length>0?Sl(Hu(t,i),n.shape):t},a=()=>{let t=_a(e,da(n,"float32"));const i=so(s.shape,r);i.length>0&&(t=Sl(Hu(t,i),s.shape));const a=La(s);return yc(Ra(t,da(a,"float32")))};return{a:i,b:a}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rg(e){const t=si(e,"x","rsqrt","float32"),n={x:t};return qr.runKernel(_n,n)}const Ag=ai({rsqrt_:Rg}),_g={kernelName:wt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,i,a,o]=t,l=null==o?Wa(1):o,u=so(i.shape,r.shape),c=[];if(1===i.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=Za(r,i),d=_a(e,l),p=Ag($a(a,Wa(s))),f=_a(_a(_a(p,p),p),Wa(-.5)),g=()=>1===i.rank?Sl(_a(_a(e,Cu(Sl(p,[1,1,1,i.shape[0]]),c)),l),r.shape):Sl(_a(_a(e,p),l),r.shape),m=()=>{let e=_a(_a(p,Wa(-1)),d);return 1===i.rank&&(e=Hu(e,u)),Sl(e,i.shape)},b=()=>{let e=_a(_a(f,h),d);return 1===i.rank&&(e=Hu(e,u)),Sl(e,i.shape)},x=()=>{const t=_a(h,p);let n=_a(e,t);return 1===i.rank&&(n=Hu(n,u)),Sl(n,i.shape)},y=()=>{let t=e;return 1===i.rank&&(t=Hu(t,u)),Sl(t,i.shape)};return{x:g,mean:m,variance:b,scale:x,offset:y}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fg(e,t,n){const s=si(e,"x","unsortedSegmentSum"),r=si(t,"segmentIds","unsortedSegmentSum","int32");x(I(n),(()=>"numSegments must be of dtype int"));const i={x:s,segmentIds:r},a={numSegments:n};return qr.runKernel(fs,i,a)}const Dg=ai({unsortedSegmentSum_:Fg}),Og={kernelName:kt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:i}=n,a=T(i,s.shape)[0],o=()=>{const t=s.shape,n=r.size,o=t.slice(0,a),l=o.length,u=t.slice(i,t.length).slice(1),c=u.length,h=Lg(0,l),d=Lg(l+1,l+1+c),p=Mg([o,[n],u]),f=Sl(e,p),g=Sl(r,[n]),m=Mg([[l],h,d]),b=Ah(f,m);let x=Dg(b,g,s.shape[a]);const y=fc(m);return x=Ah(x,y),x};return{x:o,indices:()=>r}}};function Lg(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function Mg(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const zg={kernelName:Ct,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>za(n),b:()=>za(s)}}},Pg={kernelName:$t,gradFunc:e=>({x:()=>da(e,"float32")})},Bg={kernelName:Et,gradFunc:e=>({x:()=>za(e)})},Wg={kernelName:Rt,gradFunc:e=>({x:()=>za(e)})},Ug={kernelName:At,gradFunc:e=>({x:()=>za(e)})},Vg={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,i=Fu(s,0);return{x:()=>Ch(i,e,_a(e,r))}}},Gg={kernelName:Mt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,$a(n,1))}}},Hg={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,da(n,"float32"))}}},jg={kernelName:Wt,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=!0,n=wu(s);return Za(e,_a(Hu(e,r,t),n))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qg(e,t,n,s=5,r=1,i=1,a=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:i,beta:a};return qr.runKernel(Vt,o,l)}const Kg=ai({localResponseNormalizationBackprop_:qg}),Xg={kernelName:Ut,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>Kg(s,r,e,i,a,o,l)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jg(e,t,n,s){return t.rank<n.rank&&(t=Sl(t,hc(t.shape,s))),e.rank<n.rank&&(e=Sl(e,hc(e.shape,s))),{x:()=>{const s=_a(e,da(yu(n,t),e.dtype));return s}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Yg={kernelName:Gt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,i=t[0],a=t[1],o=T(r,i.shape),l=Jg(e,a,i,o);return{x:()=>l["x"]()}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zg(e,t){let n=si(e,"a","less","string_or_numeric"),s=si(t,"b","less","string_or_numeric");[n,s]=Mr(n,s),ro(n.shape,s.shape);const r={a:n,b:s};return qr.runKernel(Ft,r)}const Qg=ai({less_:Zg}),em={kernelName:Ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=()=>_a(e,da(Ou(n,s),"float32")),i=()=>_a(e,da(Qg(n,s),"float32"));return{a:r,b:i}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tm(e,t,n,s,r,i,a){const o=si(e,"dy","maxPool3dGrad"),l=si(t,"input","maxPool3dGrad"),u=si(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=Sl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Sl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Sl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),x(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),x(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),x(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),kl("maxPool3dGrad",i,a);const f={dy:c,input:h,output:d},g={filterSize:s,strides:r,pad:i,dimRoundingMode:a},m=qr.runKernel(Xt,f,g);return p?Sl(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const nm=ai({maxPool3dGrad_:tm}),sm={kernelName:Kt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>nm(e,s,r,i,a,o,l)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rm(e,t,n,s,r,i,a){const o=si(e,"dy","maxPoolGrad"),l=si(t,"input","maxPoolGrad"),u=si(n,"output","maxPoolGrad");x(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),x(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),x(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),kl("maxPoolGrad",i,a);const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:i,dimRoundingMode:a};return qr.runKernel(qt,c,h)}const im=ai({maxPoolGrad_:rm}),am={kernelName:jt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:i,strides:a,pad:o}=n;return{x:()=>im(e,s,r,i,a,o)}}},om={kernelName:Yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,i=T(r,s.shape),a=cc(s.shape,i),o=a[1],l=w(o),u=()=>{const t=s.shape.slice();i.forEach((e=>{t[e]=1}));const n=Sl(e,t),r=Ra(_a(n,Cc(s.shape,"float32")),l);return r};return{x:u}}},lm={kernelName:Zt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[i,a]=t,o=T(r,i.shape),l=Jg(e,a,i,o);return{x:()=>l["x"]()}}},um={kernelName:Qt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=()=>_a(e,da(qd(n,s),"float32")),i=()=>_a(e,da(Fu(n,s),"float32"));return{a:r,b:i}}},cm={kernelName:en,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,i=r.map((e=>e[0]));return{x:()=>Yc(e,i,s.shape)}}},hm={kernelName:tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ro(n.shape,s.shape),i=()=>{const t=so(n.shape,r);return t.length>0?Sl(Hu(e,t),n.shape):e},a=()=>{const t=_a(e,yc(Eu(Ra(n,s)))),i=so(s.shape,r);return i.length>0?Sl(Hu(t,i),s.shape):t};return{a:i,b:a}}},dm={kernelName:sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ro(n.shape,s.shape),i=()=>{const t=_a(e,da(s,"float32")),i=so(n.shape,r);return i.length>0?Sl(Hu(t,i),n.shape):t},a=()=>{const t=_a(e,da(n,"float32")),i=so(s.shape,r);return i.length>0?Sl(Hu(t,i),s.shape):t};return{a:i,b:a}}},pm={kernelName:rn,gradFunc:e=>({x:()=>yc(e)})},fm={kernelName:hn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Sc(n.shape,"float32")}}},gm={kernelName:cn,gradFunc:e=>({x:()=>za(e)})},mm={kernelName:dn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n,r=kh(e,s);return r.map((e=>()=>e))}},bm={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,i=r.map((e=>e[0]));return{x:()=>Yc(e,i,s.shape)}}},xm={kernelName:fn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,i=n,a=s,o=ro(i.shape,a.shape),l=()=>{const t=da(a,"float32");let n=_a(e,_a(t,Ja(i,Za(t,Wa(1)))));const s=so(i.shape,o);return s.length>0&&(n=Hu(n,s)),Sl(n,i.shape)},u=()=>{const t=Fu(i,0),n=Ch(t,Pu(i),za(i));let s=_a(e,_a(r,n));const l=so(a.shape,o);return l.length>0&&(s=Hu(s,l)),Sl(s,a.shape)};return{a:l,b:u}}},ym={kernelName:gn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=Fu(n,0);return{x:()=>Ch(r,e,_a(e,s)),alpha:()=>{let t=Ch(r,za(e),_a(e,n));const i=so(s.shape,e.shape);return i.length>0&&(t=Hu(t,i)),Sl(t,s.shape)}}}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vm(e,t=0,n=!1,s=!1){const r=si(e,"x","cumprod"),i={x:r},a={axis:t,exclusive:n,reverse:s};return qr.runKernel(Xe,i,a)}const wm=ai({cumprod_:vm});
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function km(e,t,n){const s=e.shape.slice();s[n]=1;const r=Sl(t,s),i=wm(e,n,!0,!1),a=wm(e,n,!0,!0),o=_a(i,a);return _a(r,o)}function Im(e,t,n){const s=e.shape.length,r=s-n.length,i=pc(n,s);let a=e;null!=i&&(a=Ah(e,i));const o=a.shape.slice(),l=o.splice(s-n.length,n.length),u=l.reduce(((e,t)=>e*t),1);o.push(u);const c=a.reshape(o);let h=km(c,t,r);if(h=h.reshape(a.shape),null!=i){const e=fc(i);h=Ah(h,e)}return h}const Sm={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let i=[];return i=void 0===r||null===r?s.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>Im(s,e,i)}}},Cm={kernelName:ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ro(n.shape,s.shape),i=()=>{const t=Ra(e,da(s,"float32")),i=so(n.shape,r);return i.length>0?Sl(Hu(t,i),n.shape):t},a=()=>{let t=_a(e,da(n,"float32"));const i=so(s.shape,r);i.length>0&&(t=Sl(Hu(t,i),s.shape));const a=La(s);return yc(Ra(t,da(a,"float32")))};return{a:i,b:a}}},$m={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,yc(La(n)))}}},Nm={kernelName:En,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=_a(qd(n,6),Kh(n));return{x:()=>_a(e,da(s,"float32"))}}},Tm={kernelName:In,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(e,da(Kh(n),"float32"))}}},Em={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sl(e,n.shape)}}},Rm={kernelName:Nn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s},i=()=>qr.runKernel(Tn,r,n);return{images:i}}},Am={kernelName:Cn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s},i=()=>qr.runKernel($n,r,n);return{images:i}}},_m={kernelName:Rn,gradFunc:(e,t,n)=>{const{dims:s}=n,r=T(s,e.shape);return{x:()=>Vc(e,r)}}},Fm={kernelName:An,gradFunc:e=>({x:()=>za(e)})},Dm={kernelName:_n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yc(Ra(e,_a(Ja(n,1.5),2)))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Om(e){const t=si(e,"x","logicalNot","bool"),n={x:t};return qr.runKernel(Pt,n)}const Lm=ai({logicalNot_:Om}),Mm={kernelName:On,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>da(za(n),"float32"),t:()=>_a(e,da(n,e.dtype)),e:()=>_a(e,da(Lm(n),e.dtype))}}},zm={kernelName:Ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Fu(n,Wa(0)),s=Wa(Wp),r=Wa(Up),i=_a(e,r),a=_a(_a(e,s),wu(da(n,"float32")));return Ch(t,i,a)}}}},Pm={kernelName:Wn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(e,_a(n,Za(Wa(1),n)))}}},Bm={kernelName:Bn,gradFunc:e=>({x:()=>za(e)})};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wm(e){const t=si(e,"x","cos","float32"),n={x:t};return qr.runKernel(qe,n)}const Um=ai({cos_:Wm}),Vm={kernelName:zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(Um(da(n,"float32")),e)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gm(e){const t=si(e,"x","cosh","float32"),n={x:t};return qr.runKernel(Ke,n)}const Hm=ai({cosh_:Gm}),jm={kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(Hm(da(n,"float32")),e)}}},qm={kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:i}=n,a=s.shape,[o,l]=Ko(s,r,i),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],a[c]-o[c]-l[c]]);return{x:()=>Ec(e,u)}}},Km={kernelName:qn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,i=!0,a=_a(e,s);return{logits:()=>Za(a,_a(Hu(a,[r],i),s))}}},Xm={kernelName:Un,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(e,Xc(n))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jm(e,t,n){const s=si(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));x(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),x(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),x(s.shape[0]%r===0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const i={x:s},a={blockShape:t,crops:n};return qr.runKernel(Ae,i,a)}const Ym=ai({batchToSpaceND_:Jm}),Zm={kernelName:Hn,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>Ym(e,s,r)}}},Qm={kernelName:jn,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>Vl(e,s)}}},eb={kernelName:Vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,_a(Da(da(n,"float32")),2))}}},tb={kernelName:es,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(e,_a(da(n,"float32"),2))}}},nb={kernelName:Qn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Wa(2),i=()=>_a(e,_a(r,Za(n,s))),a=()=>_a(e,_a(r,Za(s,n)));return{a:i,b:a}}},sb={kernelName:ms,gradFunc:e=>({x:()=>za(e)})},rb={kernelName:is,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ro(n.shape,s.shape),i=()=>{let t=e;const s=so(n.shape,r);return s.length>0&&(t=Hu(t,s)),Sl(t,n.shape)},a=()=>{let t=e;const n=so(s.shape,r);return n.length>0&&(t=Hu(t,n)),Sl(yc(t),s.shape)};return{a:i,b:a}}},ib={kernelName:Gn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:i}=n,a=T(i,s.shape);a.forEach((e=>{r[e]=1}));const o=Sl(e,r),l=_a(o,Cc(s.shape,"float32"));return{x:()=>l}}},ab={kernelName:as,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ra(e,La(Um(n)))}}},ob={kernelName:os,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_a(Za(Wa(1),La(n)),e)}}},lb={kernelName:ls,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n,i=()=>{let t=za(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=$a(t,Yc(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)t=$a(t,Yc(e,[n*s.shape[0],i*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)t=$a(t,Yc(e,[n*s.shape[0],i*s.shape[1],a*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)for(let o=0;o<r[3];++o)t=$a(t,Yc(e,[n*s.shape[0],i*s.shape[1],a*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t};return{x:i}}},ub={kernelName:hs,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,i=fc(r);return{x:()=>Ah(e,i)}}},cb={kernelName:ps,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>gh(e,r)}}},hb={kernelName:fs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t,s=()=>db(e,n);return{x:s}}};function db(e,t){const n=ao(t,za(t)),s=Au(e,n);let r=Ou(t,Wa(0,"int32"));const i=s.rank-r.rank;for(let o=0;o<i;++o)r=Iu(r,o+1);r=Xu(r,Cc(s.shape,"bool"));const a=za(s);return Ch(r,s,a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const pb={kernelName:gs,gradFunc:e=>({x:()=>za(e)})},fb=[Ff,Df,Of,Lf,Mf,zf,Pf,Bf,Wf,Uf,Vf,Gf,qf,Jf,Yf,eg,tg,ng,sg,rg,ig,ag,lg,og,hg,fg,bg,vg,wg,kg,Cm,Ig,Sg,Cg,$g,Ng,Eg,Tg,_g,Og,zg,Pg,Bg,Wg,Ug,Vg,Gg,Hg,jg,Xg,Yg,Yg,em,sm,am,om,lm,um,cm,hm,dm,pm,fm,gm,mm,bm,bm,xm,ym,Sm,$m,Nm,Tm,Em,Rm,Am,_m,Fm,Dm,Mm,zm,Pm,Bm,Vm,jm,qm,Km,Xm,Zm,Zm,Qm,Qm,eb,nb,tb,sb,rb,ib,ab,ob,lb,ub,cb,hb,pb];for(const tX of fb)Rs(tX);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gb(e){const t=si(e,"x","acos"),n={x:t};return qr.runKernel(pe,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.abs=function(){return this.throwIfDisposed(),to(this)};const mb=ai({acos_:gb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bb(e){const t=si(e,"x","acosh"),n={x:t};return qr.runKernel(fe,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.acos=function(){return this.throwIfDisposed(),mb(this)};const xb=ai({acosh_:bb});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yb(e,t=0){const n=si(e,"x","argMin"),s={x:n},r={axis:t};return qr.runKernel(ve,s,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.acosh=function(){return this.throwIfDisposed(),xb(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.add=function(e){return this.throwIfDisposed(),$a(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.all=function(e,t){return this.throwIfDisposed(),Qo(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.any=function(e,t){return this.throwIfDisposed(),tl(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.argMax=function(e){return this.throwIfDisposed(),sl(this,e)};const vb=ai({argMin_:yb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wb(e){const t=si(e,"x","asin"),n={x:t};return qr.runKernel(we,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.argMin=function(e){return this.throwIfDisposed(),vb(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.asScalar=function(){return this.throwIfDisposed(),x(1===this.size,(()=>"The array must have only 1 element.")),Sl(this,[])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.asType=function(e){return this.throwIfDisposed(),da(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.as1D=function(){return this.throwIfDisposed(),Sl(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.as2D=function(e,t){return this.throwIfDisposed(),Sl(this,[e,t])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Sl(this,[e,t,n])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),Sl(this,[e,t,n,s])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),Sl(this,[e,t,n,s,r])};const kb=ai({asin_:wb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ib(e){const t=si(e,"x","asinh"),n={x:t};return qr.runKernel(ke,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.asin=function(){return this.throwIfDisposed(),kb(this)};const Sb=ai({asinh_:Ib});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cb(e){const t=si(e,"x","atan"),n={x:t};return qr.runKernel(Ie,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.asinh=function(){return this.throwIfDisposed(),Sb(this)};const $b=ai({atan_:Cb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nb(e,t){let n=si(e,"a","atan2"),s=si(t,"b","atan2");[n,s]=Mr(n,s);const r={a:n,b:s};return qr.runKernel(Ce,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.atan=function(){return this.throwIfDisposed(),$b(this)};const Tb=ai({atan2_:Nb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Eb(e){const t=si(e,"x","atanh"),n={x:t};return qr.runKernel(Se,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.atan2=function(e){return this.throwIfDisposed(),Tb(this,e)};const Rb=ai({atanh_:Eb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ab(e){const t=si(e,"x","ceil","float32"),n={x:t};return qr.runKernel(Le,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.atanh=function(){return this.throwIfDisposed(),Rb(this)},Nr().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),$l(this,e,t,n,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Ym(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),Al(this,e,t,n,s,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Pl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.cast=function(e){return this.throwIfDisposed(),da(this,e)};const _b=ai({ceil_:Ab});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fb(e,t,n="NHWC"){const s=si(e,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],i="NHWC"===n?s.shape[2]:s.shape[3],a="NHWC"===n?s.shape[3]:s.shape[1];x(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),x(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),x(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),x(a%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return qr.runKernel(Qe,o,l)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.ceil=function(){return this.throwIfDisposed(),_b(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Wl(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof $r&&(e=[e]),Vl([this,...e],t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.conv1d=function(e,t,n,s,r,i){return this.throwIfDisposed(),tu(this,e,t,n,s,r,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),iu(this,e,t,n,s,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.conv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),Ql(this,e,t,n,s,r,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.cos=function(){return this.throwIfDisposed(),Um(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.cosh=function(){return this.throwIfDisposed(),Hm(this)},
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),wm(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),yg(this,e,t,n)};const Db=ai({depthToSpace_:Fb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ob(e,t,n,s,r=[1,1],i="NHWC"){const a=si(e,"x","dilation2d"),o=si(t,"filter","dilation2d");x(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),x(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),x("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=Sl(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),x(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},d=qr.runKernel(rt,c,h);return u?Sl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Db(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.depthwiseConv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),gu(this,e,t,n,s,r,i)};const Lb=ai({dilation2d_:Ob});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mb(e,t){let n=si(e,"a","div"),s=si(t,"b","div");[n,s]=Mr(n,s);const r=Ra(n,s),i=za(r),a=yu(s,i);return Ch(a,i,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),Lb(this,e,t,n,s,r)};const zb=ai({divNoNan_:Mb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pb(e,t){const n=si(e,"t1","dot"),s=si(t,"t2","dot");x((1===n.rank||2===n.rank)&&(1===s.rank||2===s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],i=1===s.rank?s.size:s.shape[0];if(x(r===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`)),1===n.rank&&1===s.rank){const e=Sl(n,[1,-1]),t=Sl(s,[-1,1]),r=Yu(e,t);return Sl(r,[])}if(1===n.rank&&2===s.rank){const e=Sl(n,[1,-1]),t=Sl(s,[s.shape[0],s.shape[1]]),r=Yu(e,t);return Sl(r,[r.size])}if(2===n.rank&&1===s.rank){const e=Sl(s,[-1,1]),t=Yu(n,e);return Sl(t,[t.size])}{const e=Sl(s,[s.shape[0],s.shape[1]]),t=Yu(n,e);return t}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.divNoNan=function(e){return this.throwIfDisposed(),zb(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.div=function(e){return this.throwIfDisposed(),Ra(this,e)};const Bb=ai({dot_:Pb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wb(e){let t=si(e,"x","erf");x("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=da(t,"float32"));const n={x:t};return qr.runKernel(ht,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.dot=function(e){return this.throwIfDisposed(),Bb(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.elu=function(){return this.throwIfDisposed(),bu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.equal=function(e){return this.throwIfDisposed(),yu(this,e)};const Ub=ai({erf_:Wb});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vb(e,t=null,n=!1){return ip(e,"euclidean",t,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.erf=function(){return this.throwIfDisposed(),Ub(this)};const Gb=ai({euclideanNorm_:Vb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hb(e){const t=si(e,"x","expm1"),n={x:t};return qr.runKernel(gt,n)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Gb(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.exp=function(){return this.throwIfDisposed(),wu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.expandDims=function(e){return this.throwIfDisposed(),Iu(this,e)};const jb=ai({expm1_:Hb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qb(e){const t=si(e,"x","isFinite"),n={x:t};return qr.runKernel(Et,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.expm1=function(){return this.throwIfDisposed(),jb(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.fft=function(){return this.throwIfDisposed(),Lh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.flatten=function(){return this.throwIfDisposed(),Sl(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.floor=function(){return this.throwIfDisposed(),Eu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.floorDiv=function(e){return this.throwIfDisposed(),Ta(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.gather=function(e,t){return this.throwIfDisposed(),Au(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Ou(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.greater=function(e){return this.throwIfDisposed(),Fu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.ifft=function(){return this.throwIfDisposed(),Bh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.irfft=function(){return this.throwIfDisposed(),Uh(this)};const Kb=ai({isFinite_:qb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xb(e){const t=si(e,"x","isInf"),n={x:t};return qr.runKernel(Rt,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.isFinite=function(){return this.throwIfDisposed(),Kb(this)};const Jb=ai({isInf_:Xb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yb(e){const t=si(e,"x","isNaN"),n={x:t};return qr.runKernel(At,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.isInf=function(){return this.throwIfDisposed(),Jb(this)};const Zb=ai({isNaN_:Yb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qb(e,t=5,n=1,s=1,r=.5){const i=si(e,"x","localResponseNormalization");x(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),x(I(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=Sl(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:t,bias:n,alpha:s,beta:r},c=qr.runKernel(Ut,l,u);return o?Sl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.isNaN=function(){return this.throwIfDisposed(),Zb(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Mu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.lessEqual=function(e){return this.throwIfDisposed(),qd(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.less=function(e){return this.throwIfDisposed(),Qg(this,e)};const ex=ai({localResponseNormalization_:Qb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tx(e){const t=si(e,"x","logSigmoid"),n=Ba((e=>{const t=yc(uh(yc(e))),n=t=>{const n=_a(t,Xc(yc(e)));return n};return{value:t,gradFunc:n}}));return n(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),ex(this,e,t,n,s)};const nx=ai({logSigmoid_:tx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sx(e,t){const n=si(e,"a","logicalOr","bool"),s=si(t,"b","logicalOr","bool");ro(n.shape,s.shape);const r={a:n,b:s};return qr.runKernel(Bt,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.logSigmoid=function(){return this.throwIfDisposed(),nx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),qu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),gp(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.log=function(){return this.throwIfDisposed(),Pu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.log1p=function(){return this.throwIfDisposed(),Wu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Xu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.logicalNot=function(){return this.throwIfDisposed(),Lm(this)};const rx=ai({logicalOr_:sx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ix(e,t){const n=si(e,"a","logicalXor","bool"),s=si(t,"b","logicalXor","bool");return ro(n.shape,s.shape),Xu(rx(e,t),Lm(Xu(e,t)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.logicalOr=function(e){return this.throwIfDisposed(),rx(this,e)};const ax=ai({logicalXor_:ix});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ox(e,t,n){x("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=si(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");x(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let o=0;o<s.rank;o++)x(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),x(t[o][0]>=0&&t[o][0]<=s.shape[o]-r&&t[o][1]>=0&&t[o][1]<=s.shape[o]-r,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-r} or less than 0 for input of shape ${s.shape}`));const i={paddings:t,mode:n},a={x:s};return qr.runKernel(en,a,i)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.logicalXor=function(e){return this.throwIfDisposed(),ax(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Yu(this,e,t,n)},Nr().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),Qu(this,e,t,n,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.max=function(e,t){return this.throwIfDisposed(),Vu(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.maximum=function(e){return this.throwIfDisposed(),ao(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.mean=function(e,t){return this.throwIfDisposed(),sc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.min=function(e,t){return this.throwIfDisposed(),ic(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.minimum=function(e){return this.throwIfDisposed(),oc(this,e)};const lx=ai({mirrorPad_:ox});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ux(e,t){let n=si(e,"a","mod"),s=si(t,"b","mod");[n,s]=Mr(n,s);const r={a:n,b:s};return qr.runKernel(tn,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),lx(this,e,t)};const cx=ai({mod_:ux});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hx(e,t,n,s,r,i,a){null==r&&(r=[1,1]),null==i&&(i=1),0===s&&(s="valid");const o=si(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Sl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),x(yl(i,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`));const c=il(l.shape,t,i,r,s),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===s?px([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=dx([c.inHeight,c.inWidth],h,d),m=p?s:"valid",b=p?l:Qf(l,h,f),y="avg"===n?()=>$l(b,t,i,m,a):()=>Qu(b,t,i,m,a),v=y(),w=p?v:Ym(v,h,g);return u?Sl(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function dx(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),i=e.concat(s,r),a=t.map(((e,t)=>(e-i[t]%e)%e)),o=r.map(((e,t)=>e+a[t])),l=t.map(((e,t)=>[s[t],o[t]])),u=t.map(((e,t)=>[0,a[t]]));return[l,u]}function px(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),s=n.map((e=>e-1)),r=s.map((e=>Math.floor(e/2))),i=s.map(((e,t)=>e-r[t]));return s.map(((e,t)=>[r[t],i[t]]))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.mod=function(e){return this.throwIfDisposed(),cx(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.mul=function(e){return this.throwIfDisposed(),_a(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.neg=function(){return this.throwIfDisposed(),yc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),ip(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.notEqual=function(e){return this.throwIfDisposed(),wc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Ic(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.onesLike=function(){return this.throwIfDisposed(),Nc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.pad=function(e,t){return this.throwIfDisposed(),Ec(this,e,t)};const fx=ai({pool_:hx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gx(e,t=null,n=!1){let s=si(e,"x","prod");"bool"===s.dtype&&(s=da(s,"int32"));const r={x:s},i={axis:t,keepDims:n};return qr.runKernel(mn,r,i)}Nr().prototype.pool=function(e,t,n,s,r,i){return this.throwIfDisposed(),fx(this,e,t,n,s,r,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.pow=function(e){return this.throwIfDisposed(),Ja(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.prelu=function(e){return this.throwIfDisposed(),Ac(this,e)};const mx=ai({prod_:gx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bx(e){const t=si(e,"x","reciprocal"),n={x:t};return qr.runKernel(kn,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.prod=function(e,t){return this.throwIfDisposed(),mx(this,e,t)};const xx=ai({reciprocal_:bx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yx(e){const t=si(e,"x","sign"),n={x:t};return qr.runKernel(Bn,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.reciprocal=function(){return this.throwIfDisposed(),xx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.relu=function(){return this.throwIfDisposed(),Wc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.relu6=function(){return this.throwIfDisposed(),jh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Sl(this,e.shape)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.reshape=function(e){return this.throwIfDisposed(),Sl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Wd(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Vd(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.reverse=function(e){return this.throwIfDisposed(),Vc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.rfft=function(){return this.throwIfDisposed(),zh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.round=function(){return this.throwIfDisposed(),Xd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.rsqrt=function(){return this.throwIfDisposed(),Ag(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.selu=function(){return this.throwIfDisposed(),Hc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.separableConv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),qc(this,e,t,n,s,r,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.sigmoid=function(){return this.throwIfDisposed(),Xc(this)};const vx=ai({sign_:yx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wx(e,t,n,s,r=0,i=0,a=0,o=0,l=0){const u=si(e,"x","stridedSlice","string_or_numeric"),c={x:u},h={begin:t,end:n,strides:s,beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return qr.runKernel(ts,c,h)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.sign=function(){return this.throwIfDisposed(),vx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.sin=function(){return this.throwIfDisposed(),pg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.sinh=function(){return this.throwIfDisposed(),mg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.slice=function(e,t){return this.throwIfDisposed(),Yc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.softmax=function(e){return this.throwIfDisposed(),oh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.softplus=function(){return this.throwIfDisposed(),uh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Qf(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.split=function(e,t){return this.throwIfDisposed(),hh(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.sqrt=function(){return this.throwIfDisposed(),Da(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.square=function(){return this.throwIfDisposed(),La(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),pp(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.squeeze=function(e){return this.throwIfDisposed(),ph(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof $r?[this,e]:[this,...e];return gh(n,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.step=function(e){return this.throwIfDisposed(),Kh(this,e)};const kx=ai({stridedSlice_:wx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ix(e){const t=si(e,"x","tan","float32"),n={x:t};return qr.runKernel(as,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.stridedSlice=function(e,t,n,s,r,i,a,o){return this.throwIfDisposed(),kx(this,e,t,n,s,r,i,a,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.sub=function(e){return this.throwIfDisposed(),Za(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.sum=function(e,t){return this.throwIfDisposed(),Hu(this,e,t)};const Sx=ai({tan_:Ix});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cx(e,t=1,n=!0){const s=si(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const i={x:s},a={k:t,sorted:n},[o,l]=qr.runKernel(us,i,a);return{values:o,indices:l}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.tan=function(){return this.throwIfDisposed(),Sx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.tanh=function(){return this.throwIfDisposed(),bh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.tile=function(e){return this.throwIfDisposed(),Cu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.toBool=function(){return this.throwIfDisposed(),da(this,"bool")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.toFloat=function(){return this.throwIfDisposed(),da(this,"float32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.toInt=function(){return this.throwIfDisposed(),da(this,"int32")};const $x=ai({topk_:Cx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nx(e,t=0){const n=si(e,"x","unique","string_or_numeric");x(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[i,a]=qr.runKernel(ds,s,r);return{values:i,indices:a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.topk=function(e,t){return this.throwIfDisposed(),$x(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.transpose=function(e){return this.throwIfDisposed(),Ah(this,e)};const Tx=ai({unique_:Nx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.unique=function(e){return this.throwIfDisposed(),Tx(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Dg(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.unstack=function(e){return this.throwIfDisposed(),kh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.where=function(e,t){return this.throwIfDisposed(),Ch(e,this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Nr().prototype.zerosLike=function(){return this.throwIfDisposed(),za(this)};
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Ex extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ex.prototype)}}class Rx extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Rx.prototype)}}class Ax extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ax.prototype)}}class _x extends Error{constructor(e){super(e),Object.setPrototypeOf(this,_x.prototype)}}class Fx extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Fx.prototype)}}class Dx extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Dx.prototype)}}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Ox{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Lx(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Mx(e,t){if(!e)throw new Fx(t)}function zx(e,t){let n=0;for(const s of e)s===t&&n++;return n}function Px(e){return 1===e.length?e[0]:e}function Bx(e){return Array.isArray(e)?e:[e]}function Wx(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2"),n=t.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==n[0]?n:"private"+n}function Ux(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Vx={};function Gx(e){if(null===e||void 0===e)return null;const t={};return t["className"]=e.getClassName(),t["config"]=e.getConfig(),t}function Hx(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>Hx(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t["type"]||"number"!==typeof t["value"]?Hx(t):e[n]=t["value"])}}}function jx(e,t={},n={},s="object",r=!1){if("string"===typeof e){const r=e;let i;if(r in n)i=n[r];else if(r in Vx)i=Vx[r];else if(i=t[r],null==i)throw new Ax(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i["className"]||null==i["config"])throw new Ax(`${s}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i["className"];let o,l;if(a in n?[o,l]=n[a]:a in Vx?[o,l]=Vx["className"]:a in t&&([o,l]=t[a]),null==o)throw new Ax(`Unknown ${s}: ${a}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(Vx))e[n]=Vx[n];for(const r of Object.keys(n))e[r]=n[r];const t=i["config"];t["customObjects"]=e;const s=Object.assign({},Vx);for(const r of Object.keys(n))Vx[r]=n[r];Hx(i["config"]);const a=l(o,i["config"],n,r);return Vx=Object.assign({},s),a}{const e=Object.assign({},Vx);for(const s of Object.keys(n))Vx[s]=n[s];const t=new o(i["config"]);return Vx=Object.assign({},e),t}}}function qx(e,t){return e<t?-1:e>t?1:0}function Kx(e,t){return-1*qx(e,t)}function Xx(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Jx(e){if(null==e)throw new Ax(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Yx(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Ax(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Zx(e,t,n=0,s=1/0){return Mx(n>=0),Mx(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function Qx(e,t){Array.isArray(e)?(x(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Qx(e,`element ${n+1} of ${t}`)))):x(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${ey(e)}.`))}function ey(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>ey(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function ty(e,t,n){let s,r=null!=n?n():er();const i=(...i)=>{const a=null!=n?n():er();return a-r<t||(r=a,s=e(...i)),s};return i}function ny(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let sy=0;function ry(){return sy++}const iy={};function ay(e=""){return e in iy||(iy[e]=0),iy[e]+=1,e+iy[e].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const oy=["channelsFirst","channelsLast"],ly=["nearest","bilinear"],uy=["valid","same","causal"],cy=["max","avg"],hy=["sum","mul","concat","ave"],dy=new Map;function py(e){Yx(oy,"DataFormat",e)}function fy(e){Yx(ly,"InterpolationFormat",e)}function gy(e){Yx(uy,"PaddingMode",e)}function my(e){Yx(cy,"PoolMode",e)}const by=[],xy="/";function yy(e,t){by.push(e);try{const e=t();return by.pop(),e}catch(n){throw by.pop(),n}}function vy(){return 0===by.length?"":by.join(xy)+xy}function wy(e){if(!Sy(e))throw new Error("Not a valid tensor name: '"+e+"'");return vy()+e}function ky(e){if(!Sy(e))throw new Error("Not a valid tensor name: '"+e+"'");dy.has(e)||dy.set(e,0);const t=dy.get(e);if(dy.set(e,dy.get(e)+1),t>0){const n=`${e}_${t}`;return dy.set(n,1),n}return e}const Iy=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Sy(e){return!!e.match(Iy)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Cy(e){return e===parseInt(e.toString(),10)}function $y(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Ny(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function Ty(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function Ey(e,t){if(t<e)throw new Ax(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let Ry;function Ay(){return null==Ry&&(Ry=Sa().epsilon()),Ry}function _y(){return"channelsLast"}function Fy(e,t){return da(e,t)}function Dy(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Sl(e,n)}function Oy(e,t){return va((()=>{if(2!==e.shape.length)throw new Ax(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);const n=Dy(e,1);return Vy(n,[1,t,1])}))}function Ly(e){const t=[$y(e.shape)];return Sl(e,t)}function My(e){if(e.rank<=1)throw new Ax(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],$y(e.shape,1)];return Sl(e,t)}function zy(e,t,n){return va((()=>{switch(e.rank){case 1:return Qc(e,t,n);case 2:return th(e,[t,0],[n,e.shape[1]]);case 3:return sh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return ih(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Yc(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Yc(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Ax(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Py(e,t,n){return va((()=>{switch(e.rank){case 1:return Qc(e,t,n);case 2:return th(e,[0,t],[e.shape[0],n]);case 3:return sh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return ih(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Ax(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function By(e,t,n,s){return va((()=>{switch(e.rank){case 1:return Qc(e,t,n);case 2:switch(s){case 1:return zy(e,t,n);case 2:return Py(e,t,n);default:throw new Ax(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return zy(e,t,n);case 2:return sh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Py(e,t,n);default:throw new Ax(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return zy(e,t,n);case 2:return ih(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return ih(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Py(e,t,n);default:throw new Ax(`The axis is not within the rank of the tensor ${s}`)}default:throw new Ax(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Wy(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Vl(e,t)}function Uy(e,t){switch(e.rank){case 1:return Hl([e,t]);case 2:return ql([e,t],0);case 3:return Xl([e,t],0);case 4:return Yl([e,t],0);default:throw new Ax(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Vy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Ax(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Cu(e,t)}function Gy(e,t=0,n=1,s,r){return Lc(e,t,n,s,r)}function Hy(e,t,n,s){if(e.rank<2||t.rank<2)throw new _x(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){const n=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(n!==s)throw new _x(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const r=!1,i=!1;return ad({a:e,b:t,transposeA:r,transposeB:i,bias:s?Ky(e.rank,s,_y()):null,activation:n})}{const r=e.shape.slice(),i=r.pop();e=Sl(e,[-1,i]);const a=t.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Sl(Ah(t,c),[l,-1]);const h=[...r,...u],d=!1,p=!1;return Sl(ad({a:e,b:t,transposeA:d,transposeB:p,bias:s?Ky(e.rank,s,_y()):null,activation:n}),h)}}function jy(e,t,n){return va((()=>(t=Array.isArray(t)?xh(t,"int32"):da(t,"int32"),Au(e,t,n))))}function qy(e){return _a(e,e)}function Ky(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new Ax(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?Sl(t,[1,s[0],1,1,1]):Sl(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?Sl(t,[1,1,1,1,s[0]]):Sl(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?Sl(t,[1,s[0],1,1]):Sl(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?Sl(t,[1,1,1,s[0]]):Sl(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?Sl(t,[1,s[0],1]):Sl(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?Sl(t,[1,1,s[0]]):Sl(t,[1].concat(s))}else if(e<3)return t;throw new Ax(`Unsupported input rank by biasAdd: ${t.rank}`)}function Xy(e,t,n){return va((()=>(null==n&&(n=_y()),py(n),$a(e,Ky(e.rank,t,n)))))}function Jy(e,t=1){if(1!==t)throw new _x(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return bu(e)}function Yy(e){return va((()=>Ra(e,$a(to(e),1))))}function Zy(e,t,n,s){return va((()=>Dh(e,t,n,s)))}function Qy(e){return va((()=>{const t=$a(.5,_a(.2,e));return Wl(t,0,1)}))}function ev(e,t,n=!1){return n?e():t()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const tv=["fanIn","fanOut","fanAvg"],nv=["normal","uniform","truncatedNormal"];
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function sv(e){Yx(tv,"FanMode",e)}function rv(e){Yx(nv,"Distribution",e)}class iv extends Ua{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class av extends iv{apply(e,t){return Sc(e,t)}}av.className="Zeros",Ga(av);class ov extends iv{apply(e,t){return Cc(e,t)}}ov.className="Ones",Ga(ov);class lv extends iv{constructor(e){if(super(),"object"!==typeof e)throw new Ax(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Ax(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return va((()=>_a(Wa(this.value),Cc(e,t))))}getConfig(){return{value:this.value}}}lv.className="Constant",Ga(lv);class uv extends iv{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return zc(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}uv.className="RandomUniform",Ga(uv);class cv extends iv{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new _x(`randomNormal does not support dType ${t}.`);return Gy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}cv.className="RandomNormal",Ga(cv);class hv extends iv{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new _x(`truncatedNormal does not support dType ${t}.`);return vh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}hv.className="TruncatedNormal",Ga(hv);class dv extends iv{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return va((()=>{if(2!==e.length||e[0]!==e[1])throw new Ax("Identity matrix initializer can only be used for 2D square matrices.");return _a(this.gain,Nu(e[0]))}))}getConfig(){return{gain:this.gain}}}function pv(e,t="channelsLast"){let n,s;if(py(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=$y(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=$y(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=$y(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}dv.className="Identity",Ga(dv);class fv extends iv{constructor(e){if(super(),e.scale<0)throw new Ax(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,sv(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,rv(this.distribution),this.seed=e.seed}apply(e,t){const n=pv(e),s=n[0],r=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,s):"fanOut"===this.mode?i/=Math.max(1,r):i/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(i);if(t=t||"float32","float32"!==t&&"int32"!==t)throw new _x(`${this.getClassName()} does not support dType ${t}.`);return vh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return zc(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}fv.className="VarianceScaling",Ga(fv);class gv extends fv{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return fv.className}}gv.className="GlorotUniform",Ga(gv);class mv extends fv{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return fv.className}}mv.className="GlorotNormal",Ga(mv);class bv extends fv{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return fv.className}}bv.className="HeNormal",Ga(bv);class xv extends fv{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return fv.className}}xv.className="HeUniform",Ga(xv);class yv extends fv{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return fv.className}}yv.className="LeCunNormal",Ga(yv);class vv extends fv{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return fv.className}}vv.className="LeCunUniform",Ga(vv);class wv extends iv{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new _x("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return va((()=>{if(e.length<2)throw new _x("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=e[0]>e[1]?[e[1],e[0]]:e,n=Gy(t,0,1,"float32");let s=bp.gramSchmidt(n);return e[0]>e[1]&&(s=Ah(s)),_a(this.gain,s)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}wv.className="Orthogonal",Ga(wv);const kv={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Iv(e,t={}){return jx(e,Va.getMap().classNameMap,t,"initializer")}function Sv(e){return Gx(e)}function Cv(e){if("string"===typeof e){const t=e in kv?kv[e]:e;if("GlorotNormal"===t)return new mv;if("GlorotUniform"===t)return new gv;if("HeNormal"===t)return new bv;if("HeUniform"===t)return new xv;if("LeCunNormal"===t)return new yv;if("LeCunUniform"===t)return new vv;{const e={};return e["className"]=t,e["config"]={},Iv(e)}}return e instanceof iv?e:Iv(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function $v(e){return Array.isArray(e)&&Array.isArray(e[0])}function Nv(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Tv(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Ax(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ev(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Ax(`Expected exactly 1 Shape; got ${e.length}`)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Rv(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Av="Variable";class _v{constructor(e,t="float32",n=Av,s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=ry(),n=null==n?Av:n,this.originalName=wy(n),this.name=ky(this.originalName),this.trainable_=s,this.constraint=r,this.val=Ih(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),Fv(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Fv(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function Dv(e){return e.map((e=>e.read()))}function Ov(e){e.forEach((e=>{const t=e[0];t.write(e[1])}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Lv{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Mv{constructor(e,t,n,s,r,i,a){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=a,this.id=ry(),null!=i&&(this.originalName=wy(i),this.name=ky(this.originalName)),this.rank=t.length}}let zv=0;class Pv{constructor(e,t){this.callArgs=t,this.id=zv++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Bv=0;class Wv extends Ua{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Bv++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Wx(e)+"_"+ay(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Rx(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Ax(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Px(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Px(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ex(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Ex(`Layer ${this.name} is not connected, no input to return.`);return Px(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Ex(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ex(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Px(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Bx(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Bx(this.inputSpec);if(e.length!==t.length)throw new Ax(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const i=s.rank;if(null!=r.ndim&&i!==r.ndim)throw new Ax(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(null!=r.maxNDim&&i>r.maxNDim)throw new Ax(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(null!=r.minNDim&&i<r.minNDim)throw new Ax(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new Ax(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),i=r.axes[t],a=s>=0?e[s]:e[e.length+s];if(null!=i&&-1===[i,null].indexOf(a))throw new Ax(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${i} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],i=s.shape[e];if(null!=t&&null!=i&&t!==i)throw new Ax(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Bx(e);let s=!0;for(const i of n)if(!(i instanceof Mv)){s=!1;break}let r=!0;for(const i of n)if(i instanceof Mv){r=!1;break}if(s===r)throw new Ax("Arguments to apply() must be all SymbolicTensors or all Tensors");return yy(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Bx(e))t.push(n.shape);this.build(Px(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=Bx(s),i=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(s=Px(i),null!=this.activityRegularizer)throw new _x("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=Uv(e),s=this.computeOutputShape(n);let r;const i=Vv(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new Mv(i,n,this,Bx(e),t,this.name,s))):new Mv(i,s,this,Bx(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new _x("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Ex(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Ex(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Rx(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Rv(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Dv(e?this.trainableWeights:this.weights)}setWeights(e){va((()=>{const t=this.weights;if(t.length!==e.length)throw new Ax(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=Dv(t);for(let r=0;r<s.length;++r){const i=s[r],a=t[r],o=e[r];if(!k(i.shape,o.shape))throw new Ax(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}Ov(n)}))}addWeight(e,t,n,s,r,i,a,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Ax(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():Cv("zeros"));const l=s.apply(t,n),u=new _v(l,n,e,i,a);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==i&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Bx(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,i,a=null){const o=Bx(e);t=Bx(t),n=Bx(n),s=Bx(s),r=Nv(r),i=Nv(i);const l=[],u=[],c=[];for(const h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new Pv({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:i},a);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e["batchInputShape"]=this.batchInputShape),null!=this.dtype&&(e["dtype"]=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Uv(e){e=Bx(e);const t=[];for(const n of e)t.push(n.shape);return Px(t)}function Vv(e){return"float32"}function Gv(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=e.inputTensors[n],r=e.inboundLayers[n],i=e.nodeIndices[n],a=Gv(s,r,i);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Hv extends Wv{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:ay("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Ax("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Ax("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Ax("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new Mv(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Pv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Ax(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function jv(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Ax("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");const s=new Hv({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}),r=s.inboundNodes[0].outputTensors;return r[0]}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function qv(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return da(t,e.dtype)}catch(eX){throw new Ax(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}Hv.className="InputLayer",Ga(Hv);class Kv{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Kv)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Ax(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=qv(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Mv){if(null==this.id2Value[e.id])throw new Ax(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Ax(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Mv){if(null==this.id2Value[e.id])throw new Ax(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Ax(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&wa(this.id2Mask)}}const Xv=new Ox,Jv=new Ox;function Yv(e){null!=Xv&&Xv.setMaxEntries(e),null!=Jv&&Jv.setMaxEntries(e)}function Zv(e,t,n,s){const r=null!=n&&n["training"],i=Array.isArray(e),a=i?e:[e],o=a.map((e=>e.name)),l=[],u=t.names();for(const f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=Xv.get(c);if(null==d){const e=Qv(a,t);d=e.sorted,h=e.recipientCounts,Xv.put(c,d),Jv.put(c,h)}h={},r||Object.assign(h,Jv.get(c));const p=new Kv(t);for(let f=0;f<d.length;++f){if(null!=s){const e=ya().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const e=d[f],i=e.sourceLayer;if(i instanceof Hv)continue;const a=[],u=[],c=[];let g=!1;for(const n of e.inputs){const e=p.getValue(n),s=p.getMask(n);a.push(e),u.push(s),null!=s&&(g=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}g&&(n=n||{},n["mask"]=u[0]);const m=Bx(i.apply(a,n));let b=null;i.supportsMasking&&(b=i.computeMask(a,u));const x=nw(e),y=Array.isArray(x)?x:[x];for(let t=0;t<y.length;++t){p.hasKey(y[t])||p.add(y[t],m[t],Array.isArray(b)?b[0]:b);const e=o.indexOf(y[t].name);-1!==e&&(l[e]=m[t])}r||wa(c)}return p.disposeMasks(),i?l:l[0]}function Qv(e,t){x(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=tw(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of e){const{sorted:e,recipientMap:a}=tw(i,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in a)null==s[t]&&(s[t]=new Set),a[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:ew(s)}}function ew(e){const t={};for(const n in e)t[n]=e[n].size;return t}function tw(e,t){const n=new Set,s=[],r={};for(const o of t.names())n.add(o);const i=[],a=[];i.push(e);while(i.length>0){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=a[a.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),s.push(e),n.add(e.name),t&&a.pop();else{a.push(i.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:s,recipientMap:r}}function nw(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const sw=ie();
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function rw(e,t){return va((()=>Da(Hu(_a(e,e),t,!0))))}sw.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),Yv);class iw extends Ua{getConfig(){return{}}}class aw extends iw{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return va((()=>{const t=rw(e,this.axis),n=Wl(t,0,this.maxValue);return _a(e,Ra(n,$a(Ay(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}aw.className="MaxNorm",Ga(aw);class ow extends iw{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return va((()=>Ra(e,$a(Ay(),rw(e,this.axis)))))}getConfig(){return{axis:this.axis}}}ow.className="UnitNorm",Ga(ow);class lw extends iw{apply(e){return Wc(e)}}lw.className="NonNeg",Ga(lw);class uw extends iw{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return va((()=>{const t=rw(e,this.axis),n=$a(_a(this.rate,Wl(t,this.minValue,this.maxValue)),_a(1-this.rate,t));return _a(e,Ra(n,$a(Ay(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}uw.className="MinMaxNorm",Ga(uw);const cw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function hw(e){return Gx(e)}function dw(e,t={}){return jx(e,Va.getMap().classNameMap,t,"constraint")}function pw(e){if(null==e)return null;if("string"===typeof e){const t=e in cw?cw[e]:e,n={className:t,config:{}};return dw(n)}return e instanceof iw?e:dw(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
async function fw(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const i=e[r];if("number"!==typeof i){const e=i;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];wa(s)}}function gw(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var mw;(function(e){e[e["SILENT"]=0]="SILENT",e[e["VERBOSE"]=1]="VERBOSE"})(mw||(mw={}));const bw=125;class xw{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class yw{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class vw extends xw{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t["size"]?0:t["size"];this.seen+=n;for(const s in t){const e=t[s];if("number"===typeof e)this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+e*n;else{let t;s in this.totals?t=this.totals[s]:this.totals[s]=0;const r=va((()=>$a(this.totals[s],_a(e,n))));this.totals[s]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params["metrics"])null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:va((()=>{const e=_a(Ra(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),ka(t[n])})))}}class ww extends xw{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let i=0;i<s.length;++i)if("number"!==typeof s[i]){const a=s[i];e.push(a.data()),t.push(r),n.push(i)}}const s=await Promise.all(e);for(let r=0;r<s.length;++r){const e=this.history[t[r]][n[r]];e.dispose(),this.history[t[r]][n[r]]=s[r][0]}}}class kw extends xw{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||wp,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=bw),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");P(this.yieldEvery)&&(this.maybeWait=ty(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await fw(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await fw(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await fw(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await fw(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await fw(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):P(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await fw(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await fw(e),await this.trainEnd(e))}}function Iw(e,t){if(null==e&&(e={}),e instanceof xw)return[e];if(Array.isArray(e)&&e[0]instanceof xw)return e;const n=Bx(e);return n.map((e=>new kw(e,t)))}class Sw{constructor(){}static registerCallbackConstructor(e,t){x(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Sw.checkForDuplicate(t),null==Sw.constructors[e]&&(Sw.constructors[e]=[]),Sw.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Sw.constructors){const n=Sw.constructors[+t];n.forEach((t=>{if(t===e)throw new Ax("Duplicate callback constructor.")}))}}static clear(){Sw.constructors={}}static createCallbacks(e){const t=[];for(const n in Sw.constructors){const s=+n;e>=s&&t.push(...Sw.constructors[s])}return t.map((e=>new e))}}function Cw(e,t,n,s,r,i,a,o,l){const u=new ww,c=[new vw,...Sw.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new yw(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:i,batchSize:a,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function $w(e,t={},n=!1){return jx(e,Va.getMap().classNameMap,t,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Nw(e,t){return va((()=>{"float32"!==e.dtype&&(e=da(e,"float32"));const n=Hu(qy(e),t,!0),s=qa(n.shape,Ay()),r=Da(ao(n,s));return Ra(e,r)}))}function Tw(e,t){return va((()=>sc(qy(Za(t,e)),-1)))}function Ew(e,t){return va((()=>sc(to(Za(t,e)),-1)))}function Rw(e,t){return va((()=>{const n=Za(e,t),s=Wl(to(e),Ay(),Number.MAX_VALUE),r=to(Ra(n,s));return _a(100,sc(r,-1))}))}function Aw(e,t){return va((()=>{const n=Wl(t,Ay(),Number.MAX_VALUE),s=Pu($a(1,n)),r=Wl(e,Ay(),Number.MAX_VALUE),i=Pu($a(1,r));return sc(qy(Za(s,i)),-1)}))}function _w(e,t){return va((()=>{const n=ao(0,Za(1,_a(e,t)));return sc(qy(n),-1)}))}function Fw(e,t){return va((()=>{const n=ao(0,Za(1,_a(e,t)));return sc(n,-1)}))}function Dw(e,t){return va((()=>{const n=Hu(_a(e,t),-1),s=Vu(_a(Za(1,e),t),-1);return ao(0,$a(1,Za(s,n)))}))}function Ow(e,t){return va((()=>{const n=Math.log(2),s=Za(t,e),r=Za($a(s,uh(_a(-2,s))),n);return sc(r,-1)}))}function Lw(e,t,n=!1){return va((()=>{if(n)t=oh(t);else{const e=Hu(t,t.shape.length-1,!0);t=Ra(t,e)}return t=Wl(t,Ay(),1-Ay()),yc(Hu(_a(da(e,"float32"),Pu(t)),t.shape.length-1))}))}function Mw(e,t,n=!1){return va((()=>{const s=da(Eu(Ly(e)),"int32");t=Wl(t,Ay(),1-Ay());const r=t.shape,i=Sl(Ic(s,r[r.length-1]),r);return Lw(i,t,n)}))}function zw(e,t){if(!k(e.shape,t.shape))throw new Ax(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return va((()=>{const n=Wc(t),s=yc(to(t));return $a(Za(n,_a(t,e)),Wu(wu(s)))}))}function Pw(e,t){return va((()=>{let n;return n=Wl(t,Ay(),1-Ay()),n=Pu(Ra(n,Za(1,n))),sc(zw(e,n),-1)}))}function Bw(e,t){return va((()=>{const n=Wl(e,Ay(),1),s=Wl(t,Ay(),1);return Hu(_a(e,Pu(Ra(n,s))),-1)}))}function Ww(e,t){return va((()=>{const n=Pu($a(Ay(),t));return sc(Za(t,_a(e,n)),-1)}))}function Uw(e,t){return va((()=>{const n=Nw(e,-1),s=Nw(t,-1),r=_a(n,s);return yc(Hu(r,-1))}))}Sw.constructors={};const Vw={meanSquaredError:Tw,meanAbsoluteError:Ew,meanAbsolutePercentageError:Rw,meanSquaredLogarithmicError:Aw,squaredHinge:_w,hinge:Fw,categoricalHinge:Dw,logcosh:Ow,categoricalCrossentropy:Lw,sparseCategoricalCrossentropy:Mw,binaryCrossentropy:Pw,kullbackLeiblerDivergence:Bw,poisson:Ww,cosineProximity:Uw};function Gw(e){if("string"===typeof e){if(e in Vw)return Vw[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Ax(t)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Hw(e,t){return va((()=>{const n=_a(.5,Nc(t)),s=Fy(Fu(t,n),e.dtype);return sc(yu(e,s),-1)}))}function jw(e,t){return va((()=>Fy(yu(sl(e,-1),sl(t,-1)),"float32")))}function qw(e,t){return va((()=>da(Hu(Xu(yu(e,1),yu(t,1))),"float32")))}function Kw(e,t){return va((()=>da(Hu(Xu(yu(e,0),yu(t,1))),"float32")))}function Xw(e,t){return va((()=>{const n=qw(e,t),s=Kw(e,t),r=$a(n,s);return da(Ch(Fu(r,0),Ra(n,r),0),"float32")}))}function Jw(e,t){return Pw(e,t)}function Yw(e,t){return e.rank===t.rank&&(e=ph(e,[e.rank-1])),t=sl(t,-1),t.dtype!==e.dtype&&(t=da(t,e.dtype)),da(yu(e,t),"float32")}const Zw=Tw,Qw=Tw,ek=Ew,tk=Ew,nk=Rw,sk=Rw,rk=Lw,ik=Uw,ak=Mw,ok={binaryAccuracy:Hw,categoricalAccuracy:jw,precision:Xw,categoricalCrossentropy:rk,sparseCategoricalCrossentropy:ak,mse:Zw,MSE:Qw,mae:ek,MAE:tk,mape:nk,MAPE:sk,cosine:ik};function lk(e){if("string"===typeof e&&e in ok)return ok[e];if("string"!==typeof e&&null!=e)return e;throw new Ax(`Unknown metric ${e}`)}function uk(e){if(Mx(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(Vw))if(Vw[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(ok))if(ok[n]===e){t=n;break}return void 0!==t?t:e.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function ck(e){const t={Adagrad:()=>yp.adagrad(.01),Adadelta:()=>yp.adadelta(1,.95,Ay()),Adam:()=>yp.adam(.001,.9,.999,Ay()),Adamax:()=>yp.adamax(.002,.9,.999,Ay(),0),RMSProp:()=>yp.rmsprop(.001,.9,0,Ay()),SGD:()=>yp.sgd(.01)};if(t["adagrad"]=t["Adagrad"],t["adadelta"]=t["Adadelta"],t["adam"]=t["Adam"],t["adamax"]=t["Adamax"],t["rmsprop"]=t["RMSProp"],t["sgd"]=t["SGD"],e in t)return t[e]();throw new Ax(`Unknown Optimizer ${e}`)}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const hk=1048576;function dk(e,t,n=!1){if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!pk(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>hk&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${hk}.`)}}function pk(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!pk(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!pk(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function fk(e,t,n,s=console.log){const r=mk(e),i=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){i.push("Receives inputs"),a=[];for(const t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}s("_".repeat(t)),bk(i,n,s),s("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)r?xk(o[c],n,s):yk(o[c],n,a,s),s((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=gk(e),u=Rv(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}function gk(e){let t;return t=null!=e.collectedTrainableWeights?Rv(e.collectedTrainableWeights):Rv(e.trainableWeights),t}function mk(e){let t=!0;const n=[],s=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==s.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}function bk(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function xk(e,t,n){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(eX){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(eX){s="multiple"}const i=e.name,a=e.getClassName(),o=[`${i} (${a})`,r,s,e.countParams().toString()];bk(o,t,n)}function yk(e,t,n,s){let r,i;try{i=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(eX){i="multiple"}try{r=JSON.stringify(e.outputShape)}catch(eX){r="multiple"}const a=[];for(const h of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(h)))for(let e=0;e<h.inboundLayers.length;++e){const t=h.inboundLayers[e].name,n=h.nodeIndices[e],s=h.tensorIndices[e];a.push(`${t}[${n}][${s}]`)}const o=e.name,l=e.getClassName(),u=0===a.length?"":a[0],c=[`${o} (${l})`,i,r,e.countParams().toString(),u];bk(c,t,s);for(let h=1;h<a.length;++h)bk(["","","","",a[h]],t,s)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function vk(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function wk(e,t){if(null===e)return null;if("string"===typeof e)return Ux(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];vk(t,r,s)?n.push(s):n.push(wk(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"===typeof s)t[n]=s;else{const e=Ux(n);t[e]=wk(s,e)}}return t}}function kk(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return Wx(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];vk(t,r,s)?n.push(s):n.push(kk(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n],r=Wx(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof s?kk(s,n):s}return t}}
/** @license See the LICENSE file. */
const Ik="4.2.0";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Sk extends Wv{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=ay(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Xx(this.inputs).length!==this.inputs.length)throw new Ax(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Xx(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const b of this.inputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;Mx(0===t,"input layer has >1 nodes"),Mx(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const t=this.inputLayers[b];if(!(t instanceof Hv))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},i={},a=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new Rx(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Sk.nodeKey(s,r)),s.id in i||(i[s.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let i=0;i<c;i++){const e=u.inputTensors[i],s=u.inboundLayers[i],r=u.nodeIndices[i],a=u.tensorIndices[i];o(e,t,n,s,r,a)}t.push(u);while(n.indexOf(u)>=0)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const b of this.outputs)o(b,l,u);const c=a.slice().reverse();for(const b of c){n[b.id]=b,b.id in t||(t[b.id]=0);let e=t[b.id];const i=null==s[b.outboundLayer.id]?0:s[b.outboundLayer.id];e=Math.max(e,i),s[b.outboundLayer.id]=e,r[b.outboundLayer.id]=b.outboundLayer,t[b.id]=e;for(let s=0;s<b.inboundLayers.length;s++){const r=b.inboundLayers[s],i=b.nodeIndices[s],a=r.inboundNodes[i],o=null==t[a.id]?0:t[a.id];t[a.id]=Math.max(e+1,o),n[a.id]=a}}const h={};for(const b in t){const e=t[b];e in h||(h[e]=[]),h[e].push(n[b])}const d={};for(const b in s){const e=s[b];e in d||(d[e]=[]),d[e].push(r[b])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Kx);this.layers=[];for(const b of p){const e=d[b];e.sort(((e,t)=>{const n=i[e.id],s=i[t.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof Sk&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Kx);const f=this.inputs.slice(),g=[];for(const b of p)for(const e of h[b]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Rx(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${g}`);for(const t of e.outputTensors)f.push(t);g.push(t.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const b of m){const e=m.filter((e=>e===b)).length;if(1!==e)throw new Rx(`The name "${b}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new Pv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Ax("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const i of this.layers)for(const e of i.weights){if(null!=n[e.originalName])throw new Ax(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,s++}const r=[];for(const i in e){let s=i;if(null==n[i]){const e=i.split("/"),t=e.slice(0,-2).concat([e[e.length-1]]);s=t.join("/")}if(null!=n[s])r.push([n[s],e[i]]);else if(t)throw new Ax(`Provided weight data has no target variable: ${i}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Ax(`${e.length} of ${s} weights are not set: ${e}`)}Ov(r)}updatedConfig(){const e=this.getConfig(),t={};return t["className"]=this.getClassName(),t["config"]=e,t["kerasVersion"]=`tfjs-layers ${Ik}`,t["backend"]="TensorFlow.js",t}toJSON(e,t=!0){const n=kk(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return va((()=>{e=Bx(e);const n=new Kv;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Zv(this.outputs,n,t)}))}computeMask(e,t){return va((()=>{let n;return e=Bx(e),n=null==t?Lx(null,e.length):Bx(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Nv(e);if(t.length!==this.inputLayers.length)throw new Ax(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<t.length;a++){const e=this.inputLayers[a],s=t[a],r=e.name+"_0_0";n[r]=s}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Kx);if(s.length>1)for(const a of s){const e=this.nodesByDepth[a];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const s=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],r=t.nodeIndices[o],i=t.tensorIndices[o],a=`${e.name}_${r}_${i}`,l=n[a];s.push(l)}const r=e.computeOutputShape(Px(s)),i=Nv(r),a=e.inboundNodes.indexOf(t);for(let t=0;t<i.length;t++){const s=`${e.name}_${a}_${t}`;n[s]=i[t]}}}const r=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],t=this.outputLayersNodeIndices[a],n=this.outputLayersTensorIndices[a],s=`${e.name}_${t}_${n}`;i.push(s)}for(let a=0;a<i.length;a++){const e=i[a];Mx(e in n),r.push(n[e])}return Px(r)}runInternalGraph(e,t){null==t&&(t=Lx(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const s=this.inputs[o],r=e[o],i=t[o];n[s.id]=[r,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Kx);for(const o of s){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,r=t.outputTensors,i=new Array;for(const t of s)t.id in n&&i.push(n[t.id]);if(i.length===s.length){let s,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u["mask"]&&(u["mask"]=n),o=Bx(e.call(t,u)),l=Bx(e.computeMask(t,n)),s=[t],a=[n]}else s=i.map((e=>e[0])),a=i.map((e=>e[1])),null==u["mask"]&&(u["mask"]=a),o=Bx(e.call(s,u)),l=Bx(e.computeMask(s,a));if(e.activityRegularizer)throw new _x("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],i=l[e];n[t.id]=[s,i]}}}}const r=[],i=[],a=[];for(const o of this.outputs){Mx(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];a.push(e.shape),r.push(e),i.push(t)}return[r,i,a]}buildNodeConversionMap(e){const t={};let n;for(const s of this.layers){n=s instanceof Sk?1:0;for(let e=0;e<s.inboundNodes.length;e++){const r=Sk.nodeKey(s,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Ax(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Ax("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new Ax(`No such layer: ${e}`)}calculateLosses(){return va((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=Sk.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const e=i.getClassName(),s=i.getConfig(),r=[];for(let n=0;n<i.inboundNodes.length;n++){const e=i.inboundNodes[n],s=Sk.nodeKey(i,n);let a={};if(this.containerNodes.has(s)){if(e.callArgs)try{JSON.stringify(e.callArgs),a=e.callArgs}catch(eX){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(e.inboundLayers.length>0){const n=[];for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=e.tensorIndices[s],l=Sk.nodeKey(r,i);let u=t[l];null==u&&(u=0),n.push([r.name,u,o,a])}r.push(n)}}}const a={};a["name"]=i.name,a["className"]=e,a["config"]=s,a["inboundNodes"]=r,n.push(a)}e["layers"]=n;const s=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],r=Sk.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let a=t[r];null!==a&&void 0!==a||(a=0);const o=this.inputLayersTensorIndices[i];s.push([e.name,a,o])}e["inputLayers"]=s;const r=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],s=Sk.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let a=t[s];null!==a&&void 0!==a||(a=0);const o=this.outputLayersTensorIndices[i];r.push([e.name,a,o])}return e["outputLayers"]=r,e}static fromConfig(e,t,n={},s=!1){const r={},i={};function a(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let s;for(const i of t){const o=i[0],l=i[1],u=i[2];if(s=null==i[3]?{}:i[3],!(o in r))return void a(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void a(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Px(n),s)}function l(e){const n=e["name"],i=$w(e,null!=t["customObjects"]?t["customObjects"]:{});i.setFastWeightInitDuringBuild(s),r[n]=i;const o=e["inboundNodes"];o.forEach((e=>{if(!(e instanceof Array))throw new Ax(`Corrupted configuration, expected array for nodeData: ${e}`);a(i,e)}))}const u=t["name"],c=t["layers"];for(const g of c)l(g);while(!Jx(i))for(const e of c){const t=r[e["name"]];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t["inputLayers"];for(const g of p){const e=g[0],t=g[1],n=g[2];Mx(e in r);const s=r[e],i=s.inboundNodes[t].outputTensors;h.push(i[n])}const f=t["outputLayers"];for(const g of f){const e=g[0],t=g[1],n=g[2];Mx(e in r);const s=r[e],i=s.inboundNodes[t].outputTensors;d.push(i[n])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Ax("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){va((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Ck(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function $k(e,t){return Ck(e,t,"classWeight")}async function Nk(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=va((()=>{if(1===e.shape.length)return fa(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return sl(e,t)}if(1===e.shape[1])return Sl(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());wa(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),xh(r,"float32")}return null}function Tk(e,t){return _a(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Ek=32;function Rk(e,t){let n,s;const r=t;n=r["xs"],s=r["ys"],x(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=Ak("input",e.inputNames,n),a=Ak("output",e.outputNames,s),o=i[0].shape[0];x(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),x(a.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<i.length;l++)x(i[l].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let l=0;l<a.length;l++)x(a[l].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:i,ys:a}}function Ak(e,t,n){if(n instanceof $r)return[n];if(Array.isArray(n))return x(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new Ax(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function _k(e){if(3===e.length)throw new _x("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function Fk(e,t,n){const s=null!=n.batchesPerEpoch;if(x(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),x(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),x(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),x(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),x(null==n["validationSplit"],(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let i,a;if(r)if(Ok(n.validationData))x(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=_k(n.validationData);i=e.xs,a=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Iw(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Cw(c,h,n.epochs,null,null,Dk(t,n),null,r,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();while(f<n.epochs){const u={};await d.onEpochBegin(f);let c=0,h=0;s||(g=await t.iterator());while(!s||c<n.batchesPerEpoch){const t=await g.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=Rk(e,t.value),i={};i["batch"]=h,i["size"]=s[0].shape[0],await d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const t=$k(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)a.push(await Nk(r[e],null,t[e]))}const u=s.concat(r).concat(a),p=o(u);wa(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];i[t]=n,ka(n)}await d.onBatchEnd(h,i),gw(i),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=Ok(n.validationData)?Bx(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Bx(e.evaluate(i,a,{batchSize:null==n.validationBatchSize?Ek:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Dk(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function Ok(e){return"function"===typeof e.iterator}function Lk(e){return"function"===typeof e.next}async function Mk(e,t,n){n=n||{};const s=null!=n.batches,r=e.testFunction;let i=[];if(n.verbose>0)throw new _x("Verbose mode is not implemented yet.");x(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a=Lk(t)?t:await t.iterator();let o=0,l=0;while(!s||l<n.batches){const t=await a.next();if(i=va((()=>{if(t.value){const{xs:n,ys:s}=Rk(e,t.value),a=n.concat(s),u=va((()=>r(a)));if(wa(a),0===l)for(let e=0;e<u.length;++e)i.push(Wa(0));const c=a[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=i[e];i[e]=va((()=>$a(i[e],_a(c,t)))),l>0&&wa(n)}wa(u),o+=c,++l}return i})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<i.length;++u){const e=i[u];i[u]=Ra(i[u],o),wa(e)}return Px(i)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function zk(e){x(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Pk(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>zy(e,t,n-t))):zy(e,t,n-t)}function Bk(e,t){return va((()=>null==e?null:Array.isArray(e)?e.map((e=>Bk(e,t))):jy(e,"int32"===t.dtype?t:da(t,"int32"))))}function Wk(e,t){const n=[];let s=0,r=null;while(s<e)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function Uk(e){const t=[];e instanceof $r&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(Dy(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Vk(e,t){if(null==e)return;const n=[];if(t instanceof $r)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const s=[];if(e instanceof $r)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&s.push(t)}s.forEach((e=>{e.isDisposed||e.dispose()}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Gk(e){return e instanceof $r}function Hk(e){return Array.isArray(e)}function jk(e){return!Gk(e)&&!Hk(e)}function qk(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Hk(e)&&e.length>0)t=!0;else if(jk(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Ax(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let i;if(jk(e)){i=[];for(const n of t){if(null==e[n])throw new Ax(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if(Hk(e)){if(e.length!==t.length)throw new Ax(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new Ax(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=Uk(i),null!=n)for(let a=0;a<t.length;++a){if(null==n[a])continue;const e=i[a];if(e.shape.length!==n[a].length)throw new Ax(`Error when checking ${r}: expected ${t[a]} to have ${n[a].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[a].length;++t){if(0===t&&!s)continue;const i=e.shape[t],o=n[a][t];if(null!=o&&o>=0&&i!==o)throw new Ax(`${r} expected a batch of elements where each example has shape [${n[a].slice(1,n[a].length)}] (i.e.,tensor shape [*,${n[a].slice(1,n[a].length)}]) but the ${r} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return i}function Kk(e,t,n){const s=Xx(e.map((e=>e.shape[0])));s.sort();const r=Xx(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new Ax(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Ax(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&r.length>0&&!k(s,r))throw new Ax(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function Xk(e,t,n){const s=[Tw,Pw,Lw];for(let r=0;r<e.length;++r){const i=e[r],a=t[r],o=n[r];if(null!=a){if(a===Lw&&1===i.shape[i.shape.length-1])throw new Ax(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(a)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new Ax(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Jk(e,t,n,s=!0,r=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new Ax(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new Ax(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let a=0;a<t.length;++a){if(null==n[a])continue;const e=i[a];if(e.shape.length!==n[a].length)throw new Ax(`Error when checking ${r}: expected ${t[a]} to have ${n[a].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let i=0;i<n[a].length;++i){if(0===i&&!s)continue;const o=e.shape[i],l=n[a][i];if(null!=l&&l!==o)throw new Ax(`Error when checking ${r}: expected ${t[a]} to have shape ${JSON.stringify(n[a])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}function Yk(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}const Zk="layers-model";class Qk extends Sk{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Ax("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");fk(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=ck(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ha))throw new Ax("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Ax(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Gw(e)))}else{const n=Gw(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Ax(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Gw(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const e=this.internalOutputShapes[i],t=this.outputNames[i];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[i])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],yy("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=Yk(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};yy("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=s[e],i=t=>{const n="";let s,i,a;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Pw?-1!==["accuracy","acc"].indexOf(o)?i=Hw:-1!==["crossentropy","ce"].indexOf(o)&&(i=Jw):this.lossFunctions[e]===Mw?-1!==["accuracy","acc"].indexOf(o)?i=Yw:-1!==["crossentropy","ce"].indexOf(o)&&(i=ak):-1!==["accuracy","acc"].indexOf(o)?i=jw:-1!==["crossentropy","ce"].indexOf(o)&&(i=rk),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),a=i,s=n+r}else{const e=lk(o);a=e,s=n+uk(o)}let t;yy(s,(()=>{t=a})),r(e,s,t)}};i(t)}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;zk(s);const r=!0,i=this.standardizeUserDataXY(e,t,r,s);try{const e=i[0].concat(i[1]);this.makeTestFunction();const t=this.testFunction,r=this.testLoop(t,e,s,n.verbose,n.steps);return Px(r)}finally{Vk(i[0],e),Vk(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),Mk(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new Ax(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Ax(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Ax("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),i=new Kv;if(e instanceof $r&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Ax(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new Ax(`No value is provided for the model's input ${o.name}`);i.add(o,t)}const a=Zv(r,i);return n?a:a[0]}retrieveSymbolicTensors(e){const t=Lx(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],i=r.map((e=>e.name));for(let s=0;s<e.length;++s){const a=i.indexOf(e[s]);if(-1!==a&&(t[s]=r[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new Ax(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return va((()=>{const s=this.checkNumSamples(e);if(n)throw new _x("Verbose predictLoop() is not implemented yet.");const r=Wk(s,t),i=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){const n=va((()=>{const n=r[t][0],s=r[t][1],i=Pk(e,n,s),a=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)a.push({key:this.inputs[e],value:i[e]});else a.push({key:this.inputs[0],value:i});const o=new Kv(a);return Zv(this.outputs,o)}));n.forEach(((e,t)=>i[t].push(e)))}return Px(i.map((e=>Vl(e,0))))}))}predict(e,t={}){const n=Uk(e);Jk(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return zk(e),this.predictLoop(n,e)}finally{Vk(n,e)}}predictOnBatch(e){Jk(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new Rx("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const e=this.feedOutputShapes[i],t=this.feedLossFns[i];t===Mw?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(e=qk(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=qk(t,this.feedOutputNames,r,!1,"target"),Kk(e,t,null),Xk(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!==0)throw new Ax(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,i){const[a,o]=this.standardizeUserDataXY(e,t,r,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=$k(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Nk(o[t],null,e[t]))}return[a,o,l]}testLoop(e,t,n,s=0,r){return va((()=>{const i=this.checkNumSamples(t,n,r,"steps"),a=[];if(s>0)throw new _x("Verbose mode is not implemented yet.");if(null!=r)throw new _x("steps mode in testLoop() is not implemented yet");{const s=Wk(i,n),r=xh(Ey(0,i));for(let n=0;n<s.length;++n){const i=s[n][0],o=s[n][1],l=zy(r,i,o-i),u=Bk(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)a.push(Wa(0));for(let e=0;e<c.length;++e){const t=c[e];a[e]=$a(a[e],_a(o-i,t))}}for(let e=0;e<a.length;++e)a[e]=Ra(a[e],i)}return a}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;if(zx(e,s)>1){const t=zx(e.slice(0,n),s);r+=`_${t}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const a=new Kv(e),o=Zv(this.outputs,a,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){const e=this.lossFunctions[n];let i=e(s[n],o[n]);null!=r[n]&&(i=Tk(i,r[n]));const a=sc(i);t.push(a),l=0===n?i:$a(l,i)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=sc(t(s[r],o[r]))}ka(e),i.push(e)}return l=sc(l),this.calculateLosses().forEach((e=>{l=$a(l,e)})),l},o=this.collectedTrainableWeights.map((e=>e.read())),l=!0,u=this.optimizer_.minimize(a,l,o);return[u].concat(i)}}makeTestFunction(){this.testFunction=e=>va((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:s[e]});const a=new Kv(i),o=Zv(this.outputs,a);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],i=sc(s(r[e],o[e]));n=0===e?i:$a(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],i=sc(n(r[s],o[s]));t.push(i)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,r,i,a,o,l,u,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;zk(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);s=f[0],r=f[1],h=f[2];let g,m=!1;if(null!=n.validationData&&n.validationData.length>0){if(m=!0,2!==n.validationData.length)throw 3===n.validationData.length?new _x("validationData including sample weights is not supported yet."):new Ax(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,d);u=t[0],c=t[1],g=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){m=!0;const e=Math.floor(s[0].shape[0]*(1-n.validationSplit)),t=s[0].shape[0];u=Pk(s,e,t),i=s,s=Pk(s,0,e),c=Pk(r,e,t),a=r,r=Pk(r,0,e),g=u.concat(c)}else null!=n.validationSteps&&(m=!0);const b=s.concat(r).concat(h);this.checkTrainableWeightsConsistency();const x=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let v,w;m?(this.makeTestFunction(),v=this.testFunction,w=y.slice().concat(y.map((e=>"val_"+e)))):(v=null,g=[],w=y.slice());const k=Iw(n.callbacks,n.yieldEvery),I=await this.fitLoop(x,b,y,d,n.epochs,n.verbose,k,v,g,n.shuffle,w,n.initialEpoch,null,null);return I}finally{this.isTraining=!1,Vk(s,e),Vk(r,t),Vk(i,e),Vk(a,t),Vk(u,o),Vk(c,l),null!=h&&wa(h)}}async fitLoop(e,t,n,s,r,i,a,o,l,u,c,h,d,f){null==s&&(s=32),null==r&&(r=1),null==u&&(u=!0),null==h&&(h=0);let g=!1;if(null!=o&&null!=l&&(g=!0),null!=f&&(g=!0,null==d))throw new Ax("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,s,d,"steps_per_epoch");let b;null!=m&&(b=Ey(0,m)),null==i&&(i=1);const{callbackList:x,history:y}=Cw(a,i,r,h,m,d,s,g,c);x.setModel(this),this.history=y,await x.onTrainBegin(),this.stopTraining_=!1;for(let v=h;v<r;++v){await x.onEpochBegin(v);const r={};if(null!=d)throw new _x("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new _x("batch shuffling is not implemneted yet");u&&p(b);const i=xh(b),a=Wk(m,s);for(let u=0;u<a.length;++u){const c={};if(await x.onBatchBegin(u,c),va((()=>{const h=a[u][0],d=a[u][1],p=zy(i,h,d-h);c["batch"]=u,c["size"]=d-h;const f=Bk(t,p),m=e(f);for(let e=0;e<n.length;++e){const t=n[e],s=m[e];c[t]=s,ka(s)}if(u===a.length-1&&g){const e=this.testLoop(o,l,s);for(let t=0;t<n.length;++t){const s=n[t],i=e[t];ka(i),r["val_"+s]=i}}})),await x.onBatchEnd(u,c),gw(c),this.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(v,r),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Fk(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],i=this.makeTrainFunction(),a=i(s.concat(r)),o=[];for(const l of a){const e=await l.data();o.push(e[0])}return wa(a),Vk(n[0],e),Vk(n[1],t),Px(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let i=0;i<s.length;++i)n&&!s[i].trainable||t.push({name:s[i].originalName,tensor:r[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ya().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ya().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=Wx(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Wx(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!==typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=Wx(n[s])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[Wx(uk(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Wx(uk(e))));{const e={};for(const t in this.metrics)e[t]=Wx(uk(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=wk(e.optimizer_config),n=$w(t);let s,r;if("string"===typeof e.loss)s=Ux(e.loss);else if(Array.isArray(e.loss))s=e.loss.map((e=>Ux(e)));else if(null!=e.loss){s={};for(const t in e.loss)s[t]=Ux(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Ux(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Ux(e.metrics[t])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if("string"===typeof e){const t=Ai(e);if(0===t.length)throw new Ax(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Ax(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Ax("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await pi(this.getNamedWeights(t)),s=!1,r=null,i=this.toJSON(r,s),a={modelTopology:i,format:Zk,generatedBy:`TensorFlow.js tfjs-layers v${Ik}`,convertedBy:null},o=null!=t&&t.includeOptimizer;if(o&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await pi(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=vi([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;dk(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){dk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Qk.className="Model",Ga(Qk);class eI extends Qk{}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
async function tI(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n["model_config"]&&(n=n["model_config"]);const s=wk(n),r=$w(s,t);if(null!=e.weightsManifest){const t=await Io(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),wa(t)}return r}eI.className="Functional",Ga(eI);class nI extends Qk{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:ay("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){const t=e.inboundNodes[0].outputTensors[0].shape;if(t.some((e=>e<0)))throw new Ax(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof nI||e instanceof Qk;let n;if(t){if(n=e,1!==n.outputs.length)throw new Ax("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Ax("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Ax("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=jv({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Ax(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Ax("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Gv(this.outputs[0])}this.inboundNodes=[],new Pv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Lx(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ev(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Qk({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Rx("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Rx("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Rx("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Rx("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0]["className"])throw new Ax("Legacy serialization format not supported yet.");r=t}else x(null!=t["layers"],(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t["layers"],delete t["layers"],i=t;const a=new e(i);if(!(a instanceof nI))throw new _x(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const o of r){const e=void 0,t=$w(o,e,s);s&&t.setFastWeightInitDuringBuild(!0),a.add(t)}return a}set stopTraining(e){if(null==this.model)throw new Ax("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Ax("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n["className"]=t.getClassName(),n["config"]=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}nI.className="Sequential",Ga(nI);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class sI extends Ua{getConfig(){return{}}}class rI extends sI{apply(e,t=1){return Jy(e,t)}}rI.className="elu",Ga(rI);class iI extends sI{apply(e){return Hc(e)}}iI.className="selu",Ga(iI);class aI extends sI{apply(e){return Wc(e)}}aI.className="relu",Ga(aI);class oI extends sI{apply(e){return va((()=>oc(6,Wc(e))))}}oI.className="relu6",Ga(oI);class lI extends sI{apply(e){return e}}lI.className="linear",Ga(lI);class uI extends sI{apply(e){return Xc(e)}}uI.className="sigmoid",Ga(uI);class cI extends sI{apply(e){return Qy(e)}}cI.className="hardSigmoid",Ga(cI);class hI extends sI{apply(e){return uh(e)}}hI.className="softplus",Ga(hI);class dI extends sI{apply(e){return Yy(e)}}dI.className="softsign",Ga(dI);class pI extends sI{apply(e){return bh(e)}}pI.className="tanh",Ga(pI);class fI extends sI{apply(e,t=-1){return oh(e,t)}}fI.className="softmax",Ga(fI);class gI extends sI{apply(e,t=-1){return qu(e,t)}}gI.className="logSoftmax",Ga(gI);class mI extends sI{apply(e,t=1){return va((()=>_a(Xc(_a(e,t)),e)))}}mI.className="swish",Ga(mI);class bI extends sI{apply(e){return va((()=>_a(e,bh(uh(e)))))}}function xI(e){return e.getClassName()}function yI(e,t={}){return jx(e,Va.getMap().classNameMap,t,"activation")}function vI(e){if(null==e){const e={className:"linear",config:{}};return yI(e)}if("string"===typeof e){const t={};return t["className"]=e,t["config"]={},yI(t)}return e instanceof sI?e:yI(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function wI(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}bI.className="mish",Ga(bI);class kI extends Ua{}class II extends kI{constructor(e){super(),wI(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return va((()=>{let t=Sc([1]);return this.hasL1&&(t=$a(t,Hu(_a(this.l1,to(e))))),this.hasL2&&(t=$a(t,Hu(_a(this.l2,qy(e))))),Sl(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t["l1"],l2:t["l2"]})}}II.className="L1L2",Ga(II);const SI={l1l2:"L1L2"};function CI(e){return Gx(e)}function $I(e,t={}){return jx(e,Va.getMap().classNameMap,t,"regularizer")}function NI(e){if(null==e)return null;if("string"===typeof e){const t=e in SI?SI[e]:e,n={className:t,config:{}};return $I(n)}return e instanceof kI?e:$I(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class TI extends Wv{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Tv(e);let n=Wc(e);return null!=this.maxValue&&(n=Wl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}TI.className="ReLU",Ga(TI);class EI extends Wv{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Tv(e);return Mu(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}EI.className="LeakyReLU",Ga(EI);class RI extends Wv{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Cv(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=NI(e.alphaRegularizer),this.alphaConstraint=pw(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new Ax(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){e=Ev(e);const t=e.slice(1);if(null!=this.sharedAxes)for(const s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Lv({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Tv(e),Ac(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Sv(this.alphaInitializer),alphaRegularizer:CI(this.alphaRegularizer),alphaConstraint:hw(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}RI.className="PReLU",Ga(RI);class AI extends Wv{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new _x(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Tv(e);return bu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}AI.className="ELU",Ga(AI);class _I extends Wv{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Tv(e);return _a(n,da(Fu(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}_I.className="ThresholdedReLU",Ga(_I);class FI extends Wv{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new fI).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Tv(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function DI(e,t,n){if("number"===typeof e)return Lx(e,t);if(e.length!==t)throw new Ax(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const r=e[s];if(!Cy(r))throw new Ax(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function OI(e,t,n,s,r=1){if(null==e)return e;const i=t+(t-1)*(r-1);let a;return a="same"===n?e:e-i+1,Math.floor((a+s-1)/s)}function LI(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+Ty([n-t,0]);else{if("same"!==s)throw new Ax(`Unsupport padding mode: ${s}.`);e*=t}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function MI(e,t){return va((()=>(py(t),"channelsFirst"===t?Ah(e,[0,2,3,1]):e)))}function zI(e,t){return va((()=>(py(t),"channelsFirst"===t?Ah(e,[0,2,3,4,1]):e)))}function PI(e,t,n,s=1,r="valid",i,a=1){return va((()=>{if(null==i&&(i=_y()),py(i),3!==e.shape.length)throw new Ax(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Ax(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Ax(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=Ah(e,[0,2,1])),"causal"===r)throw new _x("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=tu(e,t,s,"same"===r?"same":"valid","NWC",a);return null!=n&&(o=Xy(o,n)),o}))}function BI(e,t,n,s=[1,1],r="valid",i,a,o=null){return va((()=>{if(null==i&&(i=_y()),py(i),3!==e.rank&&4!==e.rank)throw new Ax(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Ax(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=MI(e,i);if("causal"===r)throw new _x("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=ed({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=Ah(l,[0,3,1,2])),l}))}function WI(e,t,n,s=[1,1,1],r="valid",i,a){return va((()=>{if(null==i&&(i=_y()),py(i),4!==e.rank&&5!==e.rank)throw new Ax(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Ax(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=zI(e,i);if("causal"===r)throw new _x("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=ou(o,t,s,"same"===r?"same":"valid","NDHWC",a),null!=n&&(o=Xy(o,n)),"channelsFirst"===i&&(o=Ah(o,[0,4,1,2,3])),o}))}FI.className="Softmax",Ga(FI);class UI extends Wv{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",UI.verifyArgs(t),this.rank=e,Qx(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new _x(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=DI(t.kernelSize,e,"kernelSize"),this.strides=DI(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,gy(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,py(this.dataFormat),this.activation=vI(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Cv(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=pw(t.biasConstraint),this.biasRegularizer=NI(t.biasRegularizer),this.activityRegularizer=NI(t.activityRegularizer),this.dilationRate=DI(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Ax(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Ax(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Ax(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Mx("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!Zx(e.kernelSize,"number",1,3))throw new Ax(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:xI(this.activation),useBias:this.useBias,biasInitializer:Sv(this.biasInitializer),biasRegularizer:CI(this.biasRegularizer),activityRegularizer:CI(this.activityRegularizer),biasConstraint:hw(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class VI extends UI{constructor(e,t){super(e,t),this.kernel=null,VI.verifyArgs(t),this.filters=t.filters,Qx(this.filters,"filters"),this.kernelInitializer=Cv(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=pw(t.kernelConstraint),this.kernelRegularizer=NI(t.kernelRegularizer)}build(e){e=Ev(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ax(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return va((()=>{let t;e=Tv(e);const n=null==this.bias?null:this.bias.read(),s=ny(this.activation.getClassName());if(null!=s&&2===this.rank)t=BI(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=PI(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=BI(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new _x("convolutions greater than 3D are not implemented yet.");t=WI(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Ev(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=OI(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Sv(this.kernelInitializer),kernelRegularizer:CI(this.kernelRegularizer),kernelConstraint:hw(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new Ax(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class GI extends VI{constructor(e){super(2,e),GI.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e["rank"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Zx(e.kernelSize,"number",1,2))throw new Ax(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}GI.className="Conv2D",Ga(GI);class HI extends VI{constructor(e){super(3,e),HI.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e["rank"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Ax(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}HI.className="Conv3D",Ga(HI);class jI extends GI{constructor(e){if(super(e),this.inputSpec=[new Lv({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Ax(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ev(e),4!==e.length)throw new Ax("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ax("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Lv({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return va((()=>{let t=Tv(e);if(4!==t.shape.length)throw new Ax(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,i;"channelsFirst"===this.dataFormat?(r=2,i=3):(r=1,i=2);const a=n[r],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=LI(a,c,l,this.padding),p=LI(o,h,u,this.padding),f=[s,d,p,this.filters];"channelsLast"!==this.dataFormat&&(t=Ah(t,[0,2,3,1]));let g=iu(t,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(g=Ah(g,[0,3,1,2])),null!=this.bias&&(g=Xy(g,this.bias.read(),this.dataFormat)),null!=this.activation&&(g=this.activation.apply(g)),g}))}computeOutputShape(e){e=Ev(e);const t=e.slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=LI(t[s],o,i,this.padding),t[r]=LI(t[r],l,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e["dilationRate"],e}}jI.className="Conv2DTranspose",Ga(jI);class qI extends HI{constructor(e){if(super(e),this.inputSpec=[new Lv({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Ax(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ev(e),5!==e.length)throw new Ax("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ax("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Lv({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return va((()=>{let t=Tv(e);if(5!==t.shape.length)throw new Ax(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,i,a;"channelsFirst"===this.dataFormat?(a=2,r=3,i=4):(a=1,r=2,i=3);const o=n[a],l=n[r],u=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=LI(o,p,c,this.padding),b=LI(l,f,h,this.padding),x=LI(u,g,d,this.padding),y=[s,m,b,x,this.filters];"channelsLast"!==this.dataFormat&&(t=Ah(t,[0,2,3,4,1]));let v=hu(t,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=Ah(v,[0,4,1,2,3])),null!==this.bias&&(v=Xy(v,this.bias.read(),this.dataFormat)),null!==this.activation&&(v=this.activation.apply(v)),v}))}computeOutputShape(e){e=Ev(e);const t=e.slice();let n,s,r,i;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,i=4):(n=4,s=1,r=2,i=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=LI(t[s],u,a,this.padding),t[r]=LI(t[r],c,o,this.padding),t[i]=LI(t[i],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e["dilationRate"],e}}qI.className="Conv3DTranspose",Ga(qI);class KI extends VI{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Ax("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Ax("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Ax(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Cv(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=NI(t.depthwiseRegularizer),this.depthwiseConstraint=pw(t.depthwiseConstraint),this.pointwiseInitializer=Cv(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=NI(t.pointwiseRegularizer),this.pointwiseConstraint=pw(t.pointwiseConstraint)}build(e){if(e=Ev(e),e.length<this.rank+2)throw new Ax(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Ax(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let a=0;a<this.rank;++a)r.push(1);r.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Lv({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return va((()=>{let t;if(e=Tv(e),1===this.rank)throw new _x("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Ah(e,[0,2,3,1])),t=qc(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Xy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Ah(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e["rank"],delete e["kernelInitializer"],delete e["kernelRegularizer"],delete e["kernelConstraint"],e["depthwiseInitializer"]=Sv(this.depthwiseInitializer),e["pointwiseInitializer"]=Sv(this.pointwiseInitializer),e["depthwiseRegularizer"]=CI(this.depthwiseRegularizer),e["pointwiseRegularizer"]=CI(this.pointwiseRegularizer),e["depthwiseConstraint"]=hw(this.depthwiseConstraint),e["pointwiseConstraint"]=hw(this.pointwiseConstraint),e}}KI.className="SeparableConv";class XI extends KI{constructor(e){super(2,e)}}XI.className="SeparableConv2D",Ga(XI);class JI extends VI{constructor(e){super(1,e),JI.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e["rank"],delete e["dataFormat"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Zx(e.kernelSize,"number",1,1))throw new Ax(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}JI.className="Conv1D",Ga(JI);class YI extends Wv{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return va((()=>{if(e=Tv(e),"channelsLast"===this.dataFormat){const t=By(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return By(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=By(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return By(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}YI.className="Cropping2D",Ga(YI);class ZI extends Wv{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,py(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,fy(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return va((()=>{let t=Tv(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Ah(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?mp.resizeNearestNeighbor(t,[e,s]):mp.resizeBilinear(t,[e,s]);return Ah(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?mp.resizeNearestNeighbor(t,[e,s]):mp.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function QI(e,t,n=[1,1],s="valid",r,i){return va((()=>{null==r&&(r=_y()),py(r);let a=MI(e,r);if(4!==e.rank)throw new Ax(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Ax(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=gu(a,t,n,"same"===s?"same":"valid","NHWC",i),"channelsFirst"===r&&(a=Ah(a,[0,3,1,2])),a}))}ZI.className="UpSampling2D",Ga(ZI);class eS extends UI{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Cv(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=pw(e.depthwiseConstraint),this.depthwiseRegularizer=NI(e.depthwiseRegularizer)}build(e){if(e=Ev(e),e.length<4)throw new Ax(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Ax(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return va((()=>{e=Tv(e);let t=QI(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Xy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Ev(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=OI(t,this.kernelSize[0],this.padding,this.strides[0]),i=OI(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,i]:[e[0],r,i,s]}getConfig(){const e=super.getConfig();return e["depthMultiplier"]=this.depthMultiplier,e["depthwiseInitializer"]=Sv(this.depthwiseInitializer),e["depthwiseRegularizer"]=CI(this.depthwiseRegularizer),e["depthwiseConstraint"]=hw(this.depthwiseRegularizer),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function tS(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new Ax("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function nS(e,t,n,s=!1,r,i,a=!1,o=!1){return va((()=>{const l=t.shape.length;if(l<3)throw new Ax(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Ey(2,l));if(t=Ah(t,u),null!=i)throw new _x("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=da(da(r,"bool"),"float32"),r.rank===l-1&&(r=Iu(r,-1)),r=Ah(r,u)),s&&(t=Vc(t,0),null!=r&&(r=Vc(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=kh(t);let g,m;null!=r&&(g=kh(r));for(let t=0;t<p;++t){const n=f[t],s=va((()=>e(n,d)));if(null==r)h=s[0],d=s[1];else{const e=va((()=>{const e=g[t],n=Za(Nc(e),e),r=$a(_a(s[0],e),_a(d[0],n)),i=d.map(((t,r)=>$a(_a(s[1][r],e),_a(t,n))));return{output:r,newStates:i}}));h=e.output,d=e.newStates}o&&c.push(h)}if(o){const e=1;m=gh(c,e)}return[h,m,d]}))}eS.className="DepthwiseConv2D",Ga(eS);class sS extends Wv{constructor(e){let t;if(super(e),null==e.cell)throw new Ax("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new hS({cells:e.cell}):e.cell,null==t.stateSize)throw new Ax("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Lv({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ey(0,e).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){$v(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return va((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){const t=null;if(null!=this.numConstants)throw new _x("Constants support is not implemented in RNN yet.");$v(e)&&(e=e[0]);const n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Lv({shape:[n,null,...s]});const r=[e[0]].concat(e.slice(2));if(null!=t)throw new _x("Constants support is not implemented in RNN yet.");let i;if(this.cell.build(r),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!k(this.stateSpec.map((e=>e.shape[e.shape.length-1])),i))throw new Ax(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map((e=>new Lv({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){va((()=>{if(!this.stateful)throw new Ex("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Ax("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Sc([n,e]))):this.states_=[Sc([n,this.cell.stateSize])];else if(null==e)wa(this.states_),null!=this.keptStates&&(wa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Sc([n,e]))):this.states_[0]=Sc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Ax(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):wa(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,r];if(!k(s.shape,i))throw new Ax(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>ka(e.clone())))}))}apply(e,t){let n=null==t?null:t["initialState"],s=null==t?null:t["constants"];null==t&&(t={});const r=tS(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let i=[],a=[];if(null!=n){t["initialState"]=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Lv({shape:e.shape}));a=a.concat(this.stateSpec)}null!=s&&(t["constants"]=s,i=i.concat(s),this.numConstants=s.length);const o=i[0]instanceof Mv;if(o){const n=[e].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return va((()=>{const n=null==t?null:t["mask"],s=null==t?null:t["training"];let r=null==t?null:t["initialState"];e=Tv(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new Ax(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:s},o=(e,t)=>{const n=this.cell.call([e].concat(t),a);return[n[0],n.slice(1)]},l=nS(o,e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=l[0],c=l[1],h=l[2];this.stateful&&this.resetStates(h,s);const d=this.returnSequences?c:u;return this.returnState?[d].concat(h):d}))}getInitialState(e){return va((()=>{let t=Sc(e.shape);return t=Hu(t,[1,2]),t=Dy(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Vy(t,[1,e]):t)):this.cell.stateSize>1?[Vy(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t["numConstants"]=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===sS.className&&(t["cell"]={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const s=t["cell"],r=$w(s,n);return new e(Object.assign(t,{cell:r}))}}sS.className="RNN",Ga(sS);class rS extends Wv{}class iS extends rS{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Qx(this.units,"units"),this.activation=vI(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cv(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=NI(e.kernelRegularizer),this.recurrentRegularizer=NI(e.recurrentRegularizer),this.biasRegularizer=NI(e.biasRegularizer),this.kernelConstraint=pw(e.kernelConstraint),this.recurrentConstraint=pw(e.recurrentConstraint),this.biasConstraint=pw(e.biasConstraint),this.dropout=Ny([1,Ty([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ny([1,Ty([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ev(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return va((()=>{if(2!==e.length)throw new Ax(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t["training"]&&t["training"];let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dS({ones:()=>Nc(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dS({ones:()=>Nc(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;r=Hy(null!=i?_a(e,i):e,this.kernel.read()),null!=this.bias&&(r=Xy(r,this.bias.read())),null!=a&&(n=_a(n,a));let o=$a(r,Hy(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:xI(this.activation),useBias:this.useBias,kernelInitializer:Sv(this.kernelInitializer),recurrentInitializer:Sv(this.recurrentInitializer),biasInitializer:Sv(this.biasInitializer),kernelRegularizer:CI(this.kernelRegularizer),recurrentRegularizer:CI(this.recurrentRegularizer),biasRegularizer:CI(this.biasRegularizer),activityRegularizer:CI(this.activityRegularizer),kernelConstraint:hw(this.kernelConstraint),recurrentConstraint:hw(this.recurrentConstraint),biasConstraint:hw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}iS.className="SimpleRNNCell",Ga(iS);class aS extends sS{constructor(e){e.cell=new iS(e),super(e)}call(e,t){return va((()=>{null!=this.cell.dropoutMask&&(wa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(wa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],s=null==t?null:t["training"],r=null==t?null:t["initialState"];return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}aS.className="SimpleRNN",Ga(aS);class oS extends rS{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Ax("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Qx(this.units,"units"),this.activation=vI(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=vI(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cv(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=NI(e.kernelRegularizer),this.recurrentRegularizer=NI(e.recurrentRegularizer),this.biasRegularizer=NI(e.biasRegularizer),this.kernelConstraint=pw(e.kernelConstraint),this.recurrentConstraint=pw(e.recurrentConstraint),this.biasConstraint=pw(e.biasConstraint),this.dropout=Ny([1,Ty([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ny([1,Ty([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ev(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return va((()=>{if(2!==e.length)throw new Ax(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t["training"]&&t["training"];let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dS({ones:()=>Nc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dS({ones:()=>Nc(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(e=_a(e,r[0]));let u=Hy(e,this.kernel.read());this.useBias&&(u=Xy(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=_a(s,i[0]));const c=this.recurrentKernel.read(),[h,d]=hh(c,[2*this.units,this.units],c.rank-1),p=Hy(s,h),[f,g,m]=hh(u,3,u.rank-1),[b,x]=hh(p,2,p.rank-1);a=this.recurrentActivation.apply($a(f,b)),o=this.recurrentActivation.apply($a(g,x));const y=Hy(_a(o,s),d);l=this.activation.apply($a(m,y));const v=$a(_a(a,s),_a($a(1,yc(a)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:xI(this.activation),recurrentActivation:xI(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Sv(this.kernelInitializer),recurrentInitializer:Sv(this.recurrentInitializer),biasInitializer:Sv(this.biasInitializer),kernelRegularizer:CI(this.kernelRegularizer),recurrentRegularizer:CI(this.recurrentRegularizer),biasRegularizer:CI(this.biasRegularizer),activityRegularizer:CI(this.activityRegularizer),kernelConstraint:hw(this.kernelConstraint),recurrentConstraint:hw(this.recurrentConstraint),biasConstraint:hw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}oS.className="GRUCell",Ga(oS);class lS extends sS{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new oS(e),super(e)}call(e,t){return va((()=>{null!=this.cell.dropoutMask&&(wa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(wa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],s=null==t?null:t["training"],r=null==t?null:t["initialState"];return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t["implmentation"]&&(t["implementation"]=1),new e(t)}}lS.className="GRU",Ga(lS);class uS extends rS{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Qx(this.units,"units"),this.activation=vI(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=vI(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Cv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Cv(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Cv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=NI(e.kernelRegularizer),this.recurrentRegularizer=NI(e.recurrentRegularizer),this.biasRegularizer=NI(e.biasRegularizer),this.kernelConstraint=pw(e.kernelConstraint),this.recurrentConstraint=pw(e.recurrentConstraint),this.biasConstraint=pw(e.biasConstraint),this.dropout=Ny([1,Ty([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ny([1,Ty([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Ev(e);const n=e[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new(t=class extends iv{apply(t,s){const r=e.apply([n]),i=(new ov).apply([n]),a=e.apply([2*n]);return Uy(Uy(r,i),a)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return va((()=>{const n=null!=t["training"]&&t["training"];if(3!==e.length)throw new Ax(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dS({ones:()=>Nc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dS({ones:()=>Nc(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=_a(e,i[0]));let h=Hy(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=_a(s,a[0])),h=$a(h,Hy(s,this.recurrentKernel.read())),this.useBias&&(h=Xy(h,this.bias.read()));const[d,p,f,g]=hh(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=$a(_a(l,r),_a(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=_a(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:xI(this.activation),recurrentActivation:xI(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Sv(this.kernelInitializer),recurrentInitializer:Sv(this.recurrentInitializer),biasInitializer:Sv(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:CI(this.kernelRegularizer),recurrentRegularizer:CI(this.recurrentRegularizer),biasRegularizer:CI(this.biasRegularizer),activityRegularizer:CI(this.activityRegularizer),kernelConstraint:hw(this.kernelConstraint),recurrentConstraint:hw(this.recurrentConstraint),biasConstraint:hw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}uS.className="LSTMCell",Ga(uS);class cS extends sS{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new uS(e),super(e)}call(e,t){return va((()=>{null!=this.cell.dropoutMask&&(wa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(wa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],s=null==t?null:t["training"],r=null==t?null:t["initialState"];return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t["implmentation"]&&(t["implementation"]=1),new e(t)}}cS.className="LSTM",Ga(cS);class hS extends rS{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return va((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=s[a],i=0===a?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),r.push(i.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[i[0]].concat(n)}))}build(e){let t;$v(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{yy(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t=e=>({className:e.getClassName(),config:e.getConfig()}),n=this.cells.map(t),s={cells:n};return Object.assign(Object.assign({},e),s)}static fromConfig(e,t,n={}){const s=[];for(const r of t["cells"])s.push($w(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Dv(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Ov(t)}}function dS(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:i}=e,a=()=>null!=i?i(t(),n):Zy(t(),n),o=()=>ev(a,t,s);if(!r||r<=1)return ka(o().clone());const l=Array(r).fill(void 0).map(o);return l.map((e=>ka(e.clone())))}hS.className="StackedRNNCells",Ga(hS);
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var pS=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n};class fS extends sS{constructor(e){if(e.unroll)throw new _x("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new _x("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Lv({ndim:5})]}call(e,t){return va((()=>{if(null!=this.cell.dropoutMask&&(wa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(wa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t["constants"])throw new Ax("ConvRNN2D cell does not support constants");const n=null==t?null:t["mask"],s=null==t?null:t["training"],r=null==t?null:t["initialState"];return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return va((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],i=Sc(r);return Array.isArray(t)?Array(t.length).fill(i):[i]}))}resetStates(e,t=!1){va((()=>{if(!this.stateful)throw new Ex("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],i=n[0];if(null==i)throw new Ax("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Sc(r))):this.states_=[Sc(r)];else if(null==e)wa(this.states_),null!=this.keptStates&&(wa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Sc(r))):this.states_[0]=Sc(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Ax(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):wa(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!k(n.shape,s))throw new Ax(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ka(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=OI(l,s[0],r,i[0],a[0]),h=OI(u,s[1],r,i[1],a[1]),d=[...e.slice(0,2),...o?[n,c,h]:[c,h,n]];return d}}fS.className="ConvRNN2D";class gS extends uS{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Qx(this.filters,"filters"),this.kernelSize=DI(n,2,"kernelSize"),this.kernelSize.forEach((e=>Qx(e,"kernelSize"))),this.strides=DI(s||1,2,"strides"),this.strides.forEach((e=>Qx(e,"strides"))),this.padding=r||"valid",gy(this.padding),this.dataFormat=i||"channelsLast",py(this.dataFormat),this.dilationRate=DI(a||1,2,"dilationRate"),this.dilationRate.forEach((e=>Qx(e,"dilationRate")))}build(e){var t;e=Ev(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Ax(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=4,i=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new(t=class extends iv{apply(e,t){const r=n.apply([s]),i=Cc([s]),a=n.apply([2*s]);return Wy([r,i,a])}},t.className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return va((()=>{if(3!==e.length)throw new Ax(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t["training"]||!1,s=e[0],r=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dS({ones:()=>Nc(s),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,l=(e,t,n)=>t&&t[n]?_a(t[n],e):e;let u=l(s,o,0),c=l(s,o,1),h=l(s,o,2),d=l(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dS({ones:()=>Nc(r),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=l(r,p,0),g=l(r,p,1),m=l(r,p,2),b=l(r,p,3);const x=3,[y,v,w,k]=hh(this.kernel.read(),a,x),[I,S,C,$]=this.useBias?hh(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,y,I,this.padding),c=this.inputConv(c,v,S,this.padding),h=this.inputConv(h,w,C,this.padding),d=this.inputConv(d,k,$,this.padding);const[N,T,E,R]=hh(this.recurrentKernel.read(),a,x);f=this.recurrentConv(f,N),g=this.recurrentConv(g,T),m=this.recurrentConv(m,E),b=this.recurrentConv(b,R);const A=this.recurrentActivation.apply($a(u,f)),_=this.recurrentActivation.apply($a(c,g)),F=$a(_a(_,i),_a(A,this.activation.apply($a(h,m)))),D=_a(this.recurrentActivation.apply($a(d,b)),this.activation.apply(F));return[D,D,F]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=pS(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,t,n,s){const r=Ql(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Xy(r,n,this.dataFormat):r}recurrentConv(e,t){const n=1;return Ql(e,t,n,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}gS.className="ConvLSTM2DCell",Ga(gS);class mS extends fS{constructor(e){const t=new gS(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}mS.className="ConvLSTM2D",Ga(mS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class bS extends Wv{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(null==this.noiseShape[s]?t[s]:this.noiseShape[s]);return n}call(e,t){return va((()=>{this.invokeCallHook(e,t);const n=Tv(e);if(0<this.rate&&this.rate<1){const e=null!=t["training"]&&t["training"],s=this.getNoiseShape(n),r=ev((()=>Zy(n,this.rate,s,this.seed)),(()=>n),e);return r}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}bS.className="Dropout",Ga(bS);class xS extends bS{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}xS.className="SpatialDropout1D",Ga(xS);class yS extends Wv{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Qx(this.units,"units"),this.activation=vI(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Cv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Cv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=pw(e.kernelConstraint),this.biasConstraint=pw(e.biasConstraint),this.kernelRegularizer=NI(e.kernelRegularizer),this.biasRegularizer=NI(e.biasRegularizer),this.activityRegularizer=NI(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Ev(e);const t=e[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Ev(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return va((()=>{this.invokeCallHook(e,t);const n=Tv(e),s=ny(this.activation.getClassName());let r;return null!=s?r=Hy(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Hy(n,this.kernel.read()),null!=this.bias&&(r=Xy(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:xI(this.activation),useBias:this.useBias,kernelInitializer:Sv(this.kernelInitializer),biasInitializer:Sv(this.biasInitializer),kernelRegularizer:CI(this.kernelRegularizer),biasRegularizer:CI(this.biasRegularizer),activityRegularizer:CI(this.activityRegularizer),kernelConstraint:hw(this.kernelConstraint),biasConstraint:hw(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}yS.className="Dense",Ga(yS);class vS extends Wv{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ev(e);for(const t of e.slice(1))if(null==t)throw new Ax(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],$y(e,1)]}call(e,t){return va((()=>{this.invokeCallHook(e,t);let n=Tv(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Ah(n,e)}return My(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e["dataFormat"]=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}vS.className="Flatten",Ga(vS);class wS extends Wv{constructor(e){super(e),this.supportsMasking=!0,this.activation=vI(e.activation)}call(e,t){return va((()=>{this.invokeCallHook(e,t);const n=Tv(e);return this.activation.apply(n)}))}getConfig(){const e={activation:xI(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}wS.className="Activation",Ga(wS);class kS extends Wv{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return va((()=>(e=Tv(e),Oy(e,this.n))))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}kS.className="RepeatVector",Ga(kS);class IS extends Wv{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,i=null;for(let o=0;o<s.length;++o){const e=s[o];if(this.isUnknown(e)){if(null!==i)throw new Ax("Can only specifiy one unknown dimension.");i=o}else r*=e}const a=$y(e);if(null!==i){if(0===r||a%r!==0)throw new Ax(n);s[i]=a/r}else if(a!==r)throw new Ax(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return va((()=>{this.invokeCallHook(e,t);const n=Tv(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return Sl(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}IS.className="Reshape",Ga(IS);class SS extends Wv{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ey(1,e.dims.length+1);if(!k(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Lv({ndim:this.dims.length+1})]}computeOutputShape(e){e=Ev(e);const t=e.slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return Ah(Tv(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}SS.className="Permute",Ga(SS);class CS extends Wv{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Tv(e),s=-1;return tl(wc(n,this.maskValue),s)}call(e,t){return va((()=>{this.invokeCallHook(e,t);const n=Tv(e),s=-1,r=!0,i=tl(wc(n,this.maskValue),s,r),a=_a(n,da(i,n.dtype));return a}))}}CS.className="Masking",Ga(CS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class $S extends Wv{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Bx(e.inputLength))}this.inputDim=e.inputDim,Qx(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Qx(this.outputDim,"outputDim"),this.embeddingsInitializer=Cv(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=NI(e.embeddingsRegularizer),this.activityRegularizer=NI(e.activityRegularizer),this.embeddingsConstraint=pw(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return va((()=>this.maskZero?(e=Tv(e),wc(e,za(e))):null))}computeOutputShape(e){if(e=Ev(e),null==this.inputLength)return[...e,this.outputDim];const t=Bx(this.inputLength);if(t.length!==e.length-1)throw new Ax(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],i=e[s+1];if(null!=r&&null!=i&&r!==i)throw new Ax(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return va((()=>{this.invokeCallHook(e,t);let n=Tv(e);"int32"!==n.dtype&&(n=Fy(n,"int32"));const s=jy(this.embeddings.read(),Sl(n,[n.size]));return Sl(s,Ev(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Sv(this.embeddingsInitializer),embeddingsRegularizer:CI(this.embeddingsRegularizer),activityRegularizer:CI(this.activityRegularizer),embeddingsConstraint:hw(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}$S.className="Embedding",Ga($S);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class NS extends Wv{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new _x}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],i=t[s];if(null==r||null==i||r<0||i<0)n.push(null);else if(1===r)n.push(i);else if(1===i)n.push(r);else{if(r!==i)throw new Ax("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ev(e)]),e.length<2)throw new Ax(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=Xx(t),t.length>1)throw new Ax(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===Xx(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return va((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=Ty(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=Dy(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const i of e){const e=i.rank;if(null==e){const e=i.shape,s=e[0],r=e.slice(1).concat([s]);let a=Sl(i,[s].concat($y(e.slice(1))));a=Ah(a,[1,0]),a=Sl(a,r),t.push(a),n=!0}else if(e>1){const s=Ey(1,e).concat([0]);t.push(Ah(i,s)),n=!0}else t.push(i)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e.length,n=e[t-1],r=[n].concat(e.slice(0,e.length-1));s=Sl(Ah(Sl(s,[-1,n]),[1,0]),r)}else if(r>1){const e=[r-1].concat(Ey(0,r-1));s=Ah(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const n=null==e[s]?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const s of e)null!=s&&null!==s[0]&&n.push(s[0]);return n=Xx(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return va((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Ax("`mask` should be an Array");if(!Array.isArray(e))throw new Ax("`inputs` should be an Array");if(t.length!==e.length)throw new Ax(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;t=t.map((e=>null==e?e:Iu(e,0)));let n=t[0];for(let e=1;e<t.length-1;++e)n=Xu(n,t[e]);return n}))}}class TS extends NS{constructor(e){super(e)}mergeFunction(e){return va((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$a(t,e[n]);return t}))}}TS.className="Add",Ga(TS);class ES extends NS{constructor(e){super(e)}mergeFunction(e){return va((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=_a(t,e[n]);return t}))}}ES.className="Multiply",Ga(ES);class RS extends NS{constructor(e){super(e)}mergeFunction(e){return va((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=$a(t,e[n]);return _a(1/e.length,t)}))}}RS.className="Average",Ga(RS);class AS extends NS{constructor(e){super(e)}mergeFunction(e){return va((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ao(t,e[n]);return t}))}}AS.className="Maximum",Ga(AS);class _S extends NS{constructor(e){super(e)}mergeFunction(e){return va((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=oc(t,e[n]);return t}))}}_S.className="Minimum",Ga(_S);class FS extends NS{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Ax("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const s of e)if(null!=s){t=!1;break}if(t)return;const n=[];for(let s=0;s<e.length;++s){const t=e[s].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(k(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new Ax("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return va((()=>Wy(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Ax("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[s]||null==r[s]){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Ax("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Ax("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Ax(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return va((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let i=0;i<e.length;++i)null==t[i]?s.push(da(Nc(e[i]),"bool")):t[i].rank<e[i].rank?s.push(Iu(t[i],-1)):s.push(t[i]);const r=Vl(s,this.axis);return Qo(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function DS(e,t){while(e<0)e+=t;return e}function OS(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new _x("batchDot is not implemented for tensors of 4D or higher rank yet");if(x(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),x(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new _x("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const i=n;return va((()=>{let n,a;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=Sl(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=Sl(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)a=i[0]===i[1]?Hu(_a(e,t),i[0]):Hu(_a(Ah(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,s=i[1]===t.shape.length-1;a=Yu(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);a=ph(a,t)}return 1===a.shape.length&&(a=Iu(a,1)),a}))}FS.className="Concatenate",Ga(FS);class LS extends NS{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){x(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new _x("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new Ax(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Ax(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>DS(t,e[n].shape.length))):[DS(this.axes,n.shape.length),DS(this.axes,s.shape.length)],this.normalize&&(n=Nw(n,t[0]),s=Nw(s,t[1])),OS(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[DS(this.axes,e.length),DS(this.axes,t.length)],n}computeOutputShape(e){x(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new _x("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}LS.className="Dot",Ga(LS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class MS extends Wv{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return va((()=>{this.invokeCallHook(e,t);const n=Tv(e),s=()=>$a(Gy(n.shape,0,this.stddev),n),r=ev(s,(()=>n),t["training"]||!1);return r}))}}MS.className="GaussianNoise",Ga(MS);class zS extends Wv{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return va((()=>{this.invokeCallHook(e,t);const n=Tv(e);if(this.rate>0&&this.rate<1){const e=()=>{const e=Math.sqrt(this.rate/(1-this.rate));return _a(n,Gy(n.shape,1,e))};return ev(e,(()=>n),t["training"]||!1)}return n}))}}zS.className="GaussianDropout",Ga(zS);class PS extends Wv{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Tv(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return va((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),s=()=>{const t=Tv(e),s=1.6732632423543772,r=1.0507009873554805,i=-s*r;let a=Ou(zc(n),this.rate);a=Fy(a,"float32");const o=((1-this.rate)*(1+this.rate*i**2))**-.5,l=-o*i*this.rate,u=$a(_a(t,a),_a($a(a,-1),i));return $a(_a(u,o),l)};return ev(s,(()=>Tv(e)),t["training"]||!1)}return e}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function BS(e,t,n,s,r,i=.001){let a;if(2===e.rank)a=Fl(e,t,n,s,r,i);else if(3===e.rank)a=Ol(e,t,n,s,r,i);else{if(4!==e.rank)throw new _x(`batchNormalization is not implemented for array of rank ${e.rank} yet`);a=Ml(e,t,n,s,r,i)}return a}function WS(e,t,n,s,r=.001){return va((()=>{const i=bc(e,s),a=i.mean,o=i.variance,l=BS(e,a,o,n,t,r);return[l,a,o]}))}function US(e,t,n,s,r=.001){return va((()=>{const i=bc(e,s),a=i.mean,o=i.variance,l=[];for(const t of Ey(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Sl(a,l),c=Sl(o,l),h=null==t?null:Sl(t,l),d=null==n?null:Sl(n,l),p=BS(e,u,c,d,h,r);return[p,a,o]}))}function VS(e,t,n,s,r=.001){return k(s.slice().sort(),Ey(0,e.rank-1))?WS(e,t,n,s,r):US(e,t,n,s,r)}PS.className="AlphaDropout",Ga(PS);class GS extends Wv{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Cv(e.betaInitializer||"zeros"),this.gammaInitializer=Cv(e.gammaInitializer||"ones"),this.movingMeanInitializer=Cv(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Cv(e.movingVarianceInitializer||"ones"),this.betaConstraint=pw(e.betaConstraint),this.gammaConstraint=pw(e.gammaConstraint),this.betaRegularizer=NI(e.betaRegularizer),this.gammaRegularizer=NI(e.gammaRegularizer)}build(e){e=Ev(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Ax(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Lv({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return va((()=>{const n=null!=t["training"]&&t["training"],s=Tv(e),r=s.shape,i=r.length,a=Ey(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=Lx(1,i);l[o]=r[o];const u=a.slice();u.sort();const c=!k(u,Ey(0,i).slice(0,i-1)),h=()=>{if(c){const e=Sl(this.movingMean.read(),l),t=Sl(this.movingVariance.read(),l),n=this.center?Sl(this.beta.read(),l):null,r=this.scale?Sl(this.gamma.read(),l):null;return BS(s,e,t,n,r,this.epsilon)}return BS(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!n)return h();const[d,p,f]=VS(s,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(e,t,n)=>{va((()=>{const s=1-n,r=e.read(),i=_a(Za(r,t),s);e.write(Za(r,i))}))},m=()=>{g(this.movingMean,p,this.momentum),g(this.movingVariance,f,this.momentum)};return m(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Sv(this.betaInitializer),gammaInitializer:Sv(this.gammaInitializer),movingMeanInitializer:Sv(this.movingMeanInitializer),movingVarianceInitializer:Sv(this.movingVarianceInitializer),betaRegularizer:CI(this.betaRegularizer),gammaRegularizer:CI(this.gammaRegularizer),betaConstraint:hw(this.betaConstraint),gammaConstraint:hw(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}GS.className="BatchNormalization",Ga(GS);class HS extends Wv{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Cv(e.betaInitializer||"zeros"),this.gammaInitializer=Cv(e.gammaInitializer||"ones"),this.betaRegularizer=NI(e.betaRegularizer),this.gammaRegularizer=NI(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Ev(e);const t=e.length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Xx(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){const n=Tv(e),s=n.shape,r=s.length;return va((()=>{const e=!0;let{mean:t,variance:i}=bc(n,this.axis,e);const a=Lx(1,r);for(const n of this.axis)a[n]=s[n];const o=e=>null!=e&&e.shape.length!==r?Sl(e,a):e;let l=this.scale?o(this.gamma.read()):null,u=this.center?o(this.beta.read()):null;const c=[],h=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(c.push(s[n]),h.push(1)):(c.push(1),h.push(s[n]));return t=Cu(t,c),i=Cu(i,c),null!=l&&(l=Cu(l,h)),null!=u&&(u=Cu(u,h)),BS(n,t,i,u,l,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Sv(this.betaInitializer),gammaInitializer:Sv(this.gammaInitializer),betaRegularizer:CI(this.betaRegularizer),gammaRegularizer:CI(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}function jS(e,t,n){return va((()=>{if(4!==e.rank)throw new Ax(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new Ax("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=_y()),"channelsLast"!==n&&"channelsFirst"!==n)throw new Ax(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return s="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],Ec(e,s)}))}HS.className="LayerNormalization",Ga(HS);class qS extends Wv{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?_y():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Ax(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Ax(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Ax(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Lv({ndim:4})]}computeOutputShape(e){let t,n;return e=Ev(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return va((()=>jS(Tv(e),this.padding,this.dataFormat)))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function KS(e,t,n,s,r,i){return va((()=>{let a;py(r),my(i),gy(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r=_y()),null==i&&(i="max"),e=MI(e,r);const o="same"===s?"same":"valid";return a="max"===i?Qu(e,t,n,o):$l(e,t,n,o),"channelsFirst"===r&&(a=Ah(a,[0,3,1,2])),a}))}function XS(e,t,n,s,r,i){return va((()=>{let a;py(r),my(i),gy(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r=_y()),null==i&&(i="max"),e=zI(e,r);const o="same"===s?"same":"valid";return a="max"===i?tc(e,t,n,o):Tl(e,t,n,o),"channelsFirst"===r&&(a=Ah(a,[0,4,1,2,3])),a}))}qS.className="ZeroPadding2D",Ga(qS);class JS extends Wv{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new Ax(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Qx(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new Ax(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Qx(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,gy(this.padding),this.inputSpec=[new Lv({ndim:3})]}computeOutputShape(e){e=Ev(e);const t=OI(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return va((()=>{this.invokeCallHook(e,t),e=Dy(Tv(e),2);const n=this.poolingFunction(Tv(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ph(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class YS extends JS{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return py(r),gy(s),KS(e,t,n,s,r,"max")}}YS.className="MaxPooling1D",Ga(YS);class ZS extends JS{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return py(r),gy(s),KS(e,t,n,s,r,"avg")}}ZS.className="AveragePooling1D",Ga(ZS);class QS extends Wv{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Ax(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Qx(this.poolSize,"poolSize"),Qx(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,py(this.dataFormat),gy(this.padding),this.inputSpec=[new Lv({ndim:4})]}computeOutputShape(e){e=Ev(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=OI(t,this.poolSize[0],this.padding,this.strides[0]),n=OI(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return va((()=>(this.invokeCallHook(e,t),this.poolingFunction(Tv(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class eC extends QS{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return py(r),gy(s),KS(e,t,n,s,r,"max")}}eC.className="MaxPooling2D",Ga(eC);class tC extends QS{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return py(r),gy(s),KS(e,t,n,s,r,"avg")}}tC.className="AveragePooling2D",Ga(tC);class nC extends Wv{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Ax(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Qx(this.poolSize,"poolSize"),Qx(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,py(this.dataFormat),gy(this.padding),this.inputSpec=[new Lv({ndim:5})]}computeOutputShape(e){e=Ev(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=OI(t,this.poolSize[0],this.padding,this.strides[0]),n=OI(n,this.poolSize[1],this.padding,this.strides[1]),s=OI(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return va((()=>(this.invokeCallHook(e,t),this.poolingFunction(Tv(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class sC extends nC{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return py(r),gy(s),XS(e,t,n,s,r,"max")}}sC.className="MaxPooling3D",Ga(sC);class rC extends nC{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return py(r),gy(s),XS(e,t,n,s,r,"avg")}}rC.className="AveragePooling3D",Ga(rC);class iC extends Wv{constructor(e){super(e),this.inputSpec=[new Lv({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new _x}}class aC extends iC{constructor(e){super(e||{})}call(e,t){return va((()=>{const t=Tv(e);return sc(t,1)}))}}aC.className="GlobalAveragePooling1D",Ga(aC);class oC extends iC{constructor(e){super(e||{})}call(e,t){return va((()=>{const t=Tv(e);return Vu(t,1)}))}}oC.className="GlobalMaxPooling1D",Ga(oC);class lC extends Wv{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,py(this.dataFormat),this.inputSpec=[new Lv({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new _x}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class uC extends lC{call(e,t){return va((()=>{const t=Tv(e);return"channelsLast"===this.dataFormat?sc(t,[1,2]):sc(t,[2,3])}))}}uC.className="GlobalAveragePooling2D",Ga(uC);class cC extends lC{call(e,t){return va((()=>{const t=Tv(e);return"channelsLast"===this.dataFormat?Vu(t,[1,2]):Vu(t,[2,3])}))}}cC.className="GlobalMaxPooling2D",Ga(cC);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class hC extends Wv{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=t["layer"],r=$w(s,n);delete t["layer"];const i={layer:r};return Object.assign(i,t),new e(i)}}class dC extends hC{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Ev(e),e.length<3)throw new Ax(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Ev(e);const t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return va((()=>{e=Tv(e);const n=(e,n)=>{const s=Tv(this.layer.call(e,t));return[s,[]]},s=nS(n,e,[],!1,null,null,!1,!0),r=s[1];return r}))}}function pC(e){Yx(hy,"BidirectionalMergeMode",e)}dC.className="TimeDistributed",Ga(dC);const fC="concat";class gC extends hC{constructor(e){super(e);const t=e.layer.getConfig(),n={};n["className"]=e.layer.getClassName(),n["config"]=t,this.forwardLayer=$w(n),t["goBackwards"]=!0!==t["goBackwards"];const s={};if(s["className"]=e.layer.getClassName(),s["config"]=t,this.backwardLayer=$w(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?fC:e.mergeMode,pC(this.mergeMode),e.weights)throw new _x("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):Px(n)}apply(e,t){let n=null==t?null:t["initialState"],s=null==t?null:t["constants"];null==t&&(t={});const r=tS(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const i=[],a=[];if(null!=n){const e=n.length;if(e%2>0)throw new Ax("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t["initialState"]=n,i.push(...n);const s=n.map((e=>new Lv({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),a.push(...s)}if(null!=s)throw new _x("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof Mv;for(const l of i)if(l instanceof Mv!==o)throw new Ax("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return va((()=>{const n=t["initialState"];let s,r,i,a;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:a}))}return this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Vc(r,1)),"concat"===this.mergeMode?a=Wy([s,r]):"sum"===this.mergeMode?a=$a(s,r):"ave"===this.mergeMode?a=_a(.5,$a(s,r)):"mul"===this.mergeMode?a=_a(s,r):null==this.mergeMode&&(a=[s,r]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){yy(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),yy(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states,t=e.map((e=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=$w(t["layer"]);if(delete t["layer"],null!=t["numConstants"])throw new _x("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s["layer"]=n,new e(s)}}gC.className="Bidirectional",Ga(gC);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class mC extends Wv{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return va((()=>(e=Tv(e),"float32"!==e.dtype&&(e=Fy(e,"float32")),$a(_a(e,this.scale),this.offset))))}}mC.className="Rescaling",Ga(mC);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const{resizeBilinear:bC,cropAndResize:xC}=mp;class yC extends Wv{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,s,r,i,a,o){return va((()=>{let l,u=!1;const c=t/i,h=n/a,d=(s+t)/i,p=(r+n)/a,f=[c,h,d,p],g=[];3===e.rank?(u=!0,l=gh([e])):l=e;for(let e=0;e<l.shape[0];e++)g.push(f);const m=ci(g,[g.length,4]),b=Pc(0,g.length,1,"int32"),x=[s,r],y=xC(l,m,b,x,"nearest");return Fy(u?Tv(kh(y)):y,o)}))}upsize(e,t,n,s){return va((()=>{const r=bC(e,[t,n]);return Fy(r,s)}))}call(e,t){return va((()=>{const t=Tv(e),n=t.dtype,s=t.shape,r=s[s.length-3],i=s[s.length-2];let a=0;r!==this.height&&(a=Math.floor((r-this.height)/2));let o=0;return i!==this.width&&(o=Math.floor((i-this.width)/2),0===o&&(o=1)),a>=0&&o>=0?this.centerCrop(t,a,o,this.height,this.width,r,i,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Ev(e);const t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function vC(e,t,n,s){let r=Tv(e);if("int32"!==r.dtype&&(r=Fy(r,"int32")),"int"===t)return r;const i=r.shape;if(0===r.rank&&(r=Iu(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=Iu(r,-1)),r.rank>2)throw new Ax(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${r.rank}.`);const a=["multiHot","oneHot"].includes(t),o=r;let l;if(l=pu(o,"undefined"!==typeof s&&"count"===t?s:[],n,a),"tfIdf"!==t)return l;if(s)return _a(l,s);throw new Ax("When outputMode is 'tfIdf', weights must be provided.")}yC.className="CenterCrop",Ga(yC);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class wC extends Wv{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Ev(e),null==e?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return va((()=>{let n;if(e=Tv(e),"int32"!==e.dtype&&(e=Fy(e,"int32")),"undefined"!==typeof t["countWeights"]){if("count"!==this.outputMode)throw new Ax(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t["countWeights"]}`);n=Tv(t["countWeights"])}const s=Vu(e),r=ic(e),i=Fu(this.numTokens,s).bufferSync().get(0),a=Ou(r,0).bufferSync().get(0);if(!i||!a)throw new Ax(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return vC(e,this.outputMode,this.numTokens,n)}))}}wC.className="CategoryEncoding",Ga(wC);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const kC=["bilinear","nearest"],IC=new Set(kC);class SC extends Wv{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!IC.has(e.interpolation))throw new Ax(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=Ev(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return va((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return mp.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return mp.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...IC]} are supported`)}))}}SC.className="Resizing",Ga(SC);const CC=ie();
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var $C,NC;CC.registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e["DT_INVALID"]=0]="DT_INVALID",e[e["DT_FLOAT"]=1]="DT_FLOAT",e[e["DT_DOUBLE"]=2]="DT_DOUBLE",e[e["DT_INT32"]=3]="DT_INT32",e[e["DT_UINT8"]=4]="DT_UINT8",e[e["DT_INT16"]=5]="DT_INT16",e[e["DT_INT8"]=6]="DT_INT8",e[e["DT_STRING"]=7]="DT_STRING",e[e["DT_COMPLEX64"]=8]="DT_COMPLEX64",e[e["DT_INT64"]=9]="DT_INT64",e[e["DT_BOOL"]=10]="DT_BOOL",e[e["DT_QINT8"]=11]="DT_QINT8",e[e["DT_QUINT8"]=12]="DT_QUINT8",e[e["DT_QINT32"]=13]="DT_QINT32",e[e["DT_BFLOAT16"]=14]="DT_BFLOAT16",e[e["DT_QINT16"]=15]="DT_QINT16",e[e["DT_QUINT16"]=16]="DT_QUINT16",e[e["DT_UINT16"]=17]="DT_UINT16",e[e["DT_COMPLEX128"]=18]="DT_COMPLEX128",e[e["DT_HALF"]=19]="DT_HALF",e[e["DT_RESOURCE"]=20]="DT_RESOURCE",e[e["DT_VARIANT"]=21]="DT_VARIANT",e[e["DT_UINT32"]=22]="DT_UINT32",e[e["DT_UINT64"]=23]="DT_UINT64",e[e["DT_FLOAT_REF"]=101]="DT_FLOAT_REF",e[e["DT_DOUBLE_REF"]=102]="DT_DOUBLE_REF",e[e["DT_INT32_REF"]=103]="DT_INT32_REF",e[e["DT_UINT8_REF"]=104]="DT_UINT8_REF",e[e["DT_INT16_REF"]=105]="DT_INT16_REF",e[e["DT_INT8_REF"]=106]="DT_INT8_REF",e[e["DT_STRING_REF"]=107]="DT_STRING_REF",e[e["DT_COMPLEX64_REF"]=108]="DT_COMPLEX64_REF",e[e["DT_INT64_REF"]=109]="DT_INT64_REF",e[e["DT_BOOL_REF"]=110]="DT_BOOL_REF",e[e["DT_QINT8_REF"]=111]="DT_QINT8_REF",e[e["DT_QUINT8_REF"]=112]="DT_QUINT8_REF",e[e["DT_QINT32_REF"]=113]="DT_QINT32_REF",e[e["DT_BFLOAT16_REF"]=114]="DT_BFLOAT16_REF",e[e["DT_QINT16_REF"]=115]="DT_QINT16_REF",e[e["DT_QUINT16_REF"]=116]="DT_QUINT16_REF",e[e["DT_UINT16_REF"]=117]="DT_UINT16_REF",e[e["DT_COMPLEX128_REF"]=118]="DT_COMPLEX128_REF",e[e["DT_HALF_REF"]=119]="DT_HALF_REF",e[e["DT_RESOURCE_REF"]=120]="DT_RESOURCE_REF",e[e["DT_VARIANT_REF"]=121]="DT_VARIANT_REF",e[e["DT_UINT32_REF"]=122]="DT_UINT32_REF",e[e["DT_UINT64_REF"]=123]="DT_UINT64_REF"}($C||($C={})),function(e){let t;(function(e){e[e["LEGACY"]=0]="LEGACY",e[e["V1"]=1]="V1",e[e["V2"]=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(NC||(NC={}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function TC(e,t){return EC(e,t)}function EC(e,t,n=new Map,s=new Set){if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(FC(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const i in e){const a=e[i],o=EC(a,t,n,s);r[i]=o}return s.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function RC(e,t=_C){return AC(e,t)}function AC(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(FC(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const i in s){const s=e.map((e=>e[i])),a=AC(s,t,n);r[i]=a}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function _C(e){return null===e?null:FC(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function FC(e){let t=!1;if(ie().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:s}=n(977);t=e instanceof s}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof $r)&&!(e instanceof Promise)&&!t)}function DC(e){return null==e||OC(e)||Array.isArray(e)||"object"===typeof e&&e instanceof $r||sr(e)}function OC(e){return null===e||"object"!==typeof e&&"function"!==typeof e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function LC(e){return TC(e,MC)}function MC(e){return e instanceof $r?{value:e.clone(),recurse:!1}:FC(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class zC{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){while(e<0)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class PC extends zC{constructor(){super(PC.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function BC(e){return new GC(e)}function WC(e){return new HC(e)}function UC(e,t){return new n$(e,t)}PC.INITIAL_CAPACITY=32;class VC{async toArray(){const e=[];let t=await this.next();while(!t.done)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();while(!n.done)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();while(!e.done)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);while(!t.done&&n)t=await this.next(),n=e(t.value)}handleErrors(e){return new ZC(this,e)}filter(e){return new JC(this,e)}map(e){return new YC(this,e)}mapAsync(e){return new QC(this,e)}serialMapAsync(e){return new QC(this,e).serial()}flatmap(e){return new t$(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new XC(this,e,t)}columnMajorBatch(e,t=!0,n=_C){const s=this.rowMajorBatch(e,t);return s.map((e=>RC(e,n)))}concatenate(e,t){return new n$(BC([this,e]),t)}take(e){return e<0||null==e?this:new KC(this,e)}skip(e){return e<0||null==e?this:new qC(this,e)}prefetch(e){return new r$(this,e)}shuffle(e,t){return new i$(this,e,t)}serial(){return new jC(this)}}class GC extends VC{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:LC(e),done:!1}}}class HC extends VC{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class jC extends VC{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class qC extends VC{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(this.count++<this.maxCount){const e=await this.upstream.next();if(e.done)return e;wa(e.value)}return this.upstream.next()}}class KC extends VC{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class XC extends VC{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];while(e.length<this.batchSize){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class JC extends VC{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(1){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;wa(e.value)}}}class YC extends VC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Pr(e.value),n=this.transform(e.value),s=Pr(n);for(const r of t)zr(r,s)||r.dispose();return{value:n,done:!1}}}class ZC extends VC{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(1)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class QC extends VC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Pr(e.value),n=await this.transform(e.value),s=Pr(n);for(const r of t)zr(r,s)||r.dispose();return{value:n,done:!1}}}class e$ extends VC{constructor(){super(),this.outputQueue=new PC,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(0===this.outputQueue.length())if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class t$ extends e${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Pr(e.value),n=this.transform(e.value),s=Pr(n);this.outputQueue.pushAll(n);for(const r of t)zr(r,s)||r.dispose();return!0}}class n$ extends VC{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){const e="TODO: fill in upstream of chained summaries";return`${e} -> Chained`}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var s$;(function(e){e[e["FAIL"]=0]="FAIL",e[e["SHORTEST"]=1]="SHORTEST",e[e["LONGEST"]=2]="LONGEST"})(s$||(s$={}));class r$ extends VC{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new zC(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){while(!this.buffer.isFull()){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class i$ extends r${constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=_c.alea(n||er().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){this.upstreamExhausted||this.refill();while(!this.buffer.isEmpty()){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class a${constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return x(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),o$((async()=>(await n.iterator()).columnMajorBatch(e,t,l$)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,o$((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,o$((async()=>(await t.iterator()).filter((t=>va((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return o$((async()=>(await t.iterator()).map((t=>va((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return o$((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return o$((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,o$((async()=>{const n=WC((async()=>({value:await t.iterator(),done:!1})));return UC(n.take(e))}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,o$((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=_c.alea(t||er().toString());return o$((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,o$((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function o$(e,t=null){return new class extends a${constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function l$(e){if(null===e)return null;const t=e[0];if(DC(t)){const t=u$(e);return{value:t,recurse:!1}}return{value:null,recurse:!0}}function u$(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof $r?gh(e):ci(e)}a$.MAX_BUFFER_SIZE=1e4;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&x("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const h$=_f;class d$ extends h{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new c(this,xa())}nextDataId(){return d$.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,ie().get("IS_NODE")&&ks("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&M(n[0])){const r=n.map((e=>tr(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){const t=this.data.get(e);return t.refCount}return 0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Xp(e,t)}return j(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>nr(e)));return ca(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return ca(e.shape,e.dtype,t)}makeOutput(e,t,n){return xa().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=er();e();const n=er()-t;return{kernelMs:n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){c$([e],"where");const t=this.readSync(e.dataId);return h$(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}d$.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function p$(e,t,n){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;if(c$(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=w(a.shape),c=n||a.dtype,h=A(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],r);return o.makeTensorInfo(a.shape,c,h)}}function f$(e,t,n){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;if(c$(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=n||a.dtype,c=t(l,u,r);return o.makeTensorInfo(a.shape,u,c)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Ia("cpu",(()=>new d$),1);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const g$=p$(ut,(e=>e>=0?e:Math.exp(e)-1)),m$={kernelName:ut,backendName:"cpu",kernelFunc:g$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function b$(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const x$={kernelName:$t,backendName:"cpu",kernelFunc:b$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function y$(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:i}=s;c$([r],"leakyRelu");const a=w(r.shape),o=n.data.get(r.dataId).values,l=R("float32",a);for(let u=0;u<o.length;u++)l[u]=o[u]<0?i*o[u]:o[u];return n.makeTensorInfo(r.shape,"float32",l)}const v$={kernelName:_t,backendName:"cpu",kernelFunc:y$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function w$(e){return(t,n,s,r,i)=>{const a=ro(t,n),o=a.length,l=V(a),u=w(a),c=R(i,u),h=t.length,d=n.length,p=V(t),f=V(n),g=no(t,a),m=no(n,a);if(g.length+m.length===0)for(let b=0;b<c.length;++b)c[b]=e(s[b%s.length],r[b%r.length]);else for(let b=0;b<c.length;++b){const t=Z(b,o,l),n=t.slice(-h);g.forEach((e=>n[e]=0));const i=Y(n,h,p),a=t.slice(-d);m.forEach((e=>a[e]=0));const u=Y(a,d,f);c[b]=e(s[i],r[u])}return[c,a]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const k$=w$(((e,t)=>e<0?t*e:e));function I$(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;c$([s,r],"prelu");const i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,[o,l]=k$(s.shape,r.shape,i,a,"float32");return n.makeTensorInfo(l,"float32",o)}const S$={kernelName:gn,backendName:"cpu",kernelFunc:I$},C$=p$(In,(e=>Math.max(0,e))),$$={kernelName:In,backendName:"cpu",kernelFunc:C$},N$=p$(En,(e=>Math.min(Math.max(0,e),6))),T$={kernelName:En,backendName:"cpu",kernelFunc:N$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function E$(e){return(t,n,s)=>{const r=R(n,t.length);for(let i=0;i<t.length;++i)r[i]=e(t[i],s);return r}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const R$=E$((e=>1/(1+Math.exp(-e)))),A$=p$(Wn,(e=>1/(1+Math.exp(-e)))),_$={kernelName:Wn,backendName:"cpu",kernelFunc:A$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function F$(e,t,n,s,r){if("linear"===n)return b$({inputs:{x:t},backend:e});if("relu"===n)return C$({inputs:{x:t},backend:e});if("elu"===n)return g$({inputs:{x:t},backend:e});if("relu6"===n)return N$({inputs:{x:t},backend:e});if("prelu"===n)return I$({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return y$({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return A$({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function D$(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",i),imag:n.makeTensorInfo(r.shape,"float32",a)},o}const O$={kernelName:ze,backendName:"cpu",kernelFunc:D$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function L$(e,t,n="float32"){if("complex64"===n){const n=L$(e,t,"float32"),s=L$(e,t,"float32");return D$({inputs:{real:n,imag:s},backend:e})}const s=K(w(t),n);return e.makeTensorInfo(t,n,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function M$(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const z$={kernelName:wn,backendName:"cpu",kernelFunc:M$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function P$(e,t,n,s){if("int32"===s){const n=Int32Array.from(e);return[t,"int32",n]}if("bool"===s){const s=Qs([0],n),[r,i]=w$(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function B$(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:i}=s;if("complex64"===i){if("complex64"===r.dtype)return b$({inputs:{x:r},backend:n});const e=L$(n,r.shape,r.dtype),t=B$({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=D$({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=M$({inputs:{input:r},backend:n}),t=B$({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!D(r.dtype,i)){const e=b$({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const a=n.data.get(r.dataId).values,[o,l,u]=P$(a,r.shape,r.dtype,i);return n.makeTensorInfo(o,l,u)}const W$={kernelName:Oe,backendName:"cpu",kernelFunc:B$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function U$(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a:i,b:a}=n,o=r;c$([i,a],e);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,c="string"===i.dtype?Rf(l):l,h="string"===i.dtype?Rf(u):u,d=s||i.dtype,[p,f]=t(i.shape,a.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:r})=>{const{a:i,b:a}=e,o=r;if("complex64"===i.dtype||"complex64"===a.dtype){const e=B$({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=B$({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,x]=n(i.shape,a.shape,l,u,f,g),y=o.makeTensorInfo(x,"float32",m),v=o.makeTensorInfo(x,"float32",b),w=D$({inputs:{real:y,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,r=s||i.dtype,[l,u]=t(i.shape,a.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function V$(e){return(t,n,s,r,i,a)=>{const o=ro(t,n),l=w(o),u=o.length,c=V(o),h=R("float32",l),d=R("float32",l),p=no(t,o),f=no(n,o),g=Xp(s,r),m=Xp(i,a),b=t.length,x=V(t),y=n.length,v=V(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const t=w%g.length,n=w%m.length,s=e(g[2*t],g[2*t+1],m[2*n],m[2*n+1]);h[w]=s.real,d[w]=s.imag}else for(let w=0;w<h.length;w++){const t=Z(w,u,c),n=t.slice(-b);p.forEach((e=>n[e]=0));const s=Y(n,b,x),r=t.slice(-y);f.forEach((e=>r[e]=0));const i=Y(r,y,v),a=e(g[2*s],g[2*s+1],m[2*i],m[2*i+1]);h[w]=a.real,d[w]=a.imag}return[h,d,o]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const G$=w$(((e,t)=>e+t)),H$=V$(((e,t,n,s)=>({real:e+n,imag:t+s}))),j$=U$(ge,G$,H$),q$={kernelName:ge,backendName:"cpu",kernelFunc:j$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function K$(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:i}=s,a=w(r.shape),o=N(i,a),l=w(o);x(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const X$={kernelName:Sn,backendName:"cpu",kernelFunc:K$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function J$(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i}=t,{transposeA:a,transposeB:o}=s;c$([r,i],"matMul");const l=r.shape.length,u=i.shape.length,c=a?r.shape[l-2]:r.shape[l-1],h=o?i.shape[u-1]:i.shape[u-2],d=a?r.shape[l-1]:r.shape[l-2],p=o?i.shape[u-2]:i.shape[u-1],f=r.shape.slice(0,-2),g=i.shape.slice(0,-2),m=w(f),b=w(g),y=ro(r.shape.slice(0,-2),i.shape.slice(0,-2)),v=y.concat([d,p]);x(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const k=a?[m,c,d]:[m,d,c],I=o?[b,p,h]:[b,h,p],S=K$({inputs:{x:r},backend:n,attrs:{shape:k}}),C=K$({inputs:{x:i},backend:n,attrs:{shape:I}}),$=a?S.shape[1]:S.shape[2],N=a?S.shape[2]:S.shape[1],T=o?C.shape[1]:C.shape[2],E=Math.max(m,b),R=n.data.get(S.dataId).values,A=n.data.get(C.dataId).values,_=V(S.shape),F=V(C.shape),[D,O,L]=a?[_[0],1,_[1]]:[_[0],_[1],1],[M,z,P]=o?[1,F[1],F[0]]:[F[1],1,F[0]],B=N*T,W=ca([E,N,T],S.dtype),U=W.values,G=n.blockSize;for(let x=0;x<E;x++){const e=x%m,t=x%b;for(let n=0;n<N;n+=G){const s=Math.min(n+G,N);for(let r=0;r<T;r+=G){const i=Math.min(r+G,T);for(let a=0;a<$;a+=G){const o=Math.min(a+G,$);for(let l=n;l<s;l++)for(let n=r;n<i;n++){let s=0;for(let r=a;r<o;r++){const i=R[e*D+l*O+r*L],a=A[r*M+n*z+t*P];s+=i*a}U[x*B+(l*T+n)]+=s}}}}}return n.disposeIntermediateTensorInfo(S),n.disposeIntermediateTensorInfo(C),n.makeTensorInfo(v,W.dtype,W.values)}const Y$={kernelName:Re,backendName:"cpu",kernelFunc:J$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Z$(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const g=[],m=J$({inputs:{a:r,b:i},attrs:{transposeA:l,transposeB:u},backend:n});d=m,a&&(p=j$({inputs:{a:d,b:a},backend:n}),g.push(d),d=p),c&&(f=F$(n,d,c,o,h),g.push(d),d=f);for(const b of g)n.disposeIntermediateTensorInfo(b);return d}const Q$={kernelName:ys,backendName:"cpu",kernelFunc:Z$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eN(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const tN=e=>{const{x:t}=e.inputs,n=e.backend;c$(t,"abs");let s=new Float32Array(w(t.shape));const r=n.data.get(t.dataId).values;return s=eN(r),n.makeOutput(s,t.shape,t.dtype)},nN={kernelName:de,backendName:"cpu",kernelFunc:tN},sN=p$(pe,(e=>Math.acos(e))),rN={kernelName:pe,backendName:"cpu",kernelFunc:sN},iN=p$(fe,(e=>Math.acosh(e))),aN={kernelName:fe,backendName:"cpu",kernelFunc:iN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oN(e){const{inputs:t,backend:n}=e,s=t;c$(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),i=ca(s[0].shape,s[0].dtype),a=i.values;for(let o=0;o<s.length;o++){const e=r[o];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}const lN={kernelName:me,backendName:"cpu",kernelFunc:oN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uN(e,t,n,s,r){const i=t.length,a=w(t),o=V(t),l=V(r),u=R(n,w(r));for(let c=0;c<a;++c){const t=Z(c,i,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[s[e]];const r=Y(n,i,l);u[r]=e[c]}return u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cN(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:i}=n;c$(r,"transpose");const a=r.shape.length,o=new Array(a);for(let h=0;h<o.length;h++)o[h]=r.shape[i[h]];const l=s.data.get(r.dataId).values,u=uN(l,r.shape,r.dtype,i,o),c=s.write(u,o,r.dtype);return{dataId:c,shape:o,dtype:r.dtype}}const hN={kernelName:hs,backendName:"cpu",kernelFunc:cN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;c$(r,"all");const o=T(i,r.shape);let l=o;const u=pc(l,r.shape.length);let c=r;null!=u&&(c=cN({inputs:{x:r},backend:n,attrs:{perm:u}}),l=gc(l.length,r.shape.length)),dc("all",l,c.shape.length);const[h,d]=cc(c.shape,l),p=w(d),f=K(w(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const s=g[e+n];t=t&&s}f[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=hc(h,o),t=K$({inputs:{x:m},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(m),t}return m}const pN={kernelName:be,backendName:"cpu",kernelFunc:dN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;c$(r,"any");const o=T(i,r.shape);let l=o;const u=pc(l,r.shape.length);let c=r;null!=u&&(c=cN({inputs:{x:r},backend:n,attrs:{perm:u}}),l=gc(l.length,r.shape.length)),dc("any",l,c.shape.length);const[h,d]=cc(c.shape,l),p=w(d),f=K(w(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const s=g[e+n];t=t||s}f[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=hc(h,o),t=K$({inputs:{x:m},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(m),t}return m}const gN={kernelName:xe,backendName:"cpu",kernelFunc:fN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;c$(r,"argMax");let a=T(i,r.shape);const o=pc(a,r.shape.length);let l=r;const u=[];null!=o&&(l=cN({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=gc(a.length,l.shape.length)),a=[a[0]],dc("argMax",a,l.shape.length);const[c,h]=cc(l.shape,a),d=w(c),p=K(d,"int32"),f=w(h),g=n.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const e=m*f;let t=g[e],n=0;for(let s=0;s<f;++s){const r=g[e+s];r>t&&(t=r,n=s)}p[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}const bN={kernelName:ye,backendName:"cpu",kernelFunc:mN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;c$(r,"argMin");let a=T(i,r.shape);const o=pc(a,r.shape.length);let l=r;const u=[];null!=o&&(l=cN({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=gc(a.length,l.shape.length)),a=[a[0]],dc("argMin",a,l.shape.length);const[c,h]=cc(l.shape,a),d=w(c),p=K(d,"int32"),f=w(h),g=n.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const e=m*f;let t=g[e],n=0;for(let s=0;s<f;++s){const r=g[e+s];r<t&&(t=r,n=s)}p[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}const yN={kernelName:ve,backendName:"cpu",kernelFunc:xN},vN=p$(we,(e=>Math.asin(e))),wN={kernelName:we,backendName:"cpu",kernelFunc:vN},kN=p$(ke,(e=>Math.asinh(e))),IN={kernelName:ke,backendName:"cpu",kernelFunc:kN},SN=p$(Ie,(e=>Math.atan(e))),CN={kernelName:Ie,backendName:"cpu",kernelFunc:SN},$N=w$(((e,t)=>Math.atan2(e,t))),NN=U$(Ce,$N),TN={kernelName:Ce,backendName:"cpu",kernelFunc:NN},EN=p$(Se,(e=>Math.atanh(e))),RN={kernelName:Se,backendName:"cpu",kernelFunc:EN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AN(e,t,n,s,r,i){const a=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=ca(r.outShape,n),m=g.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let v=0;v<r.batchSize;++v){const t=v*b,n=v*s[0];for(let g=0;g<r.inChannels;++g)for(let b=0;b<r.outHeight;++b){const v=b*a-d,w=Math.max(0,v),k=Math.min(r.inHeight,c+v),I=t+b*x;for(let t=0;t<r.outWidth;++t){const a=t*o-p,c=Math.max(0,a),d=Math.min(r.inWidth,h+a);let b=f,x=0,v=0;for(let t=w;t<k;t+=l){const r=n+t*s[1];for(let t=c;t<d;t+=u){const n=r+t*s[2],a=e[n+g];"max"===i&&a>b?b=a:"avg"===i&&(x+=a,v++)}if(isNaN(b))break}const S=I+t*y+g;m[S]="avg"===i?x/v:b}}}return g}function _N(e,t,n,s,r=!1,i=!1){const a=ca(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=ca(t,n,e);for(let m=0;m<s.batchSize;++m)for(let e=0;e<s.inChannels;++e)for(let t=0;t<s.outHeight;++t){const n=t*o-p;let b=n;while(b<0)b+=u;const x=Math.min(s.inHeight,h+n);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let p=h;while(p<0)p+=c;const y=Math.min(s.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=b;t<x;t+=u){const a=t-n;for(let n=p;n<y;n+=c){const o=n-h,l=g.get(m,t,n,e);l>v&&(v=l,w=r?i?((m*s.inHeight+t)*s.inWidth+n)*s.inChannels+e:(t*s.inWidth+n)*s.inChannels+e:a*d+o)}}a.set(w,m,t,o,e)}}return a}function FN(e,t,n,s,r,i){const a=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,g=r.padInfo.front,m=r.padInfo.top,b=r.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ca(r.outShape,n),v=y.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let C=0;C<r.batchSize;++C){const t=C*w,n=C*s[0];for(let y=0;y<r.inChannels;++y)for(let w=0;w<r.outDepth;++w){const C=w*a-g;let $=C;while($<0)$+=u;const N=Math.min(r.inDepth,d+C),T=t+w*k;for(let t=0;t<r.outHeight;++t){const a=t*o-m;let d=a;while(d<0)d+=c;const g=Math.min(r.inHeight,p+a),w=T+t*I;for(let t=0;t<r.outWidth;++t){const a=t*l-b;let o=a;while(o<0)o+=h;const p=Math.min(r.inWidth,f+a),m=w+t*S;let k=x,I=0,C=0;for(let t=$;t<N;t+=u){const r=n+t*s[1];for(let t=d;t<g;t+=c){const n=r+t*s[2];for(let t=o;t<p;t+=h){const r=n+t*s[3],a=e[r+y];if("max"===i&&a>k?k=a:"avg"===i&&(I+=a,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}const T=m+y;v[T]="avg"===i?I/Math.max(C,1):k}}}}return y}function DN(e,t){const n=ca(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,i=t.strideWidth,a=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const x=b*s-d;let y=x;while(y<0)y+=a;const v=Math.min(t.inDepth,u+x);for(let s=0;s<t.outHeight;++s){const u=s*r-p;let d=u;while(d<0)d+=o;const w=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const p=r*i-f;let k=p;while(k<0)k+=l;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,C=-1;for(let t=y;t<v;t+=a){const n=t-x;for(let s=d;s<w;s+=o){const r=s-u;for(let i=k;i<I;i+=l){const a=i-p,o=e.get(g,t,s,i,m);o>=S&&(S=o,C=n*c*h+r*c+a)}}}n.set(C,g,b,s,r,m)}}}return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ON(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;c$(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,u=1;x(yl(a,u),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=il(r.shape,i,a,u,o,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))h=b$({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=V(r.shape),s=AN(e,r.shape,r.dtype,t,c,"avg");h=n.makeTensorInfo(c.outShape,r.dtype,s.values)}return h}const LN={kernelName:$e,backendName:"cpu",kernelFunc:ON};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s;c$(r,"avgPool3d");const c=al(r.shape,i,a,1,o,l,u),h=n.data.get(r.dataId).values,d=FN(h,r.shape,r.dtype,V(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}const zN={kernelName:Te,backendName:"cpu",kernelFunc:MN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PN(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=s;c$([r,i],"avgPool3DGrad");const c=al(i.shape,a,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,S=k-1-c.padInfo.left,C=w-1-c.padInfo.top,$=ca(i.shape,"float32"),N=1/(f*g*m),T=n.bufferSync(r);for(let E=0;E<c.batchSize;++E)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=t-I,i=n-C,a=s-S;let o=0;for(let t=0;t<v;t+=b){const n=(r+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=x){const s=(i+t)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let t=0;t<k;t+=y){const r=(a+t)/p;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;const i=T.get(E,n,s,r,e);o+=i}}}$.set(o*N,E,t,n,s,e)}return n.makeTensorInfo($.shape,$.dtype,$.values)}const BN={kernelName:Ee,backendName:"cpu",kernelFunc:PN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WN(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,a=i;c$([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=il(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,y=x-1-c.padInfo.left,v=b-1-c.padInfo.top,w=ca(a.shape,"float32"),k=1/(p*f),I=n.data.get(r.dataId).values,S=ca(r.shape,"float32",I);for(let C=0;C<c.batchSize;++C)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const s=t-v,r=n-y;let i=0;for(let t=0;t<b;t+=g){const n=(s+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<x;t+=m){const s=(r+t)/d;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;const a=S.get(C,n,s,e);i+=a}}w.set(i*k,C,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const UN={kernelName:Ne,backendName:"cpu",kernelFunc:WN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:i,offset:a,mean:o,variance:l}=t;x(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),x(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),x(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),c$([r,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,b=p.length,y=d.length,v=h.length;let w=0,k=0,I=0,S=0;for(let x=0;x<c.length;++x)g[x]=f[w++]+(c[x]-h[k++])*p[I++]/Math.sqrt(d[S++]+u),w>=m&&(w=0),k>=v&&(k=0),I>=b&&(I=0),S>=y&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,g)}const GN={kernelName:wt,backendName:"cpu",kernelFunc:VN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HN(e,t,n,s,r){const i=jo(s,t,n),a=w(n),o=V(s);if(i){const n=qo(t,o);return"string"===r?e.slice(n,n+a):e.subarray(n,n+a)}const l="string"===r?Rf(e):e,u=ca(s,r,l),c=ca(n,r);for(let h=0;h<c.size;++h){const e=c.indexToLoc(h),n=e.map(((e,n)=>e+t[n]));c.set(u.get(...n),...e)}return"string"===r?Af(c.values):c.values}function jN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,size:a}=s;c$(r,"slice");const[o,l]=Ko(r,i,a);Do(r,o,l);const u=n.data.get(r.dataId).values,c=HN(u,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}const qN={kernelName:Mn,backendName:"cpu",kernelFunc:jN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,crops:a}=s;c$([r],"batchToSpaceND");const o=i.reduce(((e,t)=>e*t)),l=_p(r.shape,i,o),u=Fp(l.length,i.length),c=Dp(r.shape,i,o),h=Op(a,i.length),d=Lp(c,a,i.length),p=K$({inputs:{x:r},backend:n,attrs:{shape:l}}),f=cN({inputs:{x:p},backend:n,attrs:{perm:u}}),g=K$({inputs:{x:f},backend:n,attrs:{shape:c}}),m=jN({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const XN={kernelName:Ae,backendName:"cpu",kernelFunc:KN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JN(e,t,n,s,r){const i=w(s),a=K(r,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(a[n]+=i>0?t[o]:1)}return a}function YN(e,t,n,s=!1){const r=e.shape[0],i=e.shape[1],a=ca([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<i;r++){const i=e.get(o,r);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(s?a.set(1,o,i):t.size>0?a.set(a.get(o,i)+t.get(o,r),o,i):a.set(a.get(o,i)+1,o,i))}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:a}=s,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=JN(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}const QN={kernelName:_e,backendName:"cpu",kernelFunc:ZN};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eT(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,o=ro(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const tT={kernelName:De,backendName:"cpu",kernelFunc:eT},nT=E$((e=>Math.ceil(e))),sT=f$(Le,nT),rT={kernelName:Le,backendName:"cpu",kernelFunc:sT},iT=p$(Me,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),aT={kernelName:Me,backendName:"cpu",kernelFunc:iT},oT=e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(w(t.shape)),r=n.data.get(t.dataId),i=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let u=0;u<o.length;u++){const e=o[u],t=l[u];s[u]=Math.hypot(e,t)}return n.makeOutput(s,t.shape,"float32")},lT={kernelName:Pe,backendName:"cpu",kernelFunc:oT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uT(e,t,n,s){const r=A(n,w(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=w(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const i="string"===n?Rf(e.vals):e.vals;let a=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=i[a++]}s+=e.shape[1]}))}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cT(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const hT={kernelName:Tt,backendName:"cpu",kernelFunc:cT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dT(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,i=T(r,t[0].shape)[0],a=t.map((e=>e.shape));kp(a,i);let o=Ip(t.map((e=>e.shape)),i);if(0===w(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>w(e.shape)>0));if(1===l.length)return b$({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const e=l.map((e=>M$({inputs:{input:e},backend:n}))),t=l.map((e=>cT({inputs:{input:e},backend:n}))),s=dT({inputs:e,backend:n,attrs:{axis:i}}),r=dT({inputs:t,backend:n,attrs:{axis:i}}),a=D$({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),a}const u=l.map((e=>{const t=w(e.shape.slice(i)),s=[-1,t];return K$({inputs:{x:e},backend:n,attrs:{shape:s}})})),c=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=Ip(u.map((e=>e.shape)),1);const h=1===u[0].shape[0],d=uT(c,o,t[0].dtype,h),p=Ip(l.map((e=>e.shape)),i),f=n.makeTensorInfo(p,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const pT={kernelName:Be,backendName:"cpu",kernelFunc:dT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;c$([r,i],"conv2d");const h=wl(l),d=ol(r.shape,i.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,v=new yr(d.outShape,r.dtype),w=V(r.shape),k=V(i.shape),I=w[0],S=y?w[1]:w[2],C=y?w[2]:1,$=y?1:w[1],N=v.strides[0],T=y?v.strides[1]:v.strides[2],E=y?v.strides[2]:1,R=y?1:v.strides[1],A=n.data.get(r.dataId).values,_=n.data.get(i.dataId).values,F=v.values;for(let D=0;D<d.batchSize;++D){const e=D*I,t=D*N;for(let n=0;n<d.outHeight;++n){const s=t+n*T,r=n*d.strideHeight-x;for(let t=0;t<p;++t){const n=r+t*g;if(n<0||n>=d.inHeight)continue;const i=t*k[0],a=e+n*S;for(let e=0;e<d.outWidth;++e){const t=s+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const s=n+e*m;if(s<0||s>=d.inWidth)continue;const r=i+e*k[1],o=a+s*C;let l=r;for(let e=0;e<d.inChannels;++e){const n=A[o+e*$];for(let e=0;e<d.outChannels;++e)F[t+e*R]+=n*_[l+e];l+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const gT={kernelName:We,backendName:"cpu",kernelFunc:fT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;c$([r,i],"conv2dBackpropFilter");const h=wl(l),d=ol(r.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,x=new yr(d.filterShape,"float32"),y=d.padInfo.left,v=d.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(i.dataId).values,I=new yr(r.shape,r.dtype,w),S=new yr(i.shape,i.dtype,k);for(let C=0;C<g;++C){const e=Math.max(0,Math.ceil((v-C)/p)),t=Math.min(d.outHeight,(d.inHeight+v-C)/p);for(let n=0;n<m;++n){const s=Math.max(0,Math.ceil((y-n)/f)),r=Math.min(d.outWidth,(d.inWidth+y-n)/f);for(let i=0;i<d.inChannels;++i)for(let a=0;a<d.outChannels;++a){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=e;u<t;++u){const e=C+u*p-v;for(let t=s;t<r;++t){const s=n+t*f-y;o+=b?I.get(l,e,s,i)*S.get(l,u,t,a):I.get(l,i,e,s)*S.get(l,a,u,t)}}x.set(o,C,n,i,a)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const bT={kernelName:Ue,backendName:"cpu",kernelFunc:mT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xT(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;c$([r,i],"conv2dBackpropInput");const h=V(i.shape),d=V(r.shape);let p=wl(u);const f=ol(a,i.shape,o,1,l,c,!1,p),g=new yr(f.inShape,"float32"),m=g.values,b=n.data.get(r.dataId).values,x=n.data.get(i.dataId).values,[y,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:C,inHeight:$,inWidth:N,outChannels:T,outHeight:E,outWidth:R,strideHeight:A,strideWidth:_}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,D=S-1-f.padInfo.left,O="channelsLast"===p,L=g.strides[0],M=O?g.strides[1]:g.strides[2],z=O?g.strides[2]:1,P=O?1:g.strides[1],B=d[0],W=O?d[1]:d[2],U=O?d[2]:1,G=O?1:d[1];for(let V=0;V<k;++V)for(let e=0;e<C;++e)for(let t=0;t<$;++t){const n=t-F,s=Math.max(0,Math.ceil(n/A)),r=Math.min(E,(I+n)/A);for(let i=0;i<N;++i){const a=i-D,o=Math.max(0,Math.ceil(a/_)),l=Math.min(R,(S+a)/_);let u=0;for(let t=s;t<r;++t){const s=t*A-n;for(let n=o;n<l;++n){const r=n*_-a,i=B*V+W*t+U*n,o=y*(I-1-s)+v*(S-1-r)+w*e;for(let e=0;e<T;++e){const t=b[i+G*e],n=x[o+e];u+=t*n}}}const c=L*V+M*t+z*i+P*e;m[c]=u}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const yT={kernelName:Ve,backendName:"cpu",kernelFunc:xT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l}=s;c$([r,i],"conv3d");const u=ll(r.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,b=m.front,x=m.left,y=m.top,v=new yr(u.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(i.dataId).values,I=v.values,S=V(r.shape),C=V(i.shape);for(let $=0;$<u.batchSize;++$){const e=$*S[0],t=$*v.strides[0];for(let n=0;n<u.outDepth;++n){const s=t+n*v.strides[1],r=n*u.strideDepth-b;for(let t=0;t<c;++t){const n=r+t*p;if(n<0||n>=u.inDepth)continue;const i=t*C[0],a=e+n*S[1];for(let e=0;e<u.outHeight;++e){const t=s+e*v.strides[2],n=e*u.strideHeight-y;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=i+e*C[1],o=a+s*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-x;for(let e=0;e<d;++e){const t=s+e*g;if(t<0||t>=u.inWidth)continue;const i=r+e*C[2],a=o+t*u.inChannels;let l=i;for(let e=0;e<u.inChannels;++e){const t=w[a+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const wT={kernelName:Ge,backendName:"cpu",kernelFunc:vT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,pad:o,filterShape:l}=s;c$([r,i],"conv3dBackpropFilterV2");const u=V(r.shape),c=V(i.shape),h=ll(r.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,x=new yr(h.filterShape,"float32"),y=x.values,[v,w,k,I]=x.strides,S=n.data.get(i.dataId).values,[C,$,N,T]=c,E=n.data.get(r.dataId).values,[R,A,_,F]=u,D=h.padInfo.front,O=h.padInfo.left,L=h.padInfo.top;for(let M=0;M<g;++M){const e=Math.max(0,Math.ceil((D-M)/d)),t=Math.min(h.outDepth,(h.inDepth+D-M)/d),n=M*v;for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((L-s)/p)),i=Math.min(h.outHeight,(h.inHeight+L-s)/p),a=s*w+n;for(let n=0;n<b;++n){const o=Math.max(0,Math.ceil((O-n)/f)),l=Math.min(h.outWidth,(h.inWidth+O-n)/f),u=n*k+a;for(let a=0;a<h.inChannels;++a){const c=a*I+u;for(let u=0;u<h.outChannels;++u){let g=0;for(let c=0;c<h.batchSize;++c){const h=c*R,m=c*C;for(let c=e;c<t;++c){const e=M+c*d-D,t=e*A+h,b=c*$+m;for(let c=r;c<i;++c){const e=s+c*p-L,r=e*_+t,i=c*N+b;for(let t=o;t<l;++t){const e=n+t*f-O,s=e*F+r,o=t*T+i;g+=E[s+a]*S[o+u]}}}}y[c+u]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const IT={kernelName:He,backendName:"cpu",kernelFunc:kT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ST(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{pad:a,strides:o,inputShape:l}=s;c$([r],"conv3dBackpropInputV2");const u=V(r.shape),c=V(i.shape),h=ll(l,i.shape,o,1,a),d=new yr(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,x=n.data.get(r.dataId).values,[y,v,w,k]=u,I=n.data.get(i.dataId).values,[S,C,$,N]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:_,inDepth:F,inHeight:D,inWidth:O,outChannels:L,outDepth:M,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:U}=h,G=E-1-h.padInfo.front,H=R-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let V=0;V<T;++V)for(let e=0;e<_;++e)for(let t=0;t<F;++t){const n=t-G,s=Math.max(0,Math.ceil(n/B)),r=Math.min(M,(E+n)/B);for(let i=0;i<D;++i){const a=i-H,o=Math.max(0,Math.ceil(a/W)),l=Math.min(z,(R+a)/W);for(let u=0;u<O;++u){const c=u-j,h=Math.max(0,Math.ceil(c/U)),d=Math.min(P,(A+c)/U);let T=0;for(let t=s;t<r;++t){const s=t*B-n;for(let n=o;n<l;++n){const r=n*W-a;for(let i=h;i<d;++i){const a=i*U-c,o=y*V+v*t+w*n+k*i,l=S*(E-1-s)+C*(R-1-r)+$*(A-1-a)+N*e;for(let e=0;e<L;++e){const t=x[o+e],n=I[l+e];T+=t*n}}}}p[f*V+g*t+m*i+b*u+e]=T}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}const CT={kernelName:je,backendName:"cpu",kernelFunc:ST},$T=p$(qe,(e=>Math.cos(e))),NT={kernelName:qe,backendName:"cpu",kernelFunc:$T},TT=p$(Ke,(e=>Math.cosh(e))),ET={kernelName:Ke,backendName:"cpu",kernelFunc:TT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RT(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=i.shape[0],[g,m]=o,b=ca([f,g,m,p],"float32"),x=n.data.get(i.dataId).values,y=n.data.get(a.dataId).values,v=n.data.get(r.dataId).values,w=V(r.shape),k=V(b.shape);for(let I=0;I<f;I++){const e=4*I,t=x[e],n=x[e+1],s=x[e+2],r=x[e+3],i=y[I];if(i>=c)continue;const a=g>1?(s-t)*(h-1)/(g-1):0,o=m>1?(r-n)*(d-1)/(m-1):0;for(let c=0;c<g;c++){const e=g>1?t*(h-1)+c*a:.5*(t+s)*(h-1);if(e<0||e>h-1)for(let t=0;t<m;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+I*k[0];b.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),s=Math.ceil(e),a=e-t;for(let e=0;e<m;e++){const l=m>1?n*(d-1)+e*o:.5*(n+r)*(d-1);if(l<0||l>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+c*k[1]+I*k[0];b.values[n]=u}continue}const h=Math.floor(l),f=Math.ceil(l),g=l-h;for(let n=0;n<p;n++){let r=n+h*w[2]+t*w[1]+i*w[0];const o=v[r];r=n+f*w[2]+t*w[1]+i*w[0];const l=v[r];r=n+h*w[2]+s*w[1]+i*w[0];const u=v[r];r=n+f*w[2]+s*w[1]+i*w[0];const d=v[r],p=o+(l-o)*g,m=u+(d-u)*g;r=n+e*k[2]+c*k[1]+I*k[0],b.values[r]=p+(m-p)*a}}}else for(let t=0;t<m;++t){const s=m>1?n*(d-1)+t*o:.5*(n+r)*(d-1);if(s<0||s>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+I*k[0];b.values[n]=u}continue}const a=Math.round(s),l=Math.round(e);for(let e=0;e<p;e++){const n=e+a*w[2]+l*w[1]+i*w[0],s=e+t*k[2]+c*k[1]+I*k[0];b.values[s]=v[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const AT={kernelName:Ye,backendName:"cpu",kernelFunc:RT};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _T(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:a,reverse:o}=s;c$(r,"cumprod");const l=pc([i],r.shape.length);let u=r;null!=l&&(u=cN({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=gc(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Or(u.dtype,"int32"),d=q(w(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let b=0;b<p.length;b+=f)for(let e=0;e<f;e++){const t=g(b,e);if(0===e)d[t]=a?1:p[t];else{const n=g(b,e-1);d[t]=a?p[n]*d[n]:p[t]*d[n]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=fc(l),t=cN({inputs:{x:m},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),t}return m}const FT={kernelName:Xe,backendName:"cpu",kernelFunc:_T};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:a,reverse:o}=s;c$(r,"cumsum");const l=pc([i],r.shape.length);let u=r;null!=l&&(u=cN({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=gc(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Or(u.dtype,"int32"),d=K(w(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let b=0;b<p.length;b+=f)for(let e=0;e<f;e++){const t=g(b,e);if(0===e)d[t]=a?0:p[t];else{const n=g(b,e-1);d[t]=a?p[n]+d[n]:p[t]+d[n]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=fc(l),t=cN({inputs:{x:m},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),t}return m}const OT={kernelName:Je,backendName:"cpu",kernelFunc:DT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:a,binaryOutput:o}=s;if(1===r.shape.length){const e=n.data.get(r.dataId).values,t=n.data.get(i.dataId).values,s=JN(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(i),s=YN(e,t,a,o);return n.makeTensorInfo(s.shape,i.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const MT={kernelName:Ze,backendName:"cpu",kernelFunc:LT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:i,dataFormat:a}=s;x("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*i,d=u*i,p=c/(i*i),f=n.data.get(r.dataId).values,g=new Float32Array(o*h*d*p);let m=0;for(let b=0;b<o;++b)for(let e=0;e<h;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<d;++e){const s=Math.floor(e/i),r=e%i,a=(n*i+r)*p;for(let e=0;e<p;++e){const n=e+a,r=n+c*(s+u*(t+l*b));g[m++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],r.dtype,g)}const PT={kernelName:Qe,backendName:"cpu",kernelFunc:zT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=s;c$([r,i],"depthwiseConv2DNative");const c=V(r.shape),h=V(i.shape);let d=l;null==d&&(d=[1,1]),x(yl(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=ol(r.shape,i.shape,a,d,o,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:b,padInfo:y}=p,v=y.left,w=y.top,k=p.outChannels/p.inChannels,I=new yr(p.outShape,r.dtype),S=n.data.get(r.dataId).values,C=n.data.get(i.dataId).values,$=I.values;for(let x=0;x<p.batchSize;++x){const e=x*c[0],t=x*I.strides[0];for(let n=0;n<p.outHeight;++n){const s=t+n*I.strides[1],r=n*p.strideHeight-w;for(let t=0;t<f;++t){const n=r+t*m;if(n<0||n>=p.inHeight)continue;const i=t*h[0],a=e+n*c[1];for(let e=0;e<p.outWidth;++e){const t=s+e*I.strides[2],n=e*p.strideWidth-v;for(let e=0;e<g;++e){const s=n+e*b;if(s<0||s>=p.inWidth)continue;const r=i+e*h[1],o=a+s*p.inChannels;let l=t,u=r;for(let e=0;e<p.inChannels;++e){const t=S[o+e];for(let e=0;e<k;++e)$[l+e]+=t*C[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const WT={kernelName:et,backendName:"cpu",kernelFunc:BT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;c$([r,i],"depthwiseConv2dNativeBackpropFilter");const h=ol(r.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new yr(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,y=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new yr(r.shape,r.dtype,v),k=n.data.get(i.dataId).values,I=new yr(i.shape,i.dtype,k);for(let S=0;S<f;++S){const e=Math.max(0,Math.ceil((x-S)/d)),t=Math.min(h.outHeight,(h.inHeight+x-S)/d);for(let n=0;n<g;++n){const s=Math.max(0,Math.ceil((b-n)/p)),r=Math.min(h.outWidth,(h.inWidth+b-n)/p);for(let i=0;i<h.outChannels;++i){const a=Math.trunc(i/y),o=i%y;let l=0;for(let u=0;u<h.batchSize;++u)for(let o=e;o<t;++o){const e=S+o*d-x;for(let t=s;t<r;++t){const s=n+t*p-b;l+=w.get(u,e,s,a)*I.get(u,o,t,i)}}m.set(l,S,n,a,o)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const VT={kernelName:tt,backendName:"cpu",kernelFunc:UT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GT(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;c$([r,i],"depthwiseConv2DNativeBackpropInput");const h=V(r.shape),d=V(i.shape),p=ol(c,i.shape,a,o,l,u,!0),f=new yr(p.inShape,"float32"),g=f.values,[m,b,x]=f.strides,y=n.data.get(r.dataId).values,[v,w,k]=h,I=n.data.get(i.dataId).values,[S,C,$]=d,{batchSize:N,filterHeight:T,filterWidth:E,inChannels:R,inHeight:A,inWidth:_,outChannels:F,outHeight:D,outWidth:O,strideHeight:L,strideWidth:M}=p,z=T-1-p.padInfo.top,P=E-1-p.padInfo.left,B=F/R;for(let W=0;W<N;++W)for(let e=0;e<R;++e)for(let t=0;t<A;++t){const n=t-z,s=Math.max(0,Math.ceil(n/L)),r=Math.min(D,(T+n)/L);for(let i=0;i<_;++i){const a=i-P,o=Math.max(0,Math.ceil(a/M)),l=Math.min(O,(E+a)/M);let u=0;for(let t=s;t<r;++t){const s=t*L-n;for(let n=o;n<l;++n){const r=n*M-a,i=v*W+w*t+k*n,o=S*(T-1-s)+C*(E-1-r)+$*e;for(let t=0;t<B;++t){const n=e*B+t,s=y[i+n],r=I[o+t];u+=s*r}}}g[m*W+b*t+x*i+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const HT={kernelName:nt,backendName:"cpu",kernelFunc:GT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jT(e){const{inputs:t,backend:n}=e,{x:s}=t,r=w(s.shape),i=n.data.get(s.dataId).values,a=ca([r,r],s.dtype),o=a.values;for(let u=0;u<i.length;u++)o[u*r+u]=i[u];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,a.dtype,a.values)}const qT={kernelName:st,backendName:"cpu",kernelFunc:jT},KT={kernelName:rt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:i,pad:a,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:x,padInfo:y,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:C,dilationWidth:$,outShape:N}=rl(s.shape,r.shape,i,a,"NHWC",o),T=w(N),E=N.length,R=A(s.dtype,T);for(let w=0;w<p;++w)for(let e=0;e<b;++e){const t=e*v-y.top;for(let n=0;n<x;++n){const i=n*k-y.left;for(let a=0;a<m;++a){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const n=t+e*C;if(n>=0&&n<f)for(let t=0;t<S;++t){const l=i+t*$;if(l>=0&&l<g){const i=Y([w,n,l,a],c,V(s.shape)),p=Y([e,t,a],d,V(r.shape)),f=u[i]+h[p];f>o&&(o=f)}}}const l=Y([w,e,n,a],E,V(N));R[l]=o}}}const _=l.write(Qs(R,s.dtype),N,s.dtype);return{dataId:_,shape:N,dtype:s.dtype}}},XT={kernelName:at,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:i}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=H(s.shape,u.data.get(s.dataId).values),h=H(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:$}=rl(s.shape,r.shape,a,o,"NHWC",l);x(i.rank===$.length,(()=>`Error in ${at}, dy must have the same rank as output ${$.length}, but got ${i.rank}`));const N=H($,u.data.get(i.dataId).values),T=X(r.shape,r.dtype);for(let x=0;x<d;++x)for(let e=0;e<m;++e){const t=e*v-y.top;for(let n=0;n<b;++n){const s=n*w-y.left;for(let r=0;r<g;++r){let i=Number.MIN_SAFE_INTEGER,a=0,o=0;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<p)for(let t=0;t<I;++t){const l=s+t*C;if(l>=0&&l<f){const s=c[x][n][l][r]+h[e][t][r];s>i&&(i=s,a=e,o=t)}}}T[a][o][r]+=N[x][e][n][r]}}}const E=u.write(Qs(T,s.dtype),r.shape,r.dtype);return{dataId:E,shape:r.shape,dtype:r.dtype}}},JT={kernelName:it,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:i}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=H(s.shape,u.data.get(s.dataId).values),h=H(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:$}=rl(s.shape,r.shape,a,o,"NHWC",l);x(i.rank===$.length,(()=>`Error in ${it}, dy must have the same rank as output ${$.length}, but got ${i.rank}`));const N=H($,u.data.get(i.dataId).values),T=X(s.shape,s.dtype);for(let x=0;x<d;++x)for(let e=0;e<m;++e){const t=e*v-y.top;for(let n=0;n<b;++n){const s=n*w-y.left;for(let r=0;r<g;++r){let i=Number.MIN_SAFE_INTEGER,a=t<0?0:t,o=s<0?0:s;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<p)for(let t=0;t<I;++t){const l=s+t*C;if(l>=0&&l<f){const s=c[x][n][l][r]+h[e][t][r];s>i&&(i=s,a=n,o=l)}}}T[x][a][o][r]+=N[x][e][n][r]}}}const E=u.write(Qs(T,s.dtype),s.shape,s.dtype);return{dataId:E,shape:s.shape,dtype:s.dtype}}},YT=w$(((e,t)=>e*t)),ZT=V$(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),QT=U$(sn,YT,ZT),eE={kernelName:sn,backendName:"cpu",kernelFunc:QT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;let o;c$(r,"sum"),o="bool"===r.dtype?B$({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):b$({inputs:{x:r},backend:n});const l=o.shape.length,u=T(i,o.shape),c=pc(u,l);let h=u,d=o;null!=c&&(d=cN({inputs:{x:o},backend:n,attrs:{perm:c}}),h=gc(h.length,l)),dc("sum",h,d.shape.length);const[p,f]=cc(d.shape,h),g=Or(d.dtype,"int32");let m=L$(n,p,g);const b=w(f),x=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let v=0;v<x.length;++v){const e=v*b;let t=0;for(let n=0;n<b;++n)t+=y[e+n];x[v]=t}if(a){const e=hc(m.shape,u),t=m;m=K$({inputs:{x:m},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const nE={kernelName:Gn,backendName:"cpu",kernelFunc:tE};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sE(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,i=t,{allDims:a,summedDims:o,idDims:l}=lf(r,i.length);cf(a.length,l,i);const{path:u,steps:c}=hf(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let g=0;g<h;++g){for(const e of c[g]){const{permutationIndices:t,expandDims:s}=uf(p,l[e]);let r;df(t)?r=i[e]:(r=cN({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(r));const a=r.shape.slice();for(let e=0;e<s.length;++e)a.splice(s[e],0,1);k(r.shape,a)||(r=K$({inputs:{x:r},backend:n,attrs:{shape:a}}),f.push(r)),null===d?d=r:(d=QT({inputs:{a:r,b:d},backend:n}),f.push(d))}g<h-1&&(u[g]>=0&&(d=tE({inputs:{x:d},backend:n,attrs:{axis:u[g]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&n.disposeIntermediateTensorInfo(g);return d}const rE={kernelName:lt,backendName:"cpu",kernelFunc:sE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iE(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;c$([s,r],"eluGrad");const i=new Float32Array(w(r.shape)),a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let l=0;l<a.length;++l){const e=a[l];i[l]=e>=1?o[l]:o[l]*(e+1)}return n.makeTensorInfo(r.shape,"float32",i)}const aE={kernelName:ct,backendName:"cpu",kernelFunc:iE},oE=w$(((e,t)=>e===t?1:0)),lE=U$(dt,oE,null,"bool"),uE={kernelName:dt,backendName:"cpu",kernelFunc:lE},cE=Vp,hE=Gp,dE=Hp,pE=jp,fE=qp,gE=Kp,mE=p$(ht,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+cE*n);return t*(1-((((gE*s+fE)*s+pE)*s+dE)*s+hE)*s*Math.exp(-n*n))})),bE={kernelName:ht,backendName:"cpu",kernelFunc:mE},xE=E$((e=>Math.exp(e))),yE=f$(pt,xE,"float32"),vE={kernelName:pt,backendName:"cpu",kernelFunc:yE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wE(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:i}=s,a=r.shape.length,o=r.shape.slice();let l=i;return i<0&&(x(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),K$({inputs:{x:r},backend:n,attrs:{shape:o}})}const kE={kernelName:ft,backendName:"cpu",kernelFunc:wE},IE=E$((e=>Math.expm1(e))),SE=f$(gt,IE),CE={kernelName:gt,backendName:"cpu",kernelFunc:SE},$E=w$(((e,t)=>e/t)),NE=U$(ot,$E),TE={kernelName:ot,backendName:"cpu",kernelFunc:NE},EE=w$(((e,t)=>e-t)),RE=V$(((e,t,n,s)=>({real:e-n,imag:t-s}))),AE=U$(is,EE,RE),_E={kernelName:is,backendName:"cpu",kernelFunc:AE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FE(e,t,n){const s=e.shape,r=s[0],i=s[1],a=n.data.get(e.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[r,i],c=w(u),h=R("float32",c),d=R("float32",c);for(let m=0;m<r;m++){const e=jN({inputs:{x:o},backend:n,attrs:{begin:[m,0],size:[1,i]}}),s=jN({inputs:{x:l},backend:n,attrs:{begin:[m,0],size:[1,i]}}),r=D$({inputs:{real:e,imag:s},backend:n}),{real:a,imag:u}=DE(r,t,n),c=Xp(a,u);for(let t=0;t<i;t++){const e=Qp(c,t);h[m*i+t]=e.real,d[m*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=D$({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function DE(e,t,n){const s=w(e.shape),r=n.data.get(e.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,a=n.data.get(r.complexTensorInfos.imag.dataId).values;if(OE(s)){const r=LE(i,a,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),i=n.makeTensorInfo([],"float32",Ys(s,"float32")),a=b$({inputs:{x:i},backend:n}),l=TE.kernelFunc({inputs:{a:e,b:i},backend:n}),u=TE.kernelFunc({inputs:{a:t,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}{const e=Xp(i,a),n=ME(e,s,t);return Jp(n)}}function OE(e){return 0===(e&e-1)}function LE(e,t,n,s,r){if(1===n)return{real:e,imag:t};const i=Xp(e,t),a=n/2,o=Yp(i),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=D$({inputs:{real:h,imag:d},backend:r}),f=Zp(i),g=f.real,m=f.imag,b=[g.length],x=r.makeTensorInfo(b,"float32",g),y=r.makeTensorInfo(b,"float32",m),v=D$({inputs:{real:x,imag:y},backend:r}),w=LE(l,u,a,s,r),k=w.real,I=w.imag,S=[k.length],C=r.makeTensorInfo(S,"float32",k),$=r.makeTensorInfo(S,"float32",I),N=D$({inputs:{real:C,imag:$},backend:r}),T=LE(g,m,a,s,r),E=T.real,R=T.imag,A=[E.length],_=r.makeTensorInfo(A,"float32",E),F=r.makeTensorInfo(A,"float32",R),D=D$({inputs:{real:_,imag:F},backend:r}),O=tf(n,s),L=[O.real.length],M=r.makeTensorInfo(L,"float32",O.real),z=r.makeTensorInfo(L,"float32",O.imag),P=D$({inputs:{real:M,imag:z},backend:r}),B=QT({inputs:{a:P,b:D},backend:r}),W=j$({inputs:{a:N,b:B},backend:r}),U=AE({inputs:{a:N,b:B},backend:r}),V=M$({inputs:{input:W},backend:r}),G=M$({inputs:{input:U},backend:r}),H=cT({inputs:{input:W},backend:r}),j=cT({inputs:{input:U},backend:r}),q=dT({inputs:[V,G],backend:r,attrs:{axis:0}}),K=dT({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(q.dataId).values,J=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:X,imag:J}}function ME(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let i=0,a=0;for(let s=0;s<t;s++){const o=nf(r*s,t,n),l=Qp(e,s);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=t,a/=t),ef(s,i,a,r)}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zE(e){const{inputs:t,backend:n}=e,{input:s}=t,r=w(s.shape),i=s.shape[s.shape.length-1],a=r/i,o=K$({inputs:{x:s},backend:n,attrs:{shape:[a,i]}}),l=FE(o,!1,n),u=K$({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const PE={kernelName:mt,backendName:"cpu",kernelFunc:zE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BE(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:i}=n,a=i||B(r),o=A(a,w(s));return UE(o,r,a),t.makeTensorInfo(s,a,o)}const WE={kernelName:bt,backendName:"cpu",kernelFunc:BE};function UE(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const VE={kernelName:xt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,i=R(s.dtype,w(s.shape)),[a,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<a;d++){const e=d*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let t=0;t<l;t++){const s=t*u;for(let r=0;r<u;r++){const a=Math.round(l-t-1),o=e+n+s+r;let h=c[o];if(a>=0&&a<l){const t=a*u,s=e+n+t+r;h=c[s]}i[o]=h}}}}const h=r.write(i,s.shape,s.dtype);return{dataId:h,shape:s.shape,dtype:s.dtype}}},GE=E$((e=>Math.floor(e))),HE=f$(yt,GE),jE={kernelName:yt,backendName:"cpu",kernelFunc:HE},qE=w$(((e,t)=>Math.floor(e/t))),KE=U$(vt,qE,null,"int32"),XE={kernelName:vt,backendName:"cpu",kernelFunc:KE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=fT({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const e=K$({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});g=j$({inputs:{a:g,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else g=j$({inputs:{a:g,b:a},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=g;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=K$({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});g=F$(n,g,p,e,f),n.disposeIntermediateTensorInfo(e)}else g=F$(n,g,p,o,f);n.disposeIntermediateTensorInfo(e)}return g}const YE={kernelName:vs,backendName:"cpu",kernelFunc:JE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=BT({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;g=j$({inputs:{a:g,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=F$(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}const QE={kernelName:ws,backendName:"cpu",kernelFunc:ZE};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eR(e,t,n,s,r,i,a,o,l){const u=ca([s,i],n);for(let c=0;c<s;c++){const n=[];let s=0;for(let t=0;t<r;t++){const i=e[c*r+t];s+=i*a[t],n.push(i)}if(s<0||s>=l/i)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<i;e++)u.values[c*i+e]=t.get(...t.indexToLoc(s*i+e))}return u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tR(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,i=w(s.shape),a=r.shape,o=a[a.length-1],[l,u,c,h]=Mp(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const d=n.data.get(r.dataId).values,p=n.bufferSync(s),f=eR(d,p,s.dtype,u,o,c,h,s.shape,i);return n.makeTensorInfo(l,s.dtype,f.values)}const nR={kernelName:It,backendName:"cpu",kernelFunc:tR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sR(e,t,n){const s=ca(n,e.dtype);for(let r=0;r<s.size;++r){const n=s.indexToLoc(r),i=n.slice(),a=i[0],o=i[2],l=t.locToIndex([a,o]);i[2]=t.values[l];const u=e.locToIndex(i);0<=u&&u<e.values.length&&(s.values[r]=e.values[u])}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:i}=t,{axis:a,batchDims:o}=s;c$([r,i],"gatherV2");const l=T(a,r.shape)[0],u=n.data.get(i.dataId).values,c=r.shape[l];for(let w=0;w<u.length;++w){const e=u[w];x(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=w(i.shape),p=Ef(r,i,l,h),f=K$({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=K$({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],b=n.bufferSync(g),y=n.bufferSync(f),v=sR(y,b,m);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(p.outputShape,v.dtype,v.values)}const iR={kernelName:kt,backendName:"cpu",kernelFunc:rR},aR=w$(((e,t)=>e>t?1:0)),oR=U$(St,aR,null,"bool"),lR={kernelName:St,backendName:"cpu",kernelFunc:oR},uR=w$(((e,t)=>e>=t?1:0)),cR=U$(Ct,uR,null,"bool"),hR={kernelName:Ct,backendName:"cpu",kernelFunc:cR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dR(e){const{inputs:t,backend:n}=e,{input:s}=t,r=w(s.shape),i=s.shape[s.shape.length-1],a=r/i,o=K$({inputs:{x:s},backend:n,attrs:{shape:[a,i]}}),l=FE(o,!0,n),u=K$({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const pR={kernelName:Nt,backendName:"cpu",kernelFunc:dR},fR=p$(Et,(e=>Number.isFinite(e)?1:0),"bool"),gR={kernelName:Et,backendName:"cpu",kernelFunc:fR},mR=p$(Rt,(e=>Math.abs(e)===1/0?1:0),"bool"),bR={kernelName:Rt,backendName:"cpu",kernelFunc:mR},xR=p$(At,(e=>Number.isNaN(e)?1:0),"bool"),yR={kernelName:At,backendName:"cpu",kernelFunc:xR},vR=w$(((e,t)=>e<t?1:0)),wR=U$(Ft,vR,null,"bool"),kR={kernelName:Ft,backendName:"cpu",kernelFunc:wR},IR=w$(((e,t)=>e<=t?1:0)),SR=U$(Dt,IR,null,"bool"),CR={kernelName:Dt,backendName:"cpu",kernelFunc:SR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $R(e,t,n){const s=(t-e)/(n-1),r=K(n,"float32");r[0]=e;for(let i=1;i<r.length;i++)r[i]=r[i-1]+s;return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NR(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:i}=n,a=$R(s,r,i);return t.makeTensorInfo([a.length],"float32",a)}const TR={kernelName:Ot,backendName:"cpu",kernelFunc:NR},ER=E$((e=>Math.log(e))),RR=f$(Lt,ER),AR={kernelName:Lt,backendName:"cpu",kernelFunc:RR},_R=p$(Mt,(e=>Math.log1p(e))),FR={kernelName:Mt,backendName:"cpu",kernelFunc:_R},DR=w$(((e,t)=>e&&t)),OR=U$(zt,DR,null,"bool"),LR={kernelName:zt,backendName:"cpu",kernelFunc:OR},MR=p$(Pt,(e=>e?0:1),"bool"),zR={kernelName:Pt,backendName:"cpu",kernelFunc:MR},PR=w$(((e,t)=>e||t)),BR=U$(Bt,PR,null,"bool"),WR={kernelName:Bt,backendName:"cpu",kernelFunc:BR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=s;c$(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,d=w(r.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-i);const s=e-t+Math.min(t+i,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let g=0;g<d;g++){const e=f(g),t=h[g]*Math.pow(a+o*e,-l);p[g]=t}return n.makeTensorInfo(r.shape,r.dtype,p)}const VR={kernelName:Ut,backendName:"cpu",kernelFunc:UR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;c$(a,"LRNGrad");const h=w(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(r.dataId).values,g=n.data.get(i.dataId).values,m=new Float32Array(h),b=h;for(let x=0;x<b;x++){const e=x%d,t=x-e+Math.max(0,e-o),n=x-e+Math.min(d,e+o+1);let s=0;for(let r=t;r<n;r++)s+=Math.pow(f[r],2);s=u*s+l;for(let r=t;r<n;r++){let e=-2*u*c*f[r]*g[x]/s;x===r&&(e+=Math.pow(s,-c)),e*=p[x],m[r]+=e}}return n.makeTensorInfo(a.shape,r.dtype,m)}const HR={kernelName:Vt,backendName:"cpu",kernelFunc:GR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jR(e,t,n,s){const r=R(s,w(n));for(let i=0;i<r.length;++i){const n=i*t;let s=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>s)&&(s=t)}r[i]=s}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:i,keepDims:a}=s,o=n;let l=r.shape;const u=l.length,c=T(i,l);let h=c;const d=pc(h,u);let p=o.data.get(r.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=uN(p,l,r.dtype,d,e),h=gc(h.length,u),l=e}c$(r,"max"),dc("max",h,u);const[f,g]=cc(l,h),m=w(g),b=jR(p,m,f,r.dtype),x=o.write(b,f,r.dtype);let y=f;if(a){const e=hc(f,c);y=e}return{dataId:x,shape:y,dtype:r.dtype}}const KR={kernelName:Gt,backendName:"cpu",kernelFunc:qR},XR=w$(((e,t)=>Math.max(e,t))),JR=U$(Ht,XR),YR={kernelName:Ht,backendName:"cpu",kernelFunc:JR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;c$(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,u=1;x(yl(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=il(r.shape,i,a,u,o,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))h=b$({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=V(r.shape),s=AN(e,r.shape,r.dtype,t,c,"max");h=n.makeTensorInfo(c.outShape,r.dtype,s.values)}return h}const QR={kernelName:jt,backendName:"cpu",kernelFunc:ZR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s;c$(r,"maxPool3d");const c=al(r.shape,i,a,1,o,l,u),h=n.data.get(r.dataId).values,d=FN(h,r.shape,r.dtype,V(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}const tA={kernelName:Kt,backendName:"cpu",kernelFunc:eA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nA(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=s;c$([r,i],"maxPool3DGrad");const c=al(i.shape,a,o,1,l,u),h=n.bufferSync(i),d=DN(h,c),p=c.strideDepth,f=c.strideHeight,g=c.strideWidth,m=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,y=c.effectiveFilterDepth,v=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=y-1-c.padInfo.front,I=w-1-c.padInfo.left,S=v-1-c.padInfo.top,C=ca(i.shape,"float32"),$=n.bufferSync(r);for(let N=0;N<c.batchSize;++N)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=t-k,i=n-S,a=s-I;let o=0;for(let t=0;t<y;t+=m){const n=(r+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let s=0;s<v;s+=b){const r=(i+s)/f;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let i=0;i<w;i+=x){const l=(a+i)/g;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=y*v*w-1-d.get(N,n,r,l,e),h=t*v*w+s*w+i,p=u===h?1:0;if(0===p)continue;const f=$.get(N,n,r,l,e);o+=f*p}}}C.set(o,N,t,n,s,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const sA={kernelName:Xt,backendName:"cpu",kernelFunc:nA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rA(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i,output:a}=t,o=i;c$([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=il(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=ca(d.outShape,o.dtype,_N(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=y-1-d.padInfo.top,I=ca(o.shape,"float32"),S=n.data.get(r.dataId).values,C=ca(r.shape,"float32",S);for(let $=0;$<d.batchSize;++$)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const s=t-k,r=n-w;let i=0;for(let t=0;t<y;t+=b){const n=(s+t)/g;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let s=0;s<v;s+=x){const a=(r+s)/m;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;const o=y*v-1-f.get($,n,a,e),l=t*v+s,u=o===l?1:0;if(0===u)continue;const c=C.get($,n,a,e);i+=c*u}}I.set(i,$,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const iA={kernelName:qt,backendName:"cpu",kernelFunc:rA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aA(e,t,n,s,r){const i=V(t),a=AN(e,t,n,i,r,"max"),o=_N(e,t,n,r,!0,s);return[a.values,o.values]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const oA={kernelName:Jt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=t,l=n;c$(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=il(s.shape,r,i,[1,1],a),[h,d]=aA(u,s.shape,s.dtype,o,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=T(i,r.shape),l=cc(r.shape,o),u=l[1],c=w(u),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=B$({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});h.push(p);const f=NE({inputs:{a:p,b:d},backend:n});h.push(f);const g=tE({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:a}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}const uA={kernelName:Yt,backendName:"cpu",kernelFunc:lA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;c$(r,"min");const o=T(i,r.shape);let l=o;const u=pc(l,r.shape.length);let c=r;null!=u&&(c=cN({inputs:{x:r},backend:n,attrs:{perm:u}}),l=gc(l.length,r.shape.length)),dc("min",l,c.shape.length);const[h,d]=cc(c.shape,l),p=w(d),f=K(w(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const s=g[e+n];(Number.isNaN(s)||s<t)&&(t=s)}f[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=hc(h,o),t=K$({inputs:{x:m},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(m),t}return m}const hA={kernelName:Zt,backendName:"cpu",kernelFunc:cA},dA=w$(((e,t)=>Math.min(e,t))),pA=U$(Qt,dA),fA={kernelName:Qt,backendName:"cpu",kernelFunc:pA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,mode:a}=s;c$(r,"mirrorPad");const o=i.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=i.map((e=>e[0])),u=i.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===a?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=V(r.shape),f=w(o),g=o.length,m=V(o),b=R(r.dtype,f);for(let y=0;y<f;y++){let e=Z(y,g,m);for(let n=0;n<g;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-c:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+c);e=e.map(((e,t)=>e-l[t]));const t=Y(e,d,p);b[y]=h[t]}const x=n.write(b,o,r.dtype);return{dataId:x,shape:o,dtype:r.dtype}}const mA={kernelName:en,backendName:"cpu",kernelFunc:gA},bA=w$(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),xA=U$(tn,bA),yA={kernelName:tn,backendName:"cpu",kernelFunc:xA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vA(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:i}=s,a=r.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=T([o],r.shape),u=qR({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=hc(u.shape,l),h=K$({inputs:{x:u},backend:n,attrs:{shape:c}}),d=AE({inputs:{a:r,b:h},backend:n}),p=yE({inputs:{x:d},backend:n}),f=tE({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),g=K$({inputs:{x:f},backend:n,attrs:{shape:c}}),m=NE({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const wA={kernelName:qn,backendName:"cpu",kernelFunc:vA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kA(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:i,seed:a,normalized:o}=s;c$(r,"multinomial");const l=o?r:vA({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,i],p=K(w(d),"int32");for(let f=0;f<u;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=_c.alea(a.toString()),s=f*i;for(let r=0;r<i;++r){const e=n();p[s+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[s+r]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}const IA={kernelName:nn,backendName:"cpu",kernelFunc:kA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SA(e,t,n){const s=Ys(-1,n);return YT([],t,s,e,n)}function CA(e){const{inputs:t,backend:n}=e,{x:s}=t;c$(s,"neg");const r=n.data.get(s.dataId).values,[i,a]=SA(r,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,i)}const $A={kernelName:rn,backendName:"cpu",kernelFunc:CA},NA=Id;function TA(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s;c$(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=NA(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const EA={kernelName:on,backendName:"cpu",kernelFunc:TA},RA=Sd;function AA(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;c$(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=RA(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const _A={kernelName:ln,backendName:"cpu",kernelFunc:AA},FA=Cd;function DA(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;c$(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=a,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=FA(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const OA={kernelName:un,backendName:"cpu",kernelFunc:DA},LA=w$(((e,t)=>e!==t?1:0)),MA=U$(an,LA,null,"bool"),zA={kernelName:an,backendName:"cpu",kernelFunc:MA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PA(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:i,depth:a,onValue:o,offValue:l}=s;c$(r,"oneHot");const u=w(r.shape),c=new Float32Array(u*a);c.fill(l);const h=n.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<a&&(c[d*a+h[d]]=o);return n.makeTensorInfo([...r.shape,a],i,c)}const BA={kernelName:hn,backendName:"cpu",kernelFunc:PA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WA(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=M$({inputs:{input:s},backend:n}),t=WA({inputs:{x:e},backend:n}),r=cT({inputs:{input:s},backend:n}),i=WA({inputs:{x:r},backend:n}),a=D$({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return BE({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const UA={kernelName:gs,backendName:"cpu",kernelFunc:WA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VA(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=M$({inputs:{input:s},backend:n}),t=VA({inputs:{x:e},backend:n}),r=cT({inputs:{input:s},backend:n}),i=WA({inputs:{x:r},backend:n}),a=D$({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return BE({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const GA={kernelName:cn,backendName:"cpu",kernelFunc:VA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HA(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return wE({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{y(i,e.shape,"All tensors passed to stack must have matching shapes"),x(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=t.map((e=>{const t=wE({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),u=dT({inputs:l,backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const jA={kernelName:dn,backendName:"cpu",kernelFunc:HA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,constantValue:a}=s;c$(r,"pad");const o=i.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=i.map((e=>e[0])),u=n.data.get(r.dataId).values,c=w(r.shape),h=r.shape.length,d=V(r.shape),p=w(o),f=o.length,g=V(o),m=R(r.dtype,p);0!==a&&m.fill(a);for(let x=0;x<c;x++){const e=Z(x,h,d),t=e.map(((e,t)=>e+l[t])),n=Y(t,f,g);m[n]=u[x]}const b=n.write(m,o,r.dtype);return{dataId:b,shape:o,dtype:r.dtype}}const KA={kernelName:pn,backendName:"cpu",kernelFunc:qA},XA=w$(((e,t)=>Math.pow(e,t))),JA=U$(fn,XA),YA={kernelName:fn,backendName:"cpu",kernelFunc:JA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZA(e,t,n,s){const[r,i]=cc(e,s),a=Or(t,"int32"),o=K(w(r),a),l=w(i);for(let u=0;u<o.length;++u){const e=u*l;let t=1;for(let s=0;s<l;++s)t*=n[e+s];o[u]=t}return{outVals:o,outShape:r,outDtype:a}}function QA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;c$(r,"prod");const o=r.shape.length,l=T(i,r.shape),u=pc(l,o);let c=l,h=r;const d=[];null!=u&&(h=cN({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),c=gc(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=ZA(h.shape,h.dtype,p,c);let b=g;return a&&(b=hc(g,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}const e_={kernelName:mn,backendName:"cpu",kernelFunc:QA};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function t_(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const r=Z(s,t.length,V(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}function n_(e,t){for(let n=0;n<e.length;++n){const s=e[n],r=n===e.length-1?t:e[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<s.length;++e)if(s[e-1]>s[e])throw new Error("Ragged splits must be sorted in ascending order")}}function s_(e,t,n,s){const r=[];let i=0;const a=t.length-1+n.length,o=new Array(a).fill(null).map((()=>[0]));n_(n,s);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let s=e[u],a=e[u]+1;for(let e=0;e<n.length;++e){const r=n[e],i=e+t.length-1;if(i>=0){const e=o[i],t=e[e.length-1]-r[s];for(let n=s;n<a;++n)o[i].push(r[n+1]+t)}s=r[s],a=r[a]}a!==s&&(r.push([s,a]),i+=a-s)}return{outSplits:o,valueSlices:r,numValues:i}}function r_(e){const t=[];for(let n=0;n<e.length;++n){const s=e[n].length,r=A("int32",s);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}function i_(e,t){const n=e.slice(0,t);while(n.length<t)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function a_(e,t,n,s,r,i){const a=i_(t,2)[1],o=i_(i,2)[1];let l=0;for(const u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<s;++n)r[l*o+n]=e[t*a+n];++l}}function o_(e,t,n,s,r){const i=t.slice();i[0]=r;const a=A(n,w(i)),o=e.length,l=0===o?0:o/t[0];return a_(e,t,s,l,a,i),[a,i]}function l_(e,t,n,s,r,i,a,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");const l=t[0][0]-1;if(t_(i,a,l),0===s.length)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=s_(i,a,e,u),p=r_(c),f=o_(n,s,r,h,d);return[p,f[0],f[1]]}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u_(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.data.get(e.dataId).values)),u=r.map((e=>e.shape)),c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,[d,p,f]=l_(l,u,c,i.shape,i.dtype,h,a.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,i.dtype,p);return g.concat([m])}const c_={kernelName:bn,backendName:"cpu",kernelFunc:u_},h_=2147483647;function d_(e,t,n,s,r,i,a){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===r.length,u=0===a.length,c=[];o||c.push(t[0]),l||c.push(r[0]),u||c.push(a[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=A("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const t=o?e[0]:e[m],n=l?s[0]:s[m],r=u?i[0]:i[m];if(0===r)throw new Error("Requires delta != 0");let a;if(r>0&&n<t||r<0&&n>t)a=0;else if(a=Math.ceil(Math.abs((n-t)/r)),a>h_)throw new Error(`Requires ((limit - start) / delta) <= ${h_}`);d[m+1]=d[m]+a}const p=d[h],f=A(n,p);let g=0;for(let m=0;m<h;++m){const t=d[m+1]-d[m];let n=o?e[0]:e[m];const s=u?i[0]:i[m];for(let e=0;e<t;++e)f[g++]=n,n+=s}return[d,f]}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function p_(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:i}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,c]=d_(a,s.shape,s.dtype,o,r.shape,l,i.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const f_={kernelName:xn,backendName:"cpu",kernelFunc:p_};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var g_=Sp;class m_{constructor(e,t,n,s,r,i,a,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=$p(u),this.raggedRank=Np(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===g_.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===g_.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case g_.VALUE_ROWIDS:return m_.getMaxWidthValueRowID(t);case g_.ROW_SPLITS:return m_.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${g_[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let s=0;s<t-1;++s){const t=e[s+1]-e[s];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,s=e[0],r=0;for(let i=1;i<t;++i){const t=e[i];t!==s&&(s=t,r=Math.max(i-n,r),n=i)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return x_(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;Tp(n,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Cp(this.raggedRank,s,t),i=r;i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),r=[];let i=0;for(let a=0;a<s;++a,i+=t)r.push(i);for(let a=s;a<e;++a)r.push(-1);return x(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,s){const r=e.length,i=[];for(let a=0;a<r-1;++a){const r=e[a+1]-e[a];let o=Math.min(s,r),l=t[a];-1===l&&(o=0);for(let e=0;e<o;++e)i.push(l),l+=n;for(let e=0;e<r-o;++e)i.push(-1)}if(r>0&&i.length!==e[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,s){const r=e.length,i=[];if(0===r)return[];let a=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];i.push(l);for(let u=1;u<r;++u){const r=e[u];if(r===o)l>=0&&(++a,a<s?l+=n:l=-1);else{if(a=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,s){const r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case g_.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,s);case g_.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,s);default:throw new Error(`Unsupported partition type: ${g_[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case g_.FIRST_DIM_SIZE:return e[0];case g_.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case g_.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${g_[t]}`)}}compute(){const e=this.rowPartitionValues[0];if(e.length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let o=s.length-2;o>=0;--o)s[o]=s[o+1]*n[o+1];const r=x_(n,!1),i=A(this.valuesDType,w(r)),a=s[0]*n[0];if(a>0){let e=this.calculateFirstParentOutputIndex(t,s[0],n[0]);for(let t=1;t<=this.raggedRank;++t){const r=this.calculateOutputIndex(t-1,e,s[t],n[t]);e=r}this.setOutput(this.raggedRank,e,i,r)}return[r,i]}setOutput(e,t,n,s){if(0===n.length)return;const r=this.values,i=n;let a=s.slice();a=a.slice(e+1);const o=w(a),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;va((()=>{const t=Sl(u,e),n=Pl(t,a);u=n.dataSync()}))}let c=0,h=0,d=0;for(let p=0;p<=l;++p){let e=p<l?t[p]:-1;if(e!==d){if(h<d){const e=r.subarray(c*o),t=i.subarray(h*o),n=(d-h)*o;b_(t,e,n)}if(p>=l){const t=n.length;e=Math.floor(t/o)}if(e>d)if(1===this.defaultValue.length)i.subarray(d*o,e*o).fill(this.defaultValue[0]),d=e;else while(e>d){const e=i.slice(d*o);b_(e,u,o),++d}e<0?(c=p+1,h=d):(c=p,h=d,d=h+1)}else++d}}}function b_(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function x_(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function y_(e,t,n,s,r,i,a,o,l,u){return new m_(e,t,n,s,r,i,a,o,l,u).compute()}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function v_(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,g]=y_(u,r.shape,c,i.shape,i.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,g)}const w_={kernelName:yn,backendName:"cpu",kernelFunc:v_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function k_(e,t,n,s){const r=e===t,i=e<t&&n<0,a=t<e&&n>1;if(r||i||a)return K(0,s);const o=Math.abs(Math.ceil((t-e)/n)),l=K(o,s);t<e&&1===n&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function I_(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:i,step:a}=n,o=k_(s,r,a,i);return t.makeTensorInfo([o.length],i,o)}const S_={kernelName:vn,backendName:"cpu",kernelFunc:I_},C_=p$(kn,(e=>1/e)),$_={kernelName:kn,backendName:"cpu",kernelFunc:C_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function N_(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:a,size:o}=s;c$(r,"resizeBilinear");const l=V(r.shape),[u,c]=o,[h,d,p,f]=r.shape,g=n.data.get(r.dataId).values,m=new Float32Array(w([h,u,c,f])),b=[i&&u>1?d-1:d,i&&c>1?p-1:p],x=[i&&u>1?u-1:u,i&&c>1?c-1:c];let y=0;const v=b[0]/x[0],k=b[1]/x[1];for(let w=0;w<h;w++)for(let e=0;e<u;e++){let t;t=a?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,r=Math.min(d-1,Math.ceil(t)),i=w*l[0]+n*l[1],o=w*l[0]+r*l[1];for(let e=0;e<c;e++){let t;t=a?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,u=Math.min(p-1,Math.ceil(t)),c=i+n*l[2],h=o+n*l[2],d=i+u*l[2],b=o+u*l[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],i=g[d+e],a=g[b+e],o=t+(i-t)*r,l=n+(a-n)*r,u=o+(l-o)*s;m[y++]=u}}}return n.makeTensorInfo([h,u,c,f],"float32",m)}const T_={kernelName:Nn,backendName:"cpu",kernelFunc:N_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function E_(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:a}=s;c$([i,r],"resizeBilinearGrad");const o=V(r.shape),[l,u,c,h]=r.shape,[,d,p]=i.shape,f=new Float32Array(l*u*c*h),g=[a&&d>1?u-1:u,a&&p>1?c-1:c],m=[a&&d>1?d-1:d,a&&p>1?p-1:p],b=g[0]/m[0],x=g[1]/m[1],y=n.data.get(i.dataId).values;let v=0;for(let w=0;w<l;w++){const e=w*o[0];for(let t=0;t<d;t++){const n=t*b,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),i=e+s*o[1],a=e+r*o[1],l=n-s,d=1-l;for(let e=0;e<p;e++){const t=e*x,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,p=i+n*o[2],g=i+s*o[2],m=a+n*o[2],b=a+s*o[2],w=d*u,k=d*r,I=l*u,S=l*r;for(let e=0;e<h;e++){const t=y[v++];f[p+e]+=t*w,f[g+e]+=t*k,f[m+e]+=t*I,f[b+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}const R_={kernelName:Tn,backendName:"cpu",kernelFunc:E_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function A_(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:a,size:o}=s;c$(r,"resizeNearestNeighbor");const l=V(r.shape),[u,c]=o,[h,d,p,f]=r.shape,g=n.data.get(r.dataId).values,m=new Float32Array(h*u*c*f),b=[i&&u>1?d-1:d,i&&c>1?p-1:p],x=[i&&u>1?u-1:u,i&&c>1?c-1:c],y=b[0]/x[0],v=b[1]/x[1];let w=0;for(let k=0;k<h;k++){const e=k*l[0];for(let t=0;t<u;t++){const n=a?y*(t+.5):y*t;let s=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(s=Math.max(0,s));const r=e+s*l[1];for(let e=0;e<c;e++){const t=a?v*(e+.5):v*e;let n=Math.min(p-1,i?Math.round(t):Math.floor(t));a&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=g[s+e];m[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,m)}const __={kernelName:Cn,backendName:"cpu",kernelFunc:A_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function F_(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:a}=s;c$([i,r],"resizeNearestNeighborGrad");const o=V(r.shape),l=V(i.shape),[u,c,h,d]=r.shape,[,p,f]=i.shape,g=new Float32Array(u*c*h*d),m=n.data.get(i.dataId).values,b=[a&&p>1?c-1:c,a&&f>1?h-1:h],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],y=b[0]/x[0],v=b[1]/x[1],w=1/y,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let C=0;C<u;C++){const e=C*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],s=Math.floor(t*w),r=Math.floor(s-I/2);for(let i=0;i<h;i++){const s=n+i*o[2],u=Math.floor(i*k),b=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){const u=s+r;if(u<0||u>=p)continue;const d=e+u*l[1],g=u*y,x=Math.min(c-1,a?Math.round(g):Math.floor(g));if(t===x)for(let e=0;e<S;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*l[2],r=t*v,u=Math.min(h-1,a?Math.round(r):Math.floor(r));i===u&&(o+=m[s+n])}}g[s+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,g)}const D_={kernelName:$n,backendName:"cpu",kernelFunc:F_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function O_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:i}=s;c$(r,"reverse");const a=r.shape.length,o=T(i,r.shape);if(0===a)return b$({inputs:{x:r},backend:n});const l=new yr(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){const e=l.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=r.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const L_={kernelName:Rn,backendName:"cpu",kernelFunc:O_},M_={kernelName:xs,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:i,center:a}=t,o=n,l=R(s.dtype,w(s.shape)),[u,c,h,d]=s.shape,[p,f]=Ap(a,c,h),g=255,m=Math.sin(r),b=Math.cos(r),x=o.data.get(s.dataId).values;for(let v=0;v<u;v++){const e=v*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let s=0;s<h;s++){const r=s*d;for(let a=0;a<d;a++){const o=[u,t,s,a],y=o[2],v=o[1];let w=(y-p)*b-(v-f)*m,k=(y-p)*m+(v-f)*b;w=Math.round(w+p),k=Math.round(k+f);let I=i;if("number"!==typeof i&&(I=3===a?g:i[a]),w>=0&&w<h&&k>=0&&k<c){const t=k*(h*d),n=w*d,s=e+t+n+a;I=x[s]}const S=e+n+r+a;l[S]=I}}}}const y=o.write(l,s.shape,s.dtype);return{dataId:y,shape:s.shape,dtype:s.dtype}}},z_=p$(An,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),P_={kernelName:An,backendName:"cpu",kernelFunc:z_},B_=E$((e=>1/Math.sqrt(e))),W_=f$(_n,B_),U_={kernelName:_n,backendName:"cpu",kernelFunc:W_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function V_(e,t,n,s,r,i,a,o,l,u){const c=[s/r,r],h=e.values,d=t.values;if(0===s)return ca(n,t.dtype);const p=ca(c,t.dtype);"string"===typeof l||"number"===typeof l?p.values.fill(l):"boolean"===typeof l&&p.values.fill(+l);for(let f=0;f<i;f++){const e=[];let i=0;for(let t=0;t<a;t++){const n=h[f*a+t];e.push(n),i+=n*o[t]}if(i<0||i>=s/r)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[i*r+n]+=d[f*r+n]:p.values[i*r+n]=0===t.rank?d[0]:d[f*r+n]}return p}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function G_(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:i}=t,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Bp(i,r,a),d=!0,p=n.bufferSync(r),f=n.bufferSync(i),g=V_(p,f,a,h,u,l,o,c,0,d);return n.makeTensorInfo(a,g.dtype,g.values)}const H_={kernelName:Fn,backendName:"cpu",kernelFunc:G_};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function j_(e,t){let n=0,s=e.length,r=0;while(n<s)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function q_(e,t){let n=0,s=e.length,r=0;while(n<s)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}function K_(e,t,n,s,r,i){const a=A("int32",n*r);for(let o=0;o<n;++o){const n=e.slice(o*s,(o+1)*s),l=o*r;for(let e=0;e<r;++e)a[l+e]="left"===i?j_(n,t[e+l]):q_(n,t[e+l])}return a}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function X_(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:i}=t,{side:a}=s,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=K_(o,l,r.shape[0],r.shape[1],i.shape[1],a);return n.makeTensorInfo(i.shape,"int32",u)}const J_={kernelName:Dn,backendName:"cpu",kernelFunc:X_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Y_(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:i}=t;c$([s,r,i],"select");const a=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,c=Or(r.dtype,i.dtype),h=K(w(r.shape),c);let d=0;const p=0===a||a>1||1===r.shape.length?1:w(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<p;e++)1===o[f]?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(r.shape,c,h)}const Z_={kernelName:On,backendName:"cpu",kernelFunc:Y_},Q_=Wp,eF=Up,tF=p$(Ln,(e=>e>=0?eF*e:Q_*(Math.exp(e)-1))),nF={kernelName:Ln,backendName:"cpu",kernelFunc:tF},sF=p$(Bn,(e=>e<0?-1:e>0?1:0)),rF={kernelName:Bn,backendName:"cpu",kernelFunc:sF},iF=p$(zn,(e=>Math.sin(e))),aF={kernelName:zn,backendName:"cpu",kernelFunc:iF},oF=p$(Pn,(e=>Math.sinh(e))),lF={kernelName:Pn,backendName:"cpu",kernelFunc:oF},uF=1.1920928955078125e-7,cF=Math.log(uF)+2,hF=p$(Un,(e=>{const t=e>-cF,n=e<cF,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),dF={kernelName:Un,backendName:"cpu",kernelFunc:hF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,paddings:a}=s;c$([r],"spaceToBatchND");const o=w(i),l=[[0,0]];l.push(...a);for(let w=1+i.length;w<r.shape.length;++w)l.push([0,0]);const u=KA.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=_p(u.shape,i,o,!1),h=Fp(c.length,i.length,!1),d=Dp(u.shape,i,o,!1),p={x:u},f={shape:c},g=K$({inputs:p,backend:n,attrs:f}),m={x:g},b={perm:h},x=cN({inputs:m,backend:n,attrs:b}),y={x:x},v={shape:d},k=K$({inputs:y,backend:n,attrs:v});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),k}const fF={kernelName:Hn,backendName:"cpu",kernelFunc:pF};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gF(e,t,n,s,r,i,a){const o=t[0],l=i[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(gf(o));const e=A(n,0),t=A(r,0);return[e,[0,h],t,u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let m=0;m<o;++m){const t=e[m*h];if(t<0)throw new Error(mf(m,t));if(t>=l)throw new Error(bf(m,t,l));++f[t],d=d&&t>=p,p=t}let g=!0;for(let m=0;m<l;++m){const e=0===f[m];u[m]=e,g=g&&!e,f[m]=Math.max(f[m],1),m>0&&(f[m]+=f[m-1])}if(g&&d){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],i=A(n,t*h),d=A(r,t),p=new Array(l).fill(0);for(let n=0;n<o;++n){const t=e[n*h],r=p[t],a=(0===t?0:f[t-1])+r;p[t]++;for(let s=0;s<h;++s)i[a*h+s]=e[n*h+s];d[a]=s[n],c[n]=a}for(let e=0;e<l;++e){const t=p[e];if(0===t){const t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;d[t]=a}}return[i,[t,h],d,u,c]}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mF(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,g]=gF(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const bF={kernelName:Kn,backendName:"cpu",kernelFunc:mF};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xF(e,t,n,s,r){const i=w(s),a=t[0],o=r.length,l=[];let u=1,c=-1;for(let m=0;m<o;++m){const e=r[m];if(-1===e){if(-1!==c)throw new Error(xf(c,m));c=m,l.push(1)}else{if(e<0)throw new Error(yf(m,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error(vf());const e=Math.trunc(i/u);if(u*e!==i)throw new Error(wf(s,l));l[c]=e}const h=w(l);if(h!==i)throw new Error(kf(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*s[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const g=A(n,a*o);for(let m=0;m<a;++m){let t=0;for(let n=0;n<d;++n)t+=e[m*d+n]*p[n];for(let e=0;e<o;++e)g[m*o+e]=Math.trunc(t/f[e]),t%=f[e]}return[g,[a,o],l]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yF(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:i}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,c,h]=xF(o,s.shape,s.dtype,a,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const vF={kernelName:Xn,backendName:"cpu",kernelFunc:yF};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wF(e,t,n,s,r,i=!1,a=0){const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0,h=c;if(h<0)throw new Error(If());const d=t.slice();d[0]=h;const p=d.reduce(((e,t)=>e*t),1),f=A(n,p);if(0===o)return h>0&&f.fill(a),[f,d];if(h<=0)throw new Error(If());let g=0,m=1,b=0,x=r[g];while(1){let t=0;if(m<o){if(t=r[m],x===t){++m;continue}if(x>=t)throw new Error(Sf())}if(x<0||x>=h)throw new Error(Cf(x,h));x>b&&f.fill(a,b*u,x*u);for(let n=g;n<m;++n){const t=s[n];if(t<0||t>=l[0])throw new Error($f(n,s[n],l[0]));for(let n=0;n<u;n++)f[x*u+n]+=e[t*u+n]}if(i)for(let e=0;e<u;e++)f[x*u+e]/=m-g;if(g=m,++m,b=x+1,x=t,m>o)break}return b<h&&f.fill(a,b*u,h*u),[f,d]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kF(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,c]=wF(a,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const IF={kernelName:Jn,backendName:"cpu",kernelFunc:kF};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SF(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,c]=wF(a,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}const CF={kernelName:Yn,backendName:"cpu",kernelFunc:SF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $F(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:i,defaultValue:a}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Bp(i,r,o),p=!1,f=n.bufferSync(r);let g;switch(i.dtype){case"bool":{const e=n.bufferSync(i),t=Boolean(n.data.get(a.dataId).values[0]);g=V_(f,e,o,d,c,u,l,h,t,p);break}case"float32":{const e=n.bufferSync(i),t=n.data.get(a.dataId).values[0];g=V_(f,e,o,d,c,u,l,h,t,p);break}case"int32":{const e=n.bufferSync(i),t=n.data.get(a.dataId).values[0];g=V_(f,e,o,d,c,u,l,h,t,p);break}case"string":{const e=n.bufferSync(i),t=nr(n.data.get(a.dataId).values[0]);g=V_(f,e,o,d,c,u,l,h,t,p);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,g.dtype,g.values)}const NF={kernelName:Zn,backendName:"cpu",kernelFunc:$F};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:i,axis:a}=s,o=T(a,r.shape)[0],l=ff(r,i,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=jN({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}const EF={kernelName:jn,backendName:"cpu",kernelFunc:TF},RF=E$((e=>Math.sqrt(e))),AF=p$(Vn,(e=>Math.sqrt(e))),_F={kernelName:Vn,backendName:"cpu",kernelFunc:AF},FF={kernelName:es,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;c$(n,"square");const r=s.data.get(n.dataId).values,i=new Float32Array(r.length);for(let o=0;o<r.length;++o){const e=r[o];i[o]=e*e}const a=s.write(i,n.shape,n.dtype);return{dataId:a,shape:n.shape,dtype:n.dtype}}},DF=w$(((e,t)=>{const n=e-t;return n*n})),OF=U$(Qn,DF),LF={kernelName:Qn,backendName:"cpu",kernelFunc:OF},MF=p$(ms,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),zF={kernelName:ms,backendName:"cpu",kernelFunc:MF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PF(e,t,n,s){const r=ca(e,t.dtype);for(let i=0;i<r.size;i++){const e=r.indexToLoc(i),a=new Array(e.length);for(let t=0;t<a.length;t++)a[t]=e[t]*n[t]+s[t];r.set(t.get(...a),...e)}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;c$(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:y,end:v,strides:w}=Xo(r.shape,i,a,o,l,u,c,h,d);let k;if(g)k=K$({inputs:{x:r},backend:n,attrs:{shape:f}});else if(m||b){x(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Lo(y,v,w),t=jN({inputs:{x:r},backend:n,attrs:{begin:y,size:e}});k=K$({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(r),t=PF(p,e,w,y);k=n.makeTensorInfo(f,t.dtype,t.values)}return k}const WF={kernelName:ts,backendName:"cpu",kernelFunc:BF};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class UF{constructor(e,t,n,s,r,i){this.separator=tr(e),this.nGramWidths=t,this.leftPad=tr(n),this.rightPad=tr(s),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,i){for(let a=0;a<r;++a){const o=this.getPadWidth(i),l=Math.max(0,o-a),u=Math.max(0,o-(r-(a+1))),c=i-(l+u),h=t+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length;const p=l+u+c-1;d+=p*this.separator.length,n[s+a]=new Uint8Array(d);const f=n[s+a];let g=0;const m=e=>e.forEach((e=>f[g++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,i=A("int32",s);if(0===n||0===s){const e=new Array(n);for(let t=0;t<=r;++t)i[t]=0;return[e,i]}i[0]=0;for(let o=1;o<=r;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),i[o]=i[o-1]+n}const a=new Array(i[r]);for(let o=0;o<r;++o){const n=t[o];let s=i[o];if(this.nGramWidths.forEach((r=>{const i=t[o+1]-t[o],l=this.getNumNGrams(i,r);this.createNGrams(e,n,a,s,l,r),s+=l})),this.preserveShort&&s===i[o]){const r=t[o+1]-t[o];if(0===r)continue;const i=r+2*this.padWidth,l=1;this.createNGrams(e,n,a,s,l,i)}}return[a,i]}}function VF(e,t,n,s,r,i,a,o){return new UF(n,s,r,i,a,o).compute(e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GF(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,g]=VF(d,p,r,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}const HF={kernelName:ns,backendName:"cpu",kernelFunc:GF};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jF(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let i=e.indexOf(r);while(-1!==i){const t=e.subarray(0,i);n&&0===t.length||s.push(t),e=e.subarray(i+1),i=e.indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(r,i);n&&0===t.length||s.push(t),r=i+1}}function qF(e,t,n){const s=e.length,r=[];let i=0,a=0;const o=new Array(s);for(let d=0;d<s;++d){const s=r.length;jF(e[d],t,n,r);const l=r.length-s;o[d]=l,i+=l,a=Math.max(a,l)}const l=A("int32",2*i),u=new Array(i),c=[s,a];let h=0;for(let d=0;d<s;++d)for(let e=0;e<o[d];++e)l[2*h]=d,l[2*h+1]=e,u[h]=r[h],++h;return[l,u,c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KF(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=qF(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const XF={kernelName:ss,backendName:"cpu",kernelFunc:KF};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JF(e,t){const n=A("int32",e.length);for(let s=0;s<e.length;++s)n[s]=Js(e[s]).modulo(t).getLowBitsUnsigned();return n}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YF(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=n.data.get(i.dataId).values,o=JF(a,r);return n.makeTensorInfo(i.shape,"int32",o)}const ZF={kernelName:rs,backendName:"cpu",kernelFunc:YF},QF=p$(as,(e=>Math.tan(e))),eD={kernelName:as,backendName:"cpu",kernelFunc:QF},tD=p$(os,(e=>Math.tanh(e))),nD={kernelName:os,backendName:"cpu",kernelFunc:tD};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sD(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const s=ca(n,e.dtype);for(let r=0;r<s.values.length;++r){const t=s.indexToLoc(r),n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=t[s]%e.shape[s];const i=e.locToIndex(n);s.values[r]=e.values[i]}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rD(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:i}=s;c$(r,"tile");const a=sD(n.bufferSync(r),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const iD={kernelName:ls,backendName:"cpu",kernelFunc:rD},aD=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function oD(e,t,n=0,s=e.length-1){while(s>n){if(s-n>600){const r=s-n+1,i=t-n+1,a=Math.log(r),o=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*o*(r-o)/r)*Math.sign(i-r/2),u=Math.max(n,Math.floor(t-i*o/r+l)),c=Math.min(s,Math.floor(t+(r-i)*o/r+l));oD(e,t,u,c)}const r=e[t];let i=n,a=s;m(e,n,t),aD(e[s],r)>0&&m(e,n,s);while(i<a){m(e,i,a),i++,a--;while(aD(e[i],r)<0)i+=1;while(aD(e[a],r)>0)a-=1}0===aD(e[n],r)?m(e,n,a):(a+=1,m(e,a,s)),a<=t&&(n=a+1),t<=a&&(s=a-1)}}function lD(e,t,n,s,r){const i=t[t.length-1],[a,o]=[e.length/i,i],l=R(n,a*s),u=R("int32",a*s);for(let h=0;h<a;h++){const t=h*o,n=e.subarray(t,t+o);let i=new Array(n.length);n.forEach(((e,t)=>i[t]={value:e,index:t})),s<i.length&&(oD(i,s),i=i.slice(0,s)),r&&i.sort(aD);const a=h*s,c=l.subarray(a,a+s),d=u.subarray(a,a+s);for(let e=0;e<s;e++)c[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=s,[ca(c,n,l),ca(c,"int32",u)]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uD(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:i,sorted:a}=s;c$(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=lD(o,r.shape,r.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}const cD={kernelName:us,backendName:"cpu",kernelFunc:uD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hD(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],b=V(r.shape),x=b[0],y=b[1],v=b[2],k=V(m),I=k[0],S=k[1],C=k[2],$=R(r.dtype,w(m));$.fill(l);const N=s.data.get(r.dataId).values,T=s.data.get(i.dataId).values;for(let w=0;w<c;++w){const e=1===i.shape[0]?T:T.subarray(8*w,8*w+8);for(let t=0;t<f;++t)for(let n=0;n<g;++n)for(let s=0;s<p;++s){let r;const i=e[6]*n+e[7]*t+1;if(0===i)continue;const u=(e[0]*n+e[1]*t+e[2])/i,c=(e[3]*n+e[4]*t+e[5])/i,p=pD(u,d,o),f=pD(c,h,o);switch(a){case"nearest":r=yD(N,h,d,x,y,v,w,f,p,s,l);break;case"bilinear":r=vD(N,h,d,x,y,v,w,f,p,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const g=w*I+t*S+n*C+s;$[g]=r}return s.makeTensorInfo(m,r.dtype,$)}const E=s.write($,m,r.dtype);return{dataId:E,shape:r.shape,dtype:r.dtype}}const dD={kernelName:cs,backendName:"cpu",kernelFunc:hD};function pD(e,t,n){switch(n){case"reflect":return fD(e,t);case"wrap":return gD(e,t);case"nearest":return bD(e,t);case"constant":default:return mD(e,t)}}function fD(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return f(0,n,t-1)}function gD(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return f(0,n,t-1)}function mD(e,t){return e}function bD(e,t){return f(0,e,t-1)}function xD(e,t,n,s,r,i,a,o,l,u,c){const h=a*s+o*r+l*i+u;return 0<=o&&o<t&&0<=l&&l<n?e[h]:c}function yD(e,t,n,s,r,i,a,o,l,u,c){const h=Math.round(o),d=Math.round(l);return xD(e,t,n,s,r,i,a,h,d,u,c)}function vD(e,t,n,s,r,i,a,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1,g=(f-l)*xD(e,t,n,s,r,i,a,h,d,u,c)+(l-d)*xD(e,t,n,s,r,i,a,h,f,u,c),m=(f-l)*xD(e,t,n,s,r,i,a,p,d,u,c)+(l-d)*xD(e,t,n,s,r,i,a,p,f,u,c);return(p-o)*g+(o-h)*m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wD(e,t,n,s){const r=T(t,n)[0],i=[1,n[0],1];for(let f=0;f<r;f++)i[0]*=n[f];i[1]=n[r];for(let f=r+1;f<n.length;f++)i[2]*=n[f];const a={},o=new Int32Array(n[r]),l=new yr(i,s,e),u=[],c=1===i[0]&&1===i[2];for(let f=0;f<n[r];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(l.get(t,f,n));t=e.join(",")}if(void 0!==a[t])o[f]=a[t];else{const e=Object.keys(a).length;a[t]=e,o[f]=e,u.push(f)}}const h=i.slice();h[1]=Object.keys(a).length;const d=new yr(h,s);u.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)d.set(l.get(n,e,s),n,t,s)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kD(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:i}=t;c$(i,"unique");const a=s.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=wD(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const ID={kernelName:ds,backendName:"cpu",kernelFunc:kD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SD(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r.shape.length,o=r.shape[i],l=new Array(a-1);let u=0;for(let p=0;p<a;p++)p!==i&&(l[u++]=r.shape[p]);const c=new Array(a).fill(0),h=r.shape.slice();h[i]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[i]=p;const e=jN({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[p]=K$({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}const CD={kernelName:ps,backendName:"cpu",kernelFunc:SD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $D(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:i}=t,{numSegments:a}=s;c$(r,"unsortedSegmentSum");const o=r.shape.length,l=i.shape.length,u=[],c=[],h=o-l;let d=i;for(let f=0;f<h;++f){const e=wE({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=e,c.push(e)}for(let f=0;f<a;++f){const e=Ys(f,"int32"),t=n.makeTensorInfo([],"int32",e),s=lE({inputs:{a:t,b:d},backend:n}),i=B$({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),a=QT({inputs:{a:i,b:r},backend:n}),o=tE({inputs:{x:a},backend:n,attrs:{axis:0,keepDims:!1}});u.push(o),c.push(t),c.push(s),c.push(i),c.push(a),c.push(o)}const p=HA({inputs:u,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const ND={kernelName:fs,backendName:"cpu",kernelFunc:$D},TD=[Q$,nN,rN,aN,q$,lN,pN,gN,bN,yN,wN,IN,CN,TN,RN,LN,zN,BN,UN,Y$,GN,XN,QN,tT,W$,rT,aT,O$,lT,pT,gT,bT,yT,wT,IT,CT,NT,ET,AT,FT,OT,MT,PT,WT,VT,HT,qT,KT,XT,JT,rE,m$,aE,uE,bE,vE,kE,CE,PE,WE,VE,jE,XE,YE,QE,nR,iR,lR,hR,x$,pR,hT,gR,bR,yR,v$,kR,CR,TR,AR,FR,LR,zR,WR,VR,HR,KR,YR,QR,tA,sA,iA,oA,uA,hA,fA,mA,yA,IA,eE,$A,EA,_A,OA,zA,BA,GA,jA,KA,YA,S$,e_,c_,f_,w_,S_,z$,TE,$_,$$,T$,X$,T_,R_,__,D_,L_,M_,P_,U_,H_,J_,Z_,nF,_$,rF,aF,lF,qN,wA,dF,fF,bF,vF,IF,CF,NF,EF,_F,FF,LF,zF,WF,HF,XF,ZF,_E,nE,eD,nD,iD,cD,dD,hN,ID,CD,ND,UA];for(const tX of TD)Es(tX);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ED={},RD={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function AD(e,t){ED[e]=t}function _D(e,t){if(!(e in ED)||null!=t){const n=DD(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;ED[e]=n}const n=ED[e];return null==n||n.isContextLost()?(delete ED[e],_D(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ED[e])}function FD(e){if("undefined"!==typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function DD(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?FD(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete ED[e]}),!1),ie().getBool("SOFTWARE_WEBGL_ENABLED")&&(RD.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",RD)||n.getContext("experimental-webgl",RD):n.getContext("webgl2",RD)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var OD,LD,MD;function zD(e,t){return[t,e]}function PD(e,t){return e*t}function BD(e){const t=w(e),n=Math.ceil(t/4);return S(n)}function WD(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function UD(e,t){const[n,s]=WD(e,t);return n*s*4}function VD(e,t){const n=e;let s,r,i,a,o,l,u,c,h,d;return 2===ie().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,i=e.RGBA,a=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GD(e,t){const n=t();return ie().getBool("DEBUG")&&HD(e),n}function HD(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+XD(e,t))}(function(e){e[e["DENSE"]=0]="DENSE",e[e["SHARED_BATCH"]=1]="SHARED_BATCH"})(OD||(OD={})),function(e){e[e["RENDER"]=0]="RENDER",e[e["UPLOAD"]=1]="UPLOAD",e[e["PIXELS"]=2]="PIXELS",e[e["DOWNLOAD"]=3]="DOWNLOAD"}(LD||(LD={})),function(e){e[e["UNPACKED_FLOAT16"]=0]="UNPACKED_FLOAT16",e[e["UNPACKED_FLOAT32"]=1]="UNPACKED_FLOAT32",e[e["PACKED_4X1_UNSIGNED_BYTE"]=2]="PACKED_4X1_UNSIGNED_BYTE",e[e["PACKED_2X2_FLOAT32"]=3]="PACKED_2X2_FLOAT32",e[e["PACKED_2X2_FLOAT16"]=4]="PACKED_2X2_FLOAT16"}(MD||(MD={}));const jD=5.96e-8,qD=65504;function KD(e){return!!(ie().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||jD<Math.abs(e)&&Math.abs(e)<qD)}function XD(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function JD(e,t){return xO(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function YD(e,t){const n=xO(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(GD(e,(()=>e.shaderSource(n,t))),GD(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function ZD(e,t){const n=xO(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(GD(e,(()=>e.shaderSource(n,t))),GD(e,(()=>e.compileShader(n))),ie().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw eO(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const QD=/ERROR: [0-9]+:([0-9]+):/g;function eO(e,t){const n=QD.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),i=r.length.toString().length+2,a=r.map(((e,t)=>C((t+1).toString(),i)+e));let o=0;for(let h=0;h<a.length;h++)o=Math.max(a[h].length,o);const l=a.slice(0,s-1),u=a.slice(s-1,s),c=a.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${C(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function tO(e){return xO(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function nO(e,t){if(GD(e,(()=>e.linkProgram(t))),!ie().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function sO(e,t){if(GD(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function rO(e,t){const n=xO(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return GD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),GD(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function iO(e,t){const n=xO(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return GD(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),GD(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function aO(e){return xO(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function oO(e,t){const n=ie().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function lO(e){return xO(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function uO(e,t,n,s,r,i,a){const o=e.getAttribLocation(t,n);return-1!==o&&(GD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),GD(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,i,a))),GD(e,(()=>e.enableVertexAttribArray(o))),!0)}function cO(e,t,n){yO(e,n),GD(e,(()=>e.activeTexture(e.TEXTURE0+n))),GD(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function hO(e,t,n){return xO(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function dO(e,t,n){return e.getUniformLocation(t,n)}function pO(e,t,n,s){GD(e,(()=>cO(e,t,s))),GD(e,(()=>e.uniform1i(n,s)))}function fO(e,t,n){GD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),GD(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function gO(e,t){GD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),GD(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function mO(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+bO(e,t))}function bO(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function xO(e,t,n){const s=GD(e,(()=>t()));if(null==s)throw new Error(n);return s}function yO(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){const e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${e}.`)}}function vO(e,t=2){return w(e.slice(0,e.length-t))}function wO(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function kO(e){let t=[1,1,1];const n=0===e.length||1===e.length&&1===e[0];return n||(t=[vO(e),...wO(e)]),t}function IO(e,t=!1){let n=ie().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=ie().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&ie().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,e=e.map(((t,n)=>n>=e.length-2?g(e[n]):e[n])),1===e.length&&(e=[2,e[0]])),2!==e.length){const t=E(e);e=t.newShape}let r=w(e),i=null;e.length<=1&&r<=n?i=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const a=null!=i&&Math.max(...i)>s&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||a)if(t){const t=vO(e);let n=2,s=2;e.length&&([n,s]=wO(e)),r=t*(n/2)*(s/2),i=S(r).map((e=>2*e))}else i=S(r);return i}function SO(e){return e%2===0}function CO(e,t){if(e=e.slice(-2),t=t.slice(-2),k(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s)return!0;if(SO(n)&&SO(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&SO(e[0])&&SO(t[0])}let $O,NO;function TO(e){if(null==$O){const t=_D(e);$O=t.getParameter(t.MAX_TEXTURE_SIZE)}return $O}function EO(e){if(null==NO){const t=_D(e);NO=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,NO)}function RO(e){if(0===e)return 0;let t;const n=_D(e);return t=AO(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:AO(n,"EXT_disjoint_timer_query")?1:0,t}function AO(e,t){const n=e.getExtension(t);return null!=n}function _O(e){try{const t=_D(e);if(null!=t)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function FO(e){if(0===e)return!1;const t=_D(e);if(1===e){if(!AO(t,"OES_texture_float"))return!1}else if(!AO(t,"EXT_color_buffer_float"))return!1;const n=OO(t);return n}function DO(e){if(0===e)return!1;const t=_D(e);if(1!==e){if(AO(t,"EXT_color_buffer_float"))return OO(t);const e="EXT_color_buffer_half_float";if(AO(t,e)){const n=t.getExtension(e);return LO(t,n)}return!1}if(!AO(t,"OES_texture_float"))return!1;if(!AO(t,"WEBGL_color_buffer_float"))return!1;const n=OO(t);return n}function OO(e){const t=VD(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);const s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(i),a}function LO(e,t){const n=VD(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);const r=1,i=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,i,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(a),o}function MO(e){if(2!==e)return!1;const t=_D(e),n=null!=t.fenceSync;return n}function zO(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&x("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const PO=ie();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BO(){let e,t,n,s,r,i,a,o,l,u;return 2===ie().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",i="outputColor",a="out vec4 outputColor;",o=ie().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WO(e,t,n="index"){const s=V(t);return s.map(((t,r)=>{const i=`int ${e[r]} = ${n} / ${t}`,a=r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`;return`${i}; ${a};`})).join("")}function UO(e,t,n="index"){const s=V(t);return s.map(((t,r)=>{const i=`int ${e[r]} = ${n} / outShapeStrides[${r}]`,a=r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`;return`${i}; ${a};`})).join("")}function VO(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let i=n-3;i>=0;--i)r[i]=`(${r[i+1]} * ${s[i+1]})`;return r}function GO(e,t,n="index"){const s=e.map(((e,t)=>t)),r=VO(s,t);return r.map(((t,s)=>{const i=`int ${e[s]} = ${n} / ${r[s]}`,a=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`;return`${i}; ${a};`})).join("")}function HO(e){const t=V(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function jO(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}PO.registerFlag("HAS_WEBGL",(()=>PO.getNumber("WEBGL_VERSION")>0)),PO.registerFlag("WEBGL_VERSION",(()=>_O(2)?2:_O(1)?1:0)),PO.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),PO.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===PO.get("WEBGL_VERSION"))),PO.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),PO.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),PO.registerFlag("WEBGL_PACK",(()=>PO.getBool("HAS_WEBGL"))),PO.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>PO.getBool("WEBGL_PACK"))),PO.registerFlag("WEBGL_PACK_CLIP",(()=>PO.getBool("WEBGL_PACK"))),PO.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>PO.getBool("WEBGL_PACK"))),PO.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>PO.getBool("WEBGL_PACK"))),PO.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>PO.getBool("WEBGL_PACK"))),PO.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>PO.getBool("WEBGL_PACK"))),PO.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>PO.getBool("WEBGL_PACK"))),PO.registerFlag("WEBGL_PACK_REDUCE",(()=>PO.getBool("WEBGL_PACK"))),PO.registerFlag("WEBGL_LAZILY_UNPACK",(()=>PO.getBool("WEBGL_PACK"))),PO.registerFlag("WEBGL_CONV_IM2COL",(()=>PO.getBool("WEBGL_PACK"))),PO.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>TO(PO.getNumber("WEBGL_VERSION")))),PO.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>EO(PO.getNumber("WEBGL_VERSION")))),PO.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=PO.getNumber("WEBGL_VERSION");return 0===e?0:RO(e)})),PO.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>PO.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Yr())),PO.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>FO(PO.getNumber("WEBGL_VERSION")))),PO.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!PO.getBool("WEBGL_FORCE_F16_TEXTURES")&&PO.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),PO.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>DO(PO.getNumber("WEBGL_VERSION")))),PO.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>MO(PO.getNumber("WEBGL_VERSION")))),PO.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>{const e=PO.getBool("WEBGL_RENDER_FLOAT32_ENABLED");return e?4:0})),PO.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),PO.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Yr()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),PO.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),PO.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),PO.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),PO.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),PO.registerFlag("WEBGL_EXP_CONV",(()=>!1)),PO.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>PO.getBool("IS_TEST"))),PO.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),PO.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),PO.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),PO.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const qO="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:KO}=i;function XO(e,t,n){const s=[];if(e.forEach((e=>{const t=w(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=ML(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),i=e.map((e=>ZO(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),a=t.texShape,o=BO(),l=tL(o);let u,c,h=rL(o);t.isPacked?(u=QO(t.logicalShape,a,n.enableShapeUniforms),c=sL(o)):(u=eL(t.logicalShape,a,n.enableShapeUniforms),c=nL(o)),n.packedInputs&&(h+=lL);const d=[h,l,c,r,u,i,n.userCode].join("\n");return d}function JO(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return kL(e,t);case 1:return SL(e,t);case 2:return $L(e,t);case 3:return TL(e,t);case 4:return RL(e,t);case 5:return AL(e);case 6:return _L(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function YO(e,t){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return wL(e);case 1:return IL(e,t);case 2:return CL(e,t);case 3:return NL(e,t);default:return EL(e,t)}}function ZO(e,t,n=!1,s){let r="";r+=n?YO(e,s):JO(e,s);const i=e.shapeInfo.logicalShape,a=t.logicalShape;return i.length<=a.length&&(r+=n?DL(e,t):OL(e,t)),r}function QO(e,t,n){switch(e.length){case 0:return uL();case 1:return cL(e,t,n);case 2:return xL(e,t,n);case 3:return dL(e,t,n);default:return fL(e,t,n)}}function eL(e,t,n){switch(e.length){case 0:return uL();case 1:return hL(e,t,n);case 2:return yL(e,t,n);case 3:return pL(e,t,n);case 4:return gL(e,t,n);case 5:return mL(e,t);case 6:return bL(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function tL(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function nL(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function sL(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function rL(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${iL}\n    ${aL}\n    ${oL}\n  `;return t}const iL="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",aL="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",oL="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",lL="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function uL(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function cL(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}function hL(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function dL(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),i=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function pL(e,t,n){if(n){const t=UO(["r","c","d"],e);return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${t}\n    return ivec3(r, c, d);\n  }\n`}const s=WO(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}function fL(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),i=r*Math.ceil(e[e.length-2]/2);let a=i,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)a*=e[e.length-u-1],o=`\n      int b${u} = index / ${a};\n      index -= b${u} * ${a};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}function gL(e,t,n){if(n){const t=UO(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${t}\n      return ivec4(r, c, d, d2);\n    }\n  `}const s=WO(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}function mL(e,t){const n=WO(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function bL(e,t){const n=WO(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function xL(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(k(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function yL(e,t,n){return k(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function vL(e){return`offset${e}`}function wL(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=BO();return`\n    vec4 ${n}() {\n      return ${s.texture2D}(${t}, halfCR);\n    }\n  `}function kL(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,i]=e.shapeInfo.texShape;if(1===r&&1===i)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=vL(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}function IL(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,i=BO();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}function SL(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${FL(e)}\n      }\n    `;const r=e.shapeInfo.texShape,i=r[0],a=r[1];if(1===a&&1===i)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=vL(n);return 1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function CL(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,a=i[0],o=i[1],l=BO();if(null!=i&&k(n,i))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}function $L(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape;if(null!=i&&k(n,i)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=i[0],n=i[1];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=E(n),l=a;if(l.length<n.length){const n=zL(e,l),s=["row","col"];return`\n      ${JO(n,t)}\n      float ${r}(int row, int col) {\n        return ${r}(${PL(s,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${FL(e)}\n      }\n    `;const u=i[0],c=i[1],h=vL(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}function NL(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const s=n.slice(1),i=[1,2],a=zL(e,s),o=["b","row","col"];return`\n        ${YO(a,t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${PL(o,i)});\n        }\n      `}const o=BO();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=a[0],u=a[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}function TL(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=E(n),u=o;if(u.length<n.length){const n=zL(e,u),s=["row","col","depth"];return`\n        ${JO(n,t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${PL(s,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${a}, 1)));\n        ${FL(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===a&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=vL(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}function EL(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=BO();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,a=i.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(i[a-1]/2);let d=h*Math.ceil(i[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<a-1;g++)p=`int b${g}, `+p,d*=i[a-g-1],f=`b${g} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}function RL(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[3],a=n[2]*i,o=n[1]*a,{newShape:l,keptDims:u}=E(n);if(l.length<n.length){const n=zL(e,l),s=["row","col","depth","depth2"];return`\n      ${JO(n,t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${PL(s,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${i}, 1)));\n        ${FL(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,m=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===i&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const b=vL(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `}function AL(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],i=t[3]*r,a=t[2]*i,o=t[1]*a,{newShape:l,keptDims:u}=E(t);if(l.length<t.length){const t=zL(e,l),n=["row","col","depth","depth2","depth3"];return`\n      ${JO(t)}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${PL(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${r})) +\n          depth3;\n        ${FL(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=vL(n);return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${r} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function _L(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:i}=E(t);if(r.length<t.length){const t=zL(e,r),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${JO(t)}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${PL(n,i)});\n      }\n    `}const a=t[5],o=t[4]*a,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${FL(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=vL(n);return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function FL(e){const t=e.name,n=w(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function DL(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,a=t.logicalShape.length,o=KO(e.shapeInfo.logicalShape,t.logicalShape),l=LL(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=w(e.shapeInfo.logicalShape),g=1===f,m=w(t.logicalShape),b=1===m;if(1!==i||g||b){if(g&&!b)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}function OL(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=t.texShape,a=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&k(a,i))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=LL(l),c=KO(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}function LL(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ML(e,t,n){const{newShape:s,keptDims:r}=E(t),i=t.length,a=e&&3===i&&1===t[0],o=a?t.slice(1):s,l=!e&&i>1&&!k(t,n)&&s.length<i||a,u=l?o:t;return{useSqueezeShape:l,uniformShape:u,keptDims:r}}function zL(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function PL(e,t){return t.map((t=>e[t])).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BL(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),i=r.map((e=>e.shapeInfo)),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=XO(r,a,t),l=ZD(e.gl,o),u=e.createProgram(l);return ie().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a},WL(e,t,u))}function WL(e,t,n){const s={},r={},i={},a=[];let o,l,u,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===ie().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let p=0;p<t.variableNames.length;p++){const a=t.variableNames[p];s[a]=e.getUniformLocation(n,a,d),s[`offset${a}`]=e.getUniformLocation(n,`offset${a}`,d),t.enableShapeUniforms&&(r[`${a}Shape`]=e.getUniformLocation(n,`${a}Shape`,d),i[`${a}TexShape`]=e.getUniformLocation(n,`${a}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),u=e.getUniformLocation(n,"outShapeStrides",d),l=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,s)=>{a[s]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:s,customUniformLocations:a,infLoc:c,nanLoc:h,inShapesLocations:r,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function UL(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],i=r.shape;if(!k(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&r.isUniform)return;const a=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!k(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}function VL(e,t,n,s,r){t.program.enableShapeUniforms||(UL(t.inShapeInfos,n),UL([t.outShapeInfo],[s]));const i=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):e.setOutputMatrixTexture(i.texture,a[0],a[1]),e.setProgram(t.webGLProgram),1===ie().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const r=t.program.variableNames[s],i=t.uniformLocations[r],a=t.uniformLocations[`offset${r}`],o=t.inShapesLocations[`${r}Shape`],l=t.inTexShapesLocations[`${r}TexShape`];if(o){const{uniformShape:s}=ML(t.program.packedInputs,n.shape,n.texData.texShape);switch(s.length){case 1:e.gl.uniform1iv(o,new Int32Array(s));break;case 2:e.gl.uniform2iv(o,new Int32Array(s));break;case 3:e.gl.uniform3iv(o,new Int32Array(s));break;case 4:e.gl.uniform4iv(o,new Int32Array(s));break;default:break}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(w(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=a&&e.gl.uniform1i(a,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,i,s)}));const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){const n=V(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,s)=>{const i=t.customUniformLocations[s],a=r[s];if("float"===n.type)e.gl.uniform1fv(i,a);else if("vec2"===n.type)e.gl.uniform2fv(i,a);else if("vec3"===n.type)e.gl.uniform3fv(i,a);else if("vec4"===n.type)e.gl.uniform4fv(i,a);else if("int"===n.type)e.gl.uniform1iv(i,a);else if("ivec2"===n.type)e.gl.uniform2iv(i,a);else if("ivec3"===n.type)e.gl.uniform3iv(i,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(i,a)}})),e.executeProgram()}function GL(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:l}=ML(e.packedInputs,t.shape,i);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=V(o);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&k(t.shape,i),f=1===w(t.shape),g=no(t.shape,n.shape),m=!e.packedInputs&&d===n.shape.length&&k(i,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;s+=`${d}_${m}_${a?l:""}_${o.length}_${f}_${g}_${p}_${u}_${c}_${h}_${b}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let i=e.constructor.name;return i+="_"+s+"_"+r+`${ie().getNumber("WEBGL_VERSION")}`,i}function HL(e){return ie().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jL{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=OD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=BO();this.outputShape=e,this.enableShapeUniforms=HL(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?UO(["r","c","d"],e):WO(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class qL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=OD.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=BO();this.outputShape=e,this.enableShapeUniforms=HL(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?UO(["r","c","d"],e):WO(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class KL{constructor(e){this.variableNames=["A"],this.outTexUsage=LD.DOWNLOAD;const t=BO();this.outputShape=e,this.userCode=`\n      ${qO}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class XL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=LD.DOWNLOAD;const t=BO();this.outputShape=e,this.userCode=`\n      ${qO}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const JL={R:0,G:1,B:2,A:3};class YL{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=BO();this.outputShape=e,this.enableShapeUniforms=HL(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let i="";for(let a=0;a<n.length;a++){const e=n[a];i+=`\n          if(offset == ${a}) {\n            result = values[${JL[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?jO():HO(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${s.texture2D}(A, uv);\n          ${i}\n        }\n        ${s.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZL{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=BO();this.outputShape=e,this.enableShapeUniforms=HL(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let t=0;t<=1;t++){const r=2*i+t;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${i};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${r}] = values[0];\n            } else if (offset == 1) {\n              result[${r}] = values[1];\n            } else if (offset == 2) {\n              result[${r}] = values[2];\n            } else {\n              result[${r}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?jO():HO(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QL(e){const t=BO(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return YD(e,n)}function eM(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return rO(e,t)}function tM(e){const t=new Uint16Array([0,1,2,2,1,3]);return iO(e,t)}function nM(e,t,n,s,r,i){oO(t,n);const a=aO(e),o=e.TEXTURE_2D;return GD(e,(()=>e.bindTexture(o,a))),GD(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),GD(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),GD(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),GD(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===ie().getNumber("WEBGL_VERSION")?GD(e,(()=>e.texImage2D(o,0,s,t,n,0,r,i,null))):GD(e,(()=>e.texStorage2D(o,1,s,t,n))),GD(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:a,texShape:[n,t]}}function sM(e){return e.internalFormatFloat}function rM(e,t,n,s){const[r,i]=zD(t,n);return nM(e,r,i,sM(s),s.textureFormatFloat,e.FLOAT)}function iM(e){return e.internalFormatHalfFloat}function aM(e,t,n,s){const[r,i]=zD(t,n);return nM(e,r,i,iM(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function oM(e){return e.downloadTextureFormat}function lM(e,t,n,s){const[r,i]=zD(t,n);return nM(e,r,i,oM(s),e.RGBA,e.UNSIGNED_BYTE)}function uM(e){return e.internalFormatPackedFloat}function cM(e,t,n,s){const[r,i]=WD(t,n);return nM(e,r,i,uM(s),e.RGBA,e.FLOAT)}function hM(e){return e.internalFormatPackedHalfFloat}function dM(e,t,n,s){const[r,i]=WD(t,n);return nM(e,r,i,hM(s),e.RGBA,s.textureTypeHalfFloat)}function pM(e,t,n){const s=0,r=12,i=20;GD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));const a=uO(e,t,"clipSpacePos",n,3,i,s);return a&&uO(e,t,"uv",n,2,i,r)}function fM(e,t,n,s,r,i){let a,o,l;GD(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(a=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(a=new Float32Array(n*s*4),o=e.FLOAT,l=i.internalFormatPackedFloat),a.set(r),2===ie().getNumber("WEBGL_VERSION")?GD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,a))):GD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,a))),GD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function gM(e,t,n){GD(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===ie().getNumber("WEBGL_VERSION")?GD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):GD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===ie().getNumber("WEBGL_VERSION")?GD(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):GD(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),GD(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function mM(e,t,n,s){const r=e.createBuffer();GD(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const i=4,a=4,o=i*a*t*n;return GD(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ))),GD(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),GD(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}function bM(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function xM(e,t,n,s){const[r,i]=zD(t,n),a=4,o=new Uint8Array(PD(t*n,a));return GD(e,(()=>e.readPixels(0,0,r,i,s.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}function yM(e,t,n,s,r,i,a,o){const l=e,u=new Float32Array(UD(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function vM(e,t,n){const s=new Float32Array(t*n*4);return GD(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wM{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=ie().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,AD(t,e)):this.gl=_D(t),e=this.gl,2===ie().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>GD(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>GD(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>GD(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>GD(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>GD(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>GD(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>GD(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>GD(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ie().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=JD(this.gl,e),AO(this.gl,t))this.textureHalfFloatExtension=JD(this.gl,t);else if(ie().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),AO(this.gl,s))this.colorBufferHalfFloatExtension=JD(this.gl,s);else if(ie().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",AO(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!AO(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=eM(this.gl),this.indexBuffer=tM(this.gl),this.framebuffer=lO(this.gl),this.textureConfig=VD(this.gl,this.textureHalfFloatExtension)}get debug(){return ie().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;GD(e,(()=>e.finish())),GD(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),GD(e,(()=>e.deleteFramebuffer(this.framebuffer))),GD(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),GD(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),GD(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),rM(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),aM(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),lM(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),gM(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),fM(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),dM(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),cM(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(gO(this.gl,this.framebuffer),this.outputTexture=null),GD(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>xM(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,i){return yM(this.gl,e,t,n,s,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return bM(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=mM(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ie().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>vM(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=QL(t));const n=tO(t);let s;return GD(t,(()=>t.attachShader(n,this.vertexShader))),GD(t,(()=>t.attachShader(n,e))),nO(t,n),s=Object.assign(n,{vao:this.createVertexArray()}),this.bindVertexArray(s.vao),GD(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),console.assert(pM(t,s,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&sO(t,s),this.setProgram(s),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(GD(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&(this.bindVertexArray(this.program.vao),this.debug&&sO(this.gl,this.program)),GD(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?hO(this.gl,e,t):dO(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),GD(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),pO(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=WD(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&sO(this.gl,this.program),mO(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}GD(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),GD(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=JD(this.gl,2===ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await $((()=>this.disposed||this.isQueryAvailable(e,ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl,n=t.getQueryParameter(e,t.QUERY_RESULT);return n/1e6}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT);return n/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=kM(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in ie().platform&&(n=ie().platform.setTimeoutCustom.bind(ie().platform)),$((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),fO(this.gl,e,this.framebuffer),this.debug&&mO(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(fO(this.gl,this.outputTexture,this.framebuffer),this.debug&&mO(this.gl)):gO(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;fO(s,e,this.framebuffer),this.debug&&mO(s),this.outputTexture=e,GD(s,(()=>s.viewport(0,0,t,n))),GD(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),GD(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function kM(e){let t=0;for(;t<e.length;++t){const n=e[t]();if(!n)break}return t-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const{addImpl:IM,bincountImpl:SM,bincountReduceImpl:CM,castImpl:$M,ceilImpl:NM,concatImpl:TM,equalImpl:EM,expImpl:RM,expm1Impl:AM,floorImpl:_M,gatherNdImpl:FM,gatherV2Impl:DM,greaterImpl:OM,greaterEqualImpl:LM,lessImpl:MM,lessEqualImpl:zM,linSpaceImpl:PM,logImpl:BM,maxImpl:WM,maximumImpl:UM,minimumImpl:VM,multiplyImpl:GM,negImpl:HM,notEqualImpl:jM,prodImpl:qM,raggedGatherImpl:KM,raggedRangeImpl:XM,raggedTensorToTensorImpl:JM,rangeImpl:YM,rsqrtImpl:ZM,scatterImpl:QM,sigmoidImpl:ez,simpleAbsImpl:tz,sliceImpl:nz,sparseFillEmptyRowsImpl:sz,sparseReshapeImpl:rz,sparseSegmentReductionImpl:iz,sqrtImpl:az,stridedSliceImpl:oz,stringNGramsImpl:lz,stringSplitImpl:uz,stringToHashBucketFastImpl:cz,subImpl:hz,tileImpl:dz,topKImpl:pz,transposeImpl:fz,uniqueImpl:gz}=o;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mz(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function bz(e,t){return 1===t?[e]:mz(e,t)}function xz(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yz{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=HL(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=bz("rc",this.rank),t=LL(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return`getA(rc), (rc + 1 >= ${e} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class vz{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=HL(this.outputShape.length);let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2===1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}this.userCode=`\n      ${wz(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?jO():HO(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}function wz(e,t){const n=t?GO(["r","c","d"],"inputShape"):WO(["r","c","d"],e);return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kz{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=Nz(t,n),r=Tz(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=Sz(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let a;return s===MD.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===MD.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===MD.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===MD.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===MD.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=Nz(n,s),i=Tz(t,r,s);i in this.freeTextures||(this.freeTextures[i]=[]);const a=Sz(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=ie().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Iz(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Sz(e,t,n,s,r){const i=Cz(t,s);let a;if(r){const[t,n]=WD(e[0],e[1]);a=t*n}else{const[t,n]=zD(e[0],e[1]);a=t*n}const o=Iz(n,i);return a*o}function Cz(e,t){switch(e){case MD.PACKED_2X2_FLOAT32:return uM(t);case MD.PACKED_2X2_FLOAT16:return hM(t);case MD.UNPACKED_FLOAT32:return sM(t);case MD.UNPACKED_FLOAT16:return iM(t);case MD.PACKED_4X1_UNSIGNED_BYTE:return oM(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function $z(e){return ie().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?MD.PACKED_2X2_FLOAT32:MD.UNPACKED_FLOAT32:e?MD.PACKED_2X2_FLOAT16:MD.UNPACKED_FLOAT16}function Nz(e,t){if(e===LD.UPLOAD)return MD.PACKED_2X2_FLOAT32;if(e===LD.RENDER||null==e)return $z(t);if(e===LD.DOWNLOAD||e===LD.PIXELS)return MD.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Tz(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ez{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=HL(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Rz="if (isnan(x)) return x;",Az="return x;",_z="return abs(x);";const Fz="return (x >= 0.0) ? x : (exp(x) - 1.0);",Dz=Rz+"\n  return (x < 0.0) ? 0.0 : x;\n",Oz=Rz+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Lz="return x;",Mz="return 1.0 / (1.0 + exp(-1.0 * x));",zz="return x;",Pz="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",Bz="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Wz="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Uz="return 1.0 / (1.0 + exp(-1.0 * x));";class Vz{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=HL(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Gz{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=HL(this.outputShape.length);const t=e.length,n=bz("rc",t),s=LL(t),r=xz(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Hz=_f,jz=1e-7,qz=1e-4,Kz={};function Xz(e){return e in Kz||(Kz[e]={}),Kz[e]}const Jz=ie().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Yz=600;function Zz(){return null==ie().global.screen?1024:ie().global.screen.height*ie().global.screen.width*window.devicePixelRatio*Yz/1024/1024}class Qz extends h{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ie().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof wM)t=e;else{const n=_D(ie().getNumber("WEBGL_VERSION"),e);t=new wM(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=_D(ie().getNumber("WEBGL_VERSION"));t=new wM(e),this.binaryCache=Xz(ie().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new kz(this.gpgpu),this.numMBBeforeWarning=Zz(),this.texData=new c(this,xa())}nextDataId(){return Qz.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,s,r,i){const a=this.makeTensorInfo(t,n),o=this.texData.get(a.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[s,r]},o.texShape=[s,r];const l=kO(t),u=new YL(l,!1,i),c=this.runWebGLProgram(u,[a],n,[[s,r]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(a),c.dataId}write(e,t,n){if((ie().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ie().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:LD.UPLOAD,refCount:1}),s}refCount(e){if(this.texData.has(e)){const t=this.texData.get(e);return t.refCount}return 0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(ie().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:LD.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:i,shape:a,isPacked:o}=t;if(null!=i){let t;t=o?new Vz(a,Lz):new Ez(a,Lz);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=er()),"complex64"===s){const e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);c=Xp(e,t)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=er()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:i,complexTensorInfos:a,isPacked:o}=t;if(null!=r){let t;t=o?new Vz(s,Lz):new Ez(s,Lz);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(ie().getBool("DEBUG")&&!ie().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ie().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&ie().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...BD(s))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),t=e[0],n=e[1];u=Xp(t,n)}else if(null==c)u=this.getValuesFromTexture(e);else{const e=w(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;GD(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&xa().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:r,slice:i,dtype:a,isPacked:o,texture:l}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new Vz(r,Lz):new Ez(r,Lz);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:a}],a),i=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),i}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=xa().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>nr(e)));return ca(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return ca(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!KD(n)){if(ie().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=w(t);if(ie().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...BD(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),i}const i=ie().getBool("WEBGL_PACK")&&!0===s,a=i?kO(t):t,o=i?new XL(a):new KL(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=rr(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=rr(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);a["kernelMs"]=b(e),a["getExtraProfileInfo"]=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else a["kernelMs"]={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:er(),endMs:null}}endTimer(e){return ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=er(),e)}async getQueryTime(e){if(ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:i,slice:a}=this.texData.get(e),o=a&&a.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,i)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Jz){return ie().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&w(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ks("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Hz(e.shape,t)}packedUnaryOp(e,t,n){const s=new Vz(e.shape,t),r=this.compileAndRun(s,[e],n);return xa().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=tz(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ie().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,_z,e.dtype);const t=new Ez(e.shape,_z),n=this.compileAndRun(t,[e]);return xa().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&M(n[0])){const r=n.map((e=>tr(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return xa().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new Gz(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new yz(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){const n=[vO(e.shape),...wO(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[vO(t),...wO(t)],i=new vz(r,n),a=!0,o=[n],l=this.runWebGLProgram(i,[s],e.dtype,o,a);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:i}=n;if(null!=t){const e=w(r),n=t[0]*t[1]*4;x(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const a=kO(r);let o;o=s?new qL(a):new jL(a);const l=!0,u=[null!=t?t:BD(a)],c=this.runWebGLProgram(o,[{shape:a,dtype:i,dataId:e}],i,u,l,t);return{dtype:i,shape:r,dataId:c.dataId}}runWebGLProgram(e,t,n,s,r=!1,i){const a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===OD.DENSE){const t=null!=i?i:BD(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===w(a.shape))return o.values=R(a.dtype,0),a;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&w(t.shape)<=ie().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!CO(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},h=GL(e,u,c),d=this.getAndSaveBinary(h,(()=>BL(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),ie().get("ENGINE_COMPILE_ONLY")||VL(this.gpgpu,d,u,c,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const g=ie().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=er();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ie().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,s,r=!1){n=n||t[0].dtype;const i=this.runWebGLProgram(e,t,n,s,r);return i}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!ie().getBool("IS_TEST")){const e=Object.keys(this.binaryCache);e.forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=va((()=>{if(!ie().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ie().getBool("DEBUG");ie().set("DEBUG",!1);const t=this.abs(Wa(1e-8)).dataSync()[0];if(ie().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?jz:qz}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:i,usage:a,isPacked:o}=t;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=er());let c=t.texShape;if(null==c&&(c=IO(n,o),t.texShape=c),null!=r){const e=kO(n);let i,a=c[1],h=c[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&d||([a,h]=WD(c[0],c[1])),i=o?new ZL(e,d):new YL(e,d);const p=d?[h,a]:c,f=this.makeTensorInfo(p,s),g=this.texData.get(f.dataId);g.usage=d?LD.PIXELS:LD.UPLOAD,g.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,r);const m=[[h,a]],b=!0,x=this.runWebGLProgram(i,[f],s,m,b),y=this.texData.get(x.dataId);t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,ie().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=y.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=er()-u)}else{const e=this.acquireTexture(c,a,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return null!=t&&(n.values=eP(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*O(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await wp(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw eO(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=WL(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=i,e.inTexShapesLocations=a,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:s,height:r,width:i,channels:a}=e,o=xa().backend;if(!o.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(s,t,n,r,i,a);return xa().makeTensorFromDataId(l,t,n,o)}}function eP(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}Qz.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Zr()&&Ia("webgl",(()=>new Qz),2);const tP="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class nP{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ro(t,n),this.enableShapeUniforms=HL(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const sP="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class rP{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ro(t,n);const r=this.outputShape.length;this.enableShapeUniforms=HL(r);let i="";if(s)if(0===r||1===w(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=LL(r);if(i=`\n          ${e} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=bz("coords",r);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iP(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const aP={kernelName:$t,backendName:"webgl",kernelFunc:iP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oP(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,i=n.makeTensorInfo(s.shape,"complex64"),a=n.texData.get(i.dataId),o=iP({inputs:{x:s},backend:n}),l=iP({inputs:{x:r},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const lP={kernelName:ze,backendName:"webgl",kernelFunc:oP},uP="return (a < 0.) ? b * a : a;",cP="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function hP(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:i}=s,a=n.makeTensorInfo([],"float32",Ys(i,"float32")),o=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rP(cP,r.shape,a.shape):new nP(uP,r.shape,a.shape),l=n.runWebGLProgram(o,[r,a],"float32");return n.disposeIntermediateTensorInfo(a),l}const dP={kernelName:_t,backendName:"webgl",kernelFunc:hP},pP="return (a < 0.) ? b * a : a;",fP="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function gP(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,i=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rP(fP,s.shape,r.shape):new nP(pP,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],"float32")}const mP={kernelName:gn,backendName:"webgl",kernelFunc:gP},bP="if (isnan(x)) return x;";function xP({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:i})=>{const{x:a}=r,o=i,l=s||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const e=o.texData.get(a.dataId),t=n(e.values,l);return o.makeTensorInfo(a.shape,l,t)}const u=ie().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;let c;return c=u?new Vz(a.shape,t):new Ez(a.shape,e),o.runWebGLProgram(c,[a],l)}}function yP({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:s.dataId,dtype:s.dtype,shape:u.shape},a=new nP(e,l.shape,u.shape);return c.runWebGLProgram(a,[r,i],Or(n.dtype,s.dtype))})),i=oP({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),i}const h=i||Or(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Rf(e):e,s="string"===l.dtype?Rf(t):t,[i,a]=r(l.shape,u.shape,n,s,h),o=c.makeTensorInfo(a,h),d=c.texData.get(o.dataId);return d.values=i,o}const d=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;let p;return p=d?new rP(t,l.shape,u.shape,n):new nP(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function vP(e,t=!1){if("linear"===e)return t?zz:Az;if("relu"===e)return t?Bz:Dz;if("elu"===e)return t?Pz:Fz;if("relu6"===e)return t?Wz:Oz;if("prelu"===e)return t?fP:pP;if("leakyrelu"===e)return t?cP:uP;if("sigmoid"===e)return t?Uz:Mz;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wP{constructor(e,t,n,s=!1,r=!1,i=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=HL(this.outputShape.length);const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";a&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,m="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(y=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${x};\n        int batchB = ${y};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const kP={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class IP{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ro(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const SP="return a * b;";function CP(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,i=Or(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),i=new IP(kP.REAL,s.shape,r.shape),a=new IP(kP.IMAG,s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=oP({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[a,o]=GM(s.shape,r.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i),u=n.texData.get(l.dataId);return u.values=a,l}let a;return a=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rP(SP,s.shape,r.shape):new nP(SP,s.shape,r.shape),n.runWebGLProgram(a,[s,r],i)}const $P={kernelName:sn,backendName:"webgl",kernelFunc:CP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NP(e,t,n){const s=[vO(e.shape),...wO(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},i=[vO(t),...wO(t)],a=new vz(i,s),o=!0,l=[s],u=n.runWebGLProgram(a,[r],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TP(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:i}=s,a=n,o=w(r.shape),l=N(i,o),u=w(l);x(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(r.dataId);return!c.isPacked||CO(r.shape,l)||null!==c.texture&&CO(c.shape,l)?(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):NP(r,l,a)}const EP={kernelName:Sn,backendName:"webgl",kernelFunc:TP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class RP{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:i}=e;this.outputShape=[s,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${I(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class AP{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:i}=e;this.outputShape=[s,i];let a="0.0",o="";"prod"===t?a="1.0":"min"===t?(a="1.0 / 1e-20",o="min"):"max"===t&&(a="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _P(e){const t=[];while(0===t.length||1!==t[t.length-1].outSize){const n=t.length?t[t.length-1].outSize:e[1],s=Rp(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function FP(e,t,n,s){const r=_P(e.shape);let i=e;for(let a=0;a<r.length;a++){const{inSize:o,windowSize:l,outSize:u}=r[a];let c,h;c="mean"===n?0===a?new RP({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new RP({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new AP({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=i,i=s.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return i}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class DP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;const s=LL(this.rank),r=OP(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}function OP(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class LP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=LL(this.rank),r=mz("rc",this.rank),i=new Array(this.rank);for(let u=0;u<t.length;u++)i[t[u]]=r[u];const a=`vec2(${i.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MP(e,t,n){const s=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new LP(e.shape,t):new DP(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zP(e,t,n,s){const r=t,i=e.shape.length,a=T(r,e.shape);let o=a;const l=pc(o,i),u=null!=l;let c=e;u&&(c=MP(e,l,s),o=gc(o.length,i)),dc("sum",o,i);const[h,d]=cc(c.shape,o);let p=h;n&&(p=hc(h,a));const f=w(d),g=w(e.shape),m=g/f,b=TP({inputs:{x:c},attrs:{shape:[m,f]},backend:s}),x=Lr(e.dtype),y=FP(b,x,"sum",s),v=TP({inputs:{x:y},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(y),u&&s.disposeIntermediateTensorInfo(c),v}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PP(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;return zP(r,i,a,n)}const BP={kernelName:Gn,backendName:"webgl",kernelFunc:PP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WP(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:i}=s,a=n,o=r.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=r.shape[i[c]];let u;if(a.shouldExecuteOnCPU([r])){const e=a.texData.get(r.dataId),t=e.values,n=fz(t,r.shape,r.dtype,i,l);u=a.makeTensorInfo(l,r.dtype);const s=a.texData.get(u.dataId);s.values=n}else u=MP(r,i,a);return u}const UP={kernelName:hs,backendName:"webgl",kernelFunc:WP},VP=1e3;function GP({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),m=t.shape.slice(0,-2),b=w(g),y=w(m),v=ro(e.shape.slice(0,-2),t.shape.slice(0,-2)),k=v.concat([p,f]);x(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const I=n?[b,h,p]:[b,p,h],S=s?[y,f,d]:[y,d,f],C=TP({inputs:{x:e},backend:r,attrs:{shape:I}}),$=TP({inputs:{x:t},backend:r,attrs:{shape:S}}),N=[C,$],T=Math.max(b,y),E=n?C.shape[1]:C.shape[2],R=null!=i,A=null!=a,_="leakyrelu"===l,F=null!=l?vP(l,!0):null,D=R||A||_||null!=F;let O;if((1===p||1===f)&&E>VP&&!1===D){let e=C,t=$;n&&(e=WP({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),N.push(e)),s&&(t=WP({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),N.push(t));const i=1!==f,a=1===f;let o=e;i&&(o=TP({inputs:{x:e},backend:r,attrs:{shape:[T,E,1]}}),N.push(o));const l=1===f?2:1;let u=t;a&&(u=TP({inputs:{x:t},backend:r,attrs:{shape:[T,1,E]}}),N.push(u));const c=CP({inputs:{a:o,b:u},backend:r});O=PP({inputs:{x:c},backend:r,attrs:{axis:l,keepDims:!0}}),N.push(c)}else{const l=Or(e.dtype,t.dtype),u=new wP(I,S,[T,p,f],n,s,R,F,A,_),c=[C,$];if(null!=i&&c.push(i),A&&c.push(a),_){const e=r.makeTensorInfo([],"float32",Ys(o,"float32"));c.push(e),N.push(e)}O=r.runWebGLProgram(u,c,l)}const L=TP({inputs:{x:O},backend:r,attrs:{shape:k}});N.push(O);for(const x of N)r.disposeIntermediateTensorInfo(x);return L}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HP(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return GP({a:r,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}const jP={kernelName:ys,backendName:"webgl",kernelFunc:HP},qP="return abs(x);";function KP(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=tz(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=ie().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Vz(s.shape,qP):new Ez(s.shape,qP),n.runWebGLProgram(r,[s],s.dtype)}const XP={kernelName:de,backendName:"webgl",kernelFunc:KP},JP=Rz+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",YP=xP({opSnippet:JP}),ZP={kernelName:pe,backendName:"webgl",kernelFunc:YP},QP=Rz+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",eB=xP({opSnippet:QP}),tB={kernelName:fe,backendName:"webgl",kernelFunc:eB},nB="return a + b;",sB=yP({opSnippet:nB,packedOpSnippet:nB,supportsComplex:!0,cpuKernelImpl:IM}),rB={kernelName:ge,backendName:"webgl",kernelFunc:sB};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class iB{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aB{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oB(e){const{inputs:t,backend:n}=e,s=t;if(1===s.length)return iP({inputs:{x:s[0]},backend:n});if(s.length>ie().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),t=oB({inputs:s.slice(0,e),backend:n}),r=oB({inputs:s.slice(e),backend:n});return oB({inputs:[t,r],backend:n})}const r=s.map((e=>e.dtype)).reduce(((e,t)=>Or(e,t))),i=s.map((e=>e.shape)),a=ie().getBool("WEBGL_PACK"),o=a?new aB(s[0].shape,i):new iB(s[0].shape,i);return n.runWebGLProgram(o,s,r)}const lB={kernelName:me,backendName:"webgl",kernelFunc:oB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uB(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=r.shape.length,l=T(i,r.shape);let u=l;const c=pc(u,o);let h=r;null!=c&&(h=WP({inputs:{x:r},backend:n,attrs:{perm:c}}),u=gc(u.length,o)),dc("all",u,o);const[d,p]=cc(h.shape,u),f=w(p),g=TP({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),m=FP(g,g.dtype,"all",n);let b;if(a){const e=hc(d,l);b=TP({inputs:{x:m},backend:n,attrs:{shape:e}})}else b=TP({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}const cB={kernelName:be,backendName:"webgl",kernelFunc:uB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hB(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=r.shape.length,l=T(i,r.shape);let u=l;const c=pc(u,o);let h=r;null!=c&&(h=WP({inputs:{x:r},backend:n,attrs:{perm:c}}),u=gc(u.length,o)),dc("any",u,o);const[d,p]=cc(h.shape,u),f=w(p),g=TP({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),m=FP(g,g.dtype,"any",n);let b;if(a){const e=hc(d,l);b=TP({inputs:{x:m},backend:n,attrs:{shape:e}})}else b=TP({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}const dB={kernelName:xe,backendName:"webgl",kernelFunc:hB};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class pB{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const a="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fB{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,x(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],i=Math.ceil(r/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=LL(o),u=bz("coords",o);let c,h;if(1===i){h=o+1;const e=LL(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),g=bz("sourceLocR",h-1).concat("inIdx.r"),m=bz("sourceLocG",h-1).concat("inIdx.g"),b=bz("sourceLocB",h-1).concat("inIdx.b"),y=bz("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gB(e,t,n,s=null){let r=t.shape[0],i=t.shape[1];null!=s&&(r=s.shape[0],i=s.shape[1]);const a=Rp(i),o={windowSize:a,inSize:i,batchSize:r,outSize:Math.ceil(i/a)},l=new pB(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=gB(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function mB(e,t,n,s=null){const r=null!=s?s.shape:t.shape,i=r[r.length-1],a=Rp(i),o=new fB(r,a,n,null==s),l=null==s?[t]:[t,s],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){const s=mB(e,t,n,u);return e.disposeIntermediateTensorInfo(u),s}return u}function bB(e,t,n,s){const r=[n];if(dc("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!ie().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId),a=null!==i&&i.isPacked;let o=t;a&&(o=e.unpackTensor(t),n.push(o));const[l,u]=cc(o.shape,r),c=w(u),h=TP({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(h);const d=gB(e,h,s);n.push(d);const p=TP({inputs:{x:d},backend:e,attrs:{shape:l}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return mB(e,t,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xB(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;let a=T(i,r.shape);const o=pc(a,r.shape.length);let l=r;const u=[];null!=o&&(l=WP({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=gc(a.length,l.shape.length)),dc("argMax",[a[0]],l.shape.length);const c=bB(n,l,a[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const yB={kernelName:ye,backendName:"webgl",kernelFunc:xB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vB(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;let a=T(i,r.shape);const o=pc(a,r.shape.length);let l=r;const u=[];null!=o&&(l=WP({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=gc(a.length,l.shape.length)),dc("argMin",[a[0]],l.shape.length);const c=bB(n,l,a[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const wB={kernelName:ve,backendName:"webgl",kernelFunc:vB},kB=Rz+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",IB=xP({opSnippet:kB}),SB={kernelName:we,backendName:"webgl",kernelFunc:IB},CB=Rz+"return log(x + sqrt(x * x + 1.0));",$B=xP({opSnippet:CB}),NB={kernelName:ke,backendName:"webgl",kernelFunc:$B},TB=Rz+"\n  return atan(x);\n",EB=xP({opSnippet:TB}),RB={kernelName:Ie,backendName:"webgl",kernelFunc:EB},AB=tP+"\n  return atan(a, b);\n",_B="\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+sP+"\n  return result;\n",FB=yP({opSnippet:AB,packedOpSnippet:_B}),DB={kernelName:Ce,backendName:"webgl",kernelFunc:FB},OB=Rz+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",LB=xP({opSnippet:OB}),MB={kernelName:Se,backendName:"webgl",kernelFunc:LB};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zB{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const x="max";let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");const v=4*Math.floor(i/4),w=i%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${x}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class PB{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const v="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const k=4*Math.floor(i/4),I=i%4,S=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${v}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BB(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;zO(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,u=1;x(yl(a,u),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=il(r.shape,i,a,u,o,l);if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))return iP({inputs:{x:r},backend:n});const h=new zB(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}const WB={kernelName:$e,backendName:"webgl",kernelFunc:BB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UB(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],h=al(r.shape,i,a,c,o,l,u),d=new PB(h,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}const VB={kernelName:Te,backendName:"webgl",kernelFunc:UB};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class GB{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class HB{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jB(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=al(a.shape,o,l,h,u,c),p=new HB(d);return n.runWebGLProgram(p,[r],a.dtype)}const qB={kernelName:Ee,backendName:"webgl",kernelFunc:jB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KB(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,a=i;zO([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=il(a.shape,o,l,1,u),h=new GB(c);return n.runWebGLProgram(h,[r],a.dtype)}const XB={kernelName:Ne,backendName:"webgl",kernelFunc:KB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JB(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i}=t,{transposeA:a,transposeB:o}=s;return GP({a:r,b:i,transposeA:a,transposeB:o,backend:n})}const YB={kernelName:Re,backendName:"webgl",kernelFunc:JB};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZB{constructor(e,t,n,s,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],ro(e,t),ro(e,n);let a="0.0";null!=s&&(ro(e,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=r&&(ro(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class QB{constructor(e,t,n,s,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ro(e,t),ro(e,n);let a="vec4(0.0)";null!=s&&(ro(e,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(ro(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const eW=({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:i,offset:a,scale:o}=e;x(r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),x(null==a||r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),x(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,i];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const d=ie().getBool("WEBGL_PACK_NORMALIZATION")?new QB(s.shape,r.shape,i.shape,c,h,l):new ZB(s.shape,r.shape,i.shape,c,h,l),p=t.runWebGLProgram(d,u,u[0].dtype);return p},tW={kernelName:wt,backendName:"webgl",kernelFunc:eW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class nW{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=LL(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=rW(this.rank);let s;const r=e.map(((e,t)=>`sourceLoc.${sW[t]} = start[${t}] + coords.${sW[t]};`));s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${r.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const sW=["x","y","z","w","u","v"];function rW(e){if(1===e)return"sourceLoc";if(e<=6)return sW.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class iW{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=LL(this.rank),n=bz("coords",this.rank),s=bz("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${r})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${i};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aW(e,t,n,s){const r=s.texData.get(e.dataId),i=s.makeTensorInfo(n,e.dtype),a=s.texData.get(i.dataId);Object.assign(a,r),a.refCount=1,a.shape=n,a.dtype=e.dtype;let o=qo(t,V(e.shape));r.slice&&(o+=r.slice.flatOffset),a.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,l+1),i}function oW(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,size:a}=s,[o,l]=Ko(r,i,a);if(Do(r,o,l),0===w(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=nz(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=jo(r.shape,o,l);if(u||!c){const e=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iW(l):new nW(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),aW(r,o,l,n)}const lW={kernelName:Mn,backendName:"webgl",kernelFunc:oW},uW=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,crops:a}=s;x(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=_p(r.shape,i,o),u=Fp(l.length,i.length),c=Dp(r.shape,i,o),h=Op(a,i.length),d=Lp(c,a,i.length),p=[],f=TP({inputs:{x:r},backend:n,attrs:{shape:l}}),g=WP({inputs:{x:f},backend:n,attrs:{perm:u}}),m=TP({inputs:{x:g},backend:n,attrs:{shape:c}}),b=oW({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b},cW={kernelName:Ae,backendName:"webgl",kernelFunc:uW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hW(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:a}=s,o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=SM(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}const dW={kernelName:_e,backendName:"webgl",kernelFunc:hW};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pW(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,i=n.readSync(s.dataId),a=n.readSync(r.dataId),o=ro(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const fW={kernelName:De,backendName:"webgl",kernelFunc:pW},gW="return float(a != b);",mW=yP({opSnippet:gW,cpuKernelImpl:jM,dtype:"bool"}),bW={kernelName:an,backendName:"webgl",kernelFunc:mW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xW(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return iP({inputs:{x:r.complexTensorInfos.real},backend:n})}const yW={kernelName:wn,backendName:"webgl",kernelFunc:xW},vW="return float(int(x));";function wW(e,t){const n=new Ez(e.shape,vW),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kW(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:i}=s;if("complex64"===i){if("complex64"===r.dtype)return iP({inputs:{x:r},backend:n});const e=Sc(r.shape),t=kW({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=oP({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=xW({inputs:{input:r},backend:n}),t=kW({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!D(r.dtype,i)){const e=iP({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId).values,[t,s,a]=$M(e,r.shape,r.dtype,i);return n.makeTensorInfo(t,s,a)}if("int32"===i)return wW(r,n);if("bool"===i){const e=n.makeTensorInfo([],"bool",R("bool",1)),t={a:r,b:e},s=mW({inputs:t,backend:n});return n.disposeIntermediateTensorInfo(e),s}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const IW={kernelName:Oe,backendName:"webgl",kernelFunc:kW},SW="return ceil(x);",CW=xP({opSnippet:SW,packedOpSnippet:SW,cpuKernelImpl:NM}),$W={kernelName:Le,backendName:"webgl",kernelFunc:CW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class NW{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class TW{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EW(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:i,clipValueMax:a}=s;let o;o=ie().getBool("WEBGL_PACK_CLIP")?new TW(r.shape):new NW(r.shape);const l=[[i],[a]];return n.runWebGLProgram(o,[r],r.dtype,l)}const RW={kernelName:Me,backendName:"webgl",kernelFunc:EW};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class AW{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _W(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function FW(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),i=new AW(s.shape),a=[_W(s,r.complexTensorInfos.real),_W(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}const DW={kernelName:Pe,backendName:"webgl",kernelFunc:FW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class OW{constructor(e){this.outputShape=[],this.outputShape=Ip(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const e=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${e}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class LW{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ip(e,t);const n=this.outputShape,s=n.length,r=LL(s),i=bz("coords",s),a=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];const l=a[t],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){const e=o[f-1];h+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${MW(a,l,e)}),\n            vec2(${MW(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${MW(a,l,p)}),\n          vec2(${MW(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${n[s-2]} &&\n            ${i[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function MW(e,t,n){const s=e.indexOf(t),r=e.map(((e,t)=>t===s?`${e} - ${n}`:e));return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zW(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return iP({inputs:{x:r.complexTensorInfos.imag},backend:n})}const PW={kernelName:Tt,backendName:"webgl",kernelFunc:zW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BW(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>xW({inputs:{input:e},backend:n}))),r=e.map((e=>zW({inputs:{input:e},backend:n}))),i=BW(s,t,n),a=BW(r,t,n),o=oP({inputs:{real:i,imag:a},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=w(e.shape.slice(t)),r=[-1,s];return TP({inputs:{x:e},backend:n,attrs:{shape:r}})})),i=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),a=Ip(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=TM(i,a,s,o),u=Ip(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const i=e.filter((e=>w(e.shape)>0)),a=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=a?new Ez(e[0].shape,Lz):new Vz(e[0].shape,Lz);return n.runWebGLProgram(t,e,s)}const o=ie().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const e=[];for(let r=0;r<i.length;r+=o){const s=i.slice(r,r+o);e.push(BW(s,t,n))}const s=BW(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return s}if(a){const e=new LW(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,s)}const{tensors2D:l,outShape:u}=WW(i,t,n),c=new OW(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,s);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=TP({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function WW(e,t,n){const s=Ip(e.map((e=>e.shape)),t),r=e.map((e=>TP({inputs:{x:e},attrs:{shape:[-1,w(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UW(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,i=T(r,t[0].shape)[0],a=t.map((e=>e.shape));kp(a,i);const o=Ip(t.map((e=>e.shape)),i);if(0===w(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>w(e.shape)>0));return 1===l.length?iP({inputs:{x:l[0]},backend:n}):BW(l,i,n)}const VW={kernelName:Be,backendName:"webgl",kernelFunc:UW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class GW{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,x=g?3:1;let y="",v="";n&&(y=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class HW{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${i}, ${a});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jW{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=HL(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<u;g++)h+=`\n           vec4 xTexelC${2*g};\n           int xTexelC${2*g}Ready;\n           vec4 xTexelC${2*g+1};\n           int xTexelC${2*g+1}Ready;\n           vec4 xC${g};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let g=0;g<u;g++)h+=`\n           xTexelC${2*g} = vec4(0.0);\n           xTexelC${2*g}Ready = 0;\n           xTexelC${2*g+1} = vec4(0.0);\n           xTexelC${2*g+1}Ready = 0;\n           xC${g} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(c+1)/2;m++){const t=2*m;if(h+=`\n           xC = xCCorner + ${t*o};\n           `,1===a){if(t<u&&(i%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){const e=i%2===0?g(o):o;o%2===0&&i%2===1||o%2!==0&&i%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(i%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class qW{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=HL(this.outputShape.length);const{dataFormat:n}=t,s=BO(),r="channelsLast"===n,i=r?1:2,a=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KW(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function XW({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat,f=!1,g=!1;let m;const b=[];if(null!=i){const e=KW(i.shape,p);null!=e&&(i=TP({inputs:{x:i},backend:s,attrs:{shape:e}}),b.push(i))}if(null!=r){const e=KW(r.shape,p);null!=e&&(r=TP({inputs:{x:r},backend:s,attrs:{shape:e}}),b.push(r))}const y=(1===h||1===d)&&c>VP,v=!y&&u.isPacked&&p&&null!=u.texture&&l[2]%2!==0&&k(u.shape.slice(-3),l.slice(-3));if(v){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,x(CO(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const p=TP({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(p);const y=GP({a:h,b:p,backend:s,transposeA:f,transposeB:g,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),v=s.texData.get(y.dataId);x(v.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,v.shape=n.outShape,m=iP({inputs:{x:y},backend:s}),m.shape=n.outShape,b.push(y)}else{const l=n.outHeight*n.outWidth,u=TP({inputs:{x:e},backend:s,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=TP({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=GP({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:g,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a});m=TP({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),b.push(u),b.push(c),b.push(h)}for(const x of b)s.disposeIntermediateTensorInfo(x);return m}function JW({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=l*u*c,m=d*h,b=[n.batchSize,g,m],x=!0,y=!1,v=[];if(null!=i){const e=KW(i.shape,f);null!=e&&(i=TP({inputs:{x:i},backend:s,attrs:{shape:e}}),v.push(i))}if(null!=r){const e=KW(r.shape,f);null!=e&&(r=TP({inputs:{x:r},backend:s,attrs:{shape:e}}),v.push(r))}const k=TP({inputs:{x:t},backend:s,attrs:{shape:[1,g,w(t.shape)/g]}});v.push(k);const I=new qW(b,n),S=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],C=s.runWebGLProgram(I,[e],"float32",S),$=TP({inputs:{x:C},backend:s,attrs:{shape:b}});v.push(C),v.push($);const N=null!=r,T=null!=i,E="leakyrelu"===o,R=o?vP(o,!0):null,A=new wP(f?$.shape:k.shape,f?k.shape:$.shape,f?[n.batchSize,m,n.outChannels]:[n.batchSize,n.outChannels,m],x,y,N,R,T,E),_=f?[$,k]:[k,$];if(r&&_.push(r),T&&_.push(i),E){const e=s.makeTensorInfo([],"float32",Ys(a,"float32"));_.push(e),v.push(e)}const F=s.runWebGLProgram(A,_,"float32"),D=TP({inputs:{x:F},backend:s,attrs:{shape:n.outShape}});v.push(F);for(const w of v)s.disposeIntermediateTensorInfo(w);return D}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YW(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=wl(l),d=ol(r.shape,i.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&ie().getBool("WEBGL_EXP_CONV")){const e=new jW(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,i],"float32",t)}else if(ie().getBool("WEBGL_CONV_IM2COL"))p=JW({x:r,filter:i,convInfo:d,backend:n});else{const e=new GW(d);p=n.runWebGLProgram(e,[r,i],"float32")}else p=XW({x:r,filter:i,convInfo:d,backend:n});const f=TP({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}const ZW={kernelName:We,backendName:"webgl",kernelFunc:YW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class QW{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class eU{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,i="channelsLast"===e.dataFormat,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tU{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${a};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class nU{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=wl(l),d=ol(r.shape,c,a,1,o,u,!1,h),p=new QW(d);return n.runWebGLProgram(p,[r,i],"float32")}const rU={kernelName:Ue,backendName:"webgl",kernelFunc:sU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iU(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=wl(u),d=ol(a,i.shape,o,1,l,c,!1,h),p=new eU(d);return n.runWebGLProgram(p,[r,i],"float32")}const aU={kernelName:Ve,backendName:"webgl",kernelFunc:iU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l}=s,u=ll(r.shape,i.shape,a,l,o),c=new HW(u);return n.runWebGLProgram(c,[r,i],"float32")}const lU={kernelName:Ge,backendName:"webgl",kernelFunc:oU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,pad:o,filterShape:l}=s,u=ll(r.shape,l,a,1,o),c=new tU(u);return n.runWebGLProgram(c,[r,i],"float32")}const cU={kernelName:He,backendName:"webgl",kernelFunc:uU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hU(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{pad:a,strides:o,inputShape:l}=s,u=ll(l,i.shape,o,1,a),c=new nU(u);return n.runWebGLProgram(c,[r,i],"float32")}const dU={kernelName:je,backendName:"webgl",kernelFunc:hU},pU=bP+"\n  return cos(x);\n",fU=xP({opSnippet:pU}),gU={kernelName:qe,backendName:"webgl",kernelFunc:fU},mU="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",bU=xP({opSnippet:mU}),xU={kernelName:Ke,backendName:"webgl",kernelFunc:bU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yU{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===s?1:0,[p,f]=[a-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const vU=e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new yU(r.shape,i.shape,o,l,u);return n.runWebGLProgram(c,[r,i,a],"float32")},wU={kernelName:Ye,backendName:"webgl",kernelFunc:vU};var kU;(function(e){e["Prod"]="*",e["Sum"]="+"})(kU||(kU={}));class IU{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===kU.Prod?"1.0":"0.0",a=n?i:`getX(${SU(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=s?"end != "+(o-1):"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${o}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${LL(r)} coords = getOutputCoords();\n        int end = ${CU(r,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${CU(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${SU(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function SU(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function CU(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $U(e,t,n,s,r,i){const a=t.shape.length,o=pc([s],a);let l=t;null!=o&&(l=WP({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=gc(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=iP({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const t=new IU(e,l.shape,!1,i),s=[[d]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,s),n.disposeIntermediateTensorInfo(r)}if(r){const t=new IU(e,l.shape,r,i),s=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=o){const e=fc(o),t=WP({inputs:{x:h},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),t}return h}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:a,reverse:o}=s;return $U(kU.Prod,r,n,i,a,o)}const TU={kernelName:Xe,backendName:"webgl",kernelFunc:NU};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:a,reverse:o}=s;return $U(kU.Sum,r,n,i,a,o)}const RU={kernelName:Je,backendName:"webgl",kernelFunc:EU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:a,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(i.dataId),s=SM(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(i),s=CM(e,t,a,o);return n.makeTensorInfo(s.shape,i.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const _U={kernelName:Ze,backendName:"webgl",kernelFunc:AU};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class FU{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:i,dataFormat:a}=s,o=r.shape[0],l="NHWC"===a?r.shape[1]:r.shape[2],u="NHWC"===a?r.shape[2]:r.shape[3],c="NHWC"===a?r.shape[3]:r.shape[1],h=l*i,d=u*i,p=c/(i*i),f="NHWC"===a?[o,h,d,p]:[o,p,h,d],g=new FU(f,i,a);return n.runWebGLProgram(g,[r],r.dtype)}const OU={kernelName:Qe,backendName:"webgl",kernelFunc:DU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class LU{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=HL(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class MU{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=HL(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)d+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<c;g++)d+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let b=0;b<(h+1)/2;b++){const e=2*b;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<c&&(a%2===1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=a%2===0?g(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(a%2===1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),x(yl(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=ol(r.shape,i.shape,a,c,o,u,!0);let d;d=ie().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new MU(h):new LU(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,i],"float32",p)}const PU={kernelName:et,backendName:"webgl",kernelFunc:zU};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class BU{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WU{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=ol(r.shape,c,a,o,l,u,!0),d=new BU(h);return n.runWebGLProgram(d,[r,i],"float32")}const VU={kernelName:tt,backendName:"webgl",kernelFunc:UU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GU(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=ol(c,i.shape,a,o,l,u,!0),d=new WU(h);return n.runWebGLProgram(d,[r,i],"float32")}const HU={kernelName:nt,backendName:"webgl",kernelFunc:GU};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jU{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qU(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],i=w(s.shape),a=TP({inputs:{x:s},backend:n,attrs:{shape:[i]}}),o=new jU(i),l=n.runWebGLProgram(o,[a],a.dtype),u=TP({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}const KU={kernelName:st,backendName:"webgl",kernelFunc:qU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class XU{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l}=s,u=rl(r.shape,i.shape,a,o,"NHWC",l);let c;const h=new XU(u);c=n.runWebGLProgram(h,[r,i],"float32");const d=TP({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}const YU={kernelName:rt,backendName:"webgl",kernelFunc:JU};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZU(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,i=t,{allDims:a,summedDims:o,idDims:l}=lf(r,i.length);cf(a.length,l,i);const{path:u,steps:c}=hf(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let g=0;g<h;++g){for(const e of c[g]){const{permutationIndices:t,expandDims:s}=uf(p,l[e]);let r;df(t)?r=i[e]:(r=WP({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(r));const a=r.shape.slice();for(let e=0;e<s.length;++e)a.splice(s[e],0,1);k(r.shape,a)||(r=TP({inputs:{x:r},backend:n,attrs:{shape:a}}),f.push(r)),null===d?d=r:(d=CP({inputs:{a:r,b:d},backend:n}),f.push(d))}g<h-1&&(u[g]>=0&&(d=PP({inputs:{x:d},backend:n,attrs:{axis:u[g]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&n.disposeIntermediateTensorInfo(g);return d}const QU={kernelName:lt,backendName:"webgl",kernelFunc:ZU},eV="return (x >= 0.0) ? x : (exp(x) - 1.0);",tV="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",nV=xP({opSnippet:eV,packedOpSnippet:tV}),sV={kernelName:ut,backendName:"webgl",kernelFunc:nV},rV="return (b >= 1.0) ? a : a * (b + 1.0);",iV="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",aV=e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,i=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rP(iV,s.shape,r.shape):new nP(rV,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],s.dtype)},oV={kernelName:ct,backendName:"webgl",kernelFunc:aV},lV="\n  return vec4(equal(a, b));\n",uV="return float(a == b);",cV=yP({opSnippet:uV,packedOpSnippet:lV,dtype:"bool",cpuKernelImpl:EM}),hV={kernelName:dt,backendName:"webgl",kernelFunc:cV},dV=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Vp};\n  float a1 = ${Gp};\n  float a2 = ${Hp};\n  float a3 = ${jp};\n  float a4 = ${qp};\n  float a5 = ${Kp};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,pV=xP({opSnippet:dV}),fV={kernelName:ht,backendName:"webgl",kernelFunc:pV},gV=bP+"\n  return exp(x);\n",mV="\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",bV=xP({opSnippet:gV,packedOpSnippet:mV,cpuKernelImpl:RM,dtype:"float32"}),xV={kernelName:pt,backendName:"webgl",kernelFunc:bV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yV(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:i}=t,a=i.shape.length,o=i.shape.slice();let l=r;return r<0&&(x(-(a+1)<=r,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+r+1),o.splice(l,0,1),TP({inputs:{x:i},backend:s,attrs:{shape:o}})}const vV={kernelName:ft,backendName:"webgl",kernelFunc:yV},wV="return exp(x) - 1.0;",kV=xP({opSnippet:wV,packedOpSnippet:wV,cpuKernelImpl:AM}),IV={kernelName:gt,backendName:"webgl",kernelFunc:kV};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class SV{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${s}.0`:"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CV(e,t,n){const s=n.texData.get(e.dataId),r=w(e.shape),i=e.shape[e.shape.length-1],a=r/i,o=TP({inputs:{x:e},backend:n,attrs:{shape:[a,i]}}),l=o.shape,u=new SV("real",l,t),c=new SV("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=oP({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const g=TP({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),g}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $V(e){const{inputs:t,backend:n}=e,{input:s}=t;return CV(s,!1,n)}const NV={kernelName:mt,backendName:"webgl",kernelFunc:$V};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class TV{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EV(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:i}=n;if(i=i||B(r),"string"===i){const e=A(i,w(s));return e.fill(r),t.makeTensorInfo(s,i,e)}{const e=new TV(s,r),n=[[r]];return t.runWebGLProgram(e,[],i,n)}}const RV={kernelName:bt,backendName:"webgl",kernelFunc:EV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class AV{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const _V={kernelName:xt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new AV(n.shape),i=s.runWebGLProgram(r,[n],n.dtype);return i}},FV="return floor(x);",DV=xP({opSnippet:FV,packedOpSnippet:FV,cpuKernelImpl:_M}),OV={kernelName:yt,backendName:"webgl",kernelFunc:DV},LV="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",MV="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",zV=yP({opSnippet:LV,packedOpSnippet:MV,dtype:"int32"}),PV={kernelName:vt,backendName:"webgl",kernelFunc:zV};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class BV{constructor(e){this.variableNames=["A"];const t=BO(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class WV{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=BO(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const UV={kernelName:bs,backendName:"webgl",kernelFunc:HV};let VV,GV=ie().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function HV(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:i}=s,a="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,i];if(o||a){const e=ie().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=VV&&e===GV||(GV=e,VV=document.createElement("canvas").getContext("2d",{willReadFrequently:GV})),VV.canvas.width=l,VV.canvas.height=u,VV.drawImage(r,0,0,l,u),r=VV.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=LD.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=ie().getBool("WEBGL_PACK")?new WV(h):new BV(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jV(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,g=wl(c),m=ol(r.shape,i.shape,l,h,u,d,!1,g);let b;const x=[],y=null!=a,v=null!=o,w="leakyrelu"===p,k=()=>{const e=[r,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=TP({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(y&&e.push(t(a,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Ys(f,"float32"));e.push(t),x.push(t)}return e};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&ie().getBool("WEBGL_EXP_CONV")){const e=p?vP(p,!0):null,t=new jW(m,y,e,v,w),s=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],r=k();b=n.runWebGLProgram(t,r,"float32",s)}else if(ie().getBool("WEBGL_CONV_IM2COL"))b=JW({x:r,filter:i,convInfo:m,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?vP(p,!1):null,t=new GW(m,y,e,v,w),s=k();b=n.runWebGLProgram(t,s,"float32")}else b=XW({x:r,filter:i,convInfo:m,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=TP({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}const qV={kernelName:vs,backendName:"webgl",kernelFunc:jV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KV(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let g=c;null==g&&(g=[1,1]),x(yl(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const m=ol(r.shape,i.shape,l,g,u,h,!0),b=ie().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,y=d?vP(d,b):null,v=[r,i],w=null!=a,k=null!=o,I="leakyrelu"===d;if(w&&v.push(a),k&&v.push(o),I){const e=n.makeTensorInfo([],"float32",Ys(p,"float32"));v.push(e),f.push(e)}let S;S=b?new MU(m,w,y,k,I):new LU(m,w,y,k,I);const C=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],$=n.runWebGLProgram(S,v,"float32",C);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}const XV={kernelName:ws,backendName:"webgl",kernelFunc:KV};class JV{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const r=LL(n.length);let i="\n    int index;";for(let a=0;a<this.sliceDim;a++)i+=`\n          index = round(getIndices(coords[0], ${a}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};\n          flattenIndex += index * ${this.strides[a]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YV(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,i=r.shape,a=i[i.length-1],o=w(s.shape),[l,u,c,h]=Mp(s,r),d=TP({inputs:{x:r},backend:n,attrs:{shape:[u,a]}}),p=TP({inputs:{x:s},backend:n,attrs:{shape:[w(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),i=FM(e,t,s.dtype,u,a,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,i.values)}const f=new JV(a,h,[u,c],s.shape),g=n.runWebGLProgram(f,[p,d],p.dtype),m=TP({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(g),m}const ZV={kernelName:It,backendName:"webgl",kernelFunc:YV};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class QV{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=LL(this.rank),s=eG(e,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function eG(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)2===r?s.push("index"):s.push(`${n[r]}`);return s.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tG(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:i}=t,{axis:a,batchDims:o}=s,l=T(a,r.shape)[0];if(ie().get("DEBUG")){const e=n.readSync(i.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const s=e[n];x(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const u=Ef(r,i,l,o),c=w(i.shape),h=[],d=TP({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=TP({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),s=DM(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const g=new QV(d.shape,f),m=n.runWebGLProgram(g,[d,p],d.dtype);h.push(m);const b=TP({inputs:{x:m},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const nG={kernelName:kt,backendName:"webgl",kernelFunc:tG},sG="return float(a > b);",rG="\n  return vec4(greaterThan(a, b));\n",iG=yP({opSnippet:sG,packedOpSnippet:rG,cpuKernelImpl:OM,dtype:"bool"}),aG={kernelName:St,backendName:"webgl",kernelFunc:iG},oG="return float(a >= b);",lG="\n  return vec4(greaterThanEqual(a, b));\n",uG=yP({opSnippet:oG,packedOpSnippet:lG,dtype:"bool",cpuKernelImpl:LM}),cG={kernelName:Ct,backendName:"webgl",kernelFunc:uG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hG(e){const{inputs:t,backend:n}=e,{input:s}=t;return CV(s,!0,n)}const dG={kernelName:Nt,backendName:"webgl",kernelFunc:hG},pG="return float(!isnan(x) && !isinf(x));",fG=xP({opSnippet:pG,dtype:"bool"}),gG={kernelName:Et,backendName:"webgl",kernelFunc:fG},mG="return float(isinf(x));",bG=xP({opSnippet:mG,dtype:"bool"}),xG={kernelName:Rt,backendName:"webgl",kernelFunc:bG},yG="return float(isnan(x));",vG=xP({opSnippet:yG,dtype:"bool"}),wG={kernelName:At,backendName:"webgl",kernelFunc:vG},kG="return float(a < b);",IG="\n  return vec4(lessThan(a, b));\n",SG=yP({opSnippet:kG,packedOpSnippet:IG,cpuKernelImpl:MM,dtype:"bool"}),CG={kernelName:Ft,backendName:"webgl",kernelFunc:SG},$G="return float(a <= b);",NG="\n  return vec4(lessThanEqual(a, b));\n",TG=yP({opSnippet:$G,packedOpSnippet:NG,cpuKernelImpl:zM,dtype:"bool"}),EG={kernelName:Dt,backendName:"webgl",kernelFunc:TG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RG(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:i}=n,a=PM(s,r,i);return t.makeTensorInfo([a.length],"float32",a)}const AG={kernelName:Ot,backendName:"webgl",kernelFunc:RG},_G=bP+"\n  return x < 0.0 ? 0./0. : log(x);\n",FG="\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",DG=xP({opSnippet:_G,packedOpSnippet:FG,cpuKernelImpl:BM}),OG={kernelName:Lt,backendName:"webgl",kernelFunc:DG},LG=bP+"\n  return log(1.0 + x);\n",MG=xP({opSnippet:LG}),zG={kernelName:Mt,backendName:"webgl",kernelFunc:MG},PG="return float(a >= 1.0 && b >= 1.0);",BG="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",WG=yP({opSnippet:PG,packedOpSnippet:BG,dtype:"bool"}),UG={kernelName:zt,backendName:"webgl",kernelFunc:WG},VG="return float(!(x >= 1.0));",GG=xP({opSnippet:VG}),HG={kernelName:Pt,backendName:"webgl",kernelFunc:GG},jG="return float(a >= 1.0 || b >= 1.0);",qG="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",KG=yP({opSnippet:jG,packedOpSnippet:qG,dtype:"bool"}),XG={kernelName:Bt,backendName:"webgl",kernelFunc:KG};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class JG{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class YG{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ZG=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=s,u=ie().getBool("WEBGL_PACK_NORMALIZATION")?new YG(r.shape,i,a,o,l):new JG(r.shape,i,a,o,l);return n.runWebGLProgram(u,[r],r.dtype)},QG={kernelName:Ut,backendName:"webgl",kernelFunc:ZG};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class eH{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const tH=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new eH(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,i,a],r.dtype)},nH={kernelName:Vt,backendName:"webgl",kernelFunc:tH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sH(e,t,n,s){const r=w(t),i=w(e.shape),a=i/r,o=TP({inputs:{x:e},attrs:{shape:[a,r]},backend:s}),l=FP(o,e.dtype,"max",s),u=TP({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rH(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:i,keepDims:a}=s,o=r.shape.length,l=T(i,r.shape);let u=l;const c=pc(u,o),h=null!=c,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId),t=e.values,s=new Array(o);for(let n=0;n<s.length;n++)s[n]=r.shape[c[n]];const i=fz(t,r.shape,r.dtype,c,s);p=n.makeTensorInfo(s,r.dtype);const a=n.texData.get(p.dataId);a.values=i}else p=MP(r,c,n);u=gc(u.length,o)}dc("max",u,o);const[f,g]=cc(p.shape,u);let m,b=f;if(a&&(b=hc(f,l)),d){const e=n.texData.get(p.dataId),t=e.values,s=WM(t,w(g),b,r.dtype);m=n.makeTensorInfo(b,r.dtype);const i=n.texData.get(m.dataId);i.values=s}else m=sH(p,g,b,n);return h&&n.disposeIntermediateTensorInfo(p),m}const iH={kernelName:Gt,backendName:"webgl",kernelFunc:rH},aH=tP+"\n  return max(a, b);\n",oH="\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+sP+"\n  return result;\n",lH=yP({opSnippet:aH,packedOpSnippet:oH,cpuKernelImpl:UM}),uH={kernelName:Ht,backendName:"webgl",kernelFunc:lH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cH(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;zO(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,u=1;x(yl(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=il(r.shape,i,a,u,o,l);if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))return iP({inputs:{x:r},backend:n});const h=new zB(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}const hH={kernelName:jt,backendName:"webgl",kernelFunc:cH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dH(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=al(r.shape,i,a,c,o,u,l),d=new PB(h,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}const pH={kernelName:Kt,backendName:"webgl",kernelFunc:dH};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fH{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=r-1-e.padInfo.top,o=i-1-e.padInfo.left,l=r*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gH{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mH(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=al(a.shape,o,l,h,u,c),p=new PB(d,"max",!0),f=n.runWebGLProgram(p,[a],a.dtype),g=new gH(d),m=n.runWebGLProgram(g,[r,f],a.dtype);return n.disposeIntermediateTensorInfo(f),m}const bH={kernelName:Xt,backendName:"webgl",kernelFunc:mH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xH(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i,output:a}=t,o=i;zO([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=il(o.shape,l,u,1,c,h),p=!0,f=new zB(d,"max",p),g=n.runWebGLProgram(f,[o],o.dtype),m=new fH(d),b=n.runWebGLProgram(m,[r,g],o.dtype);return n.disposeIntermediateTensorInfo(g),b}const yH={kernelName:qt,backendName:"webgl",kernelFunc:xH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vH(e,t,n,s){let r=new zB(n,"max",!1);const i=s.runWebGLProgram(r,[e],"float32");r=new zB(n,"max",!0,!0,t);const a=s.runWebGLProgram(r,[e],"float32");return[i,a]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const wH={kernelName:Jt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=t,l=n;x(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];x(yl(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=il(s.shape,r,i,u,a),[h,d]=vH(s,o,c,l);return[h,d]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kH(e,t,n,s){const r=w(t),i=w(e.shape),a=i/r,o=TP({inputs:{x:e},attrs:{shape:[a,r]},backend:s}),l=FP(o,"float32","mean",s),u=TP({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const IH={kernelName:Yt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:i}=t,a=n,o=s.shape.length,l=T(i,s.shape);let u=l;const c=pc(u,o),h=null!=c,d=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const e=a.texData.get(f.dataId),t=e.values,n=new Array(o);for(let a=0;a<n.length;a++)n[a]=s.shape[c[a]];const r=fz(t,s.shape,s.dtype,c,n);f=a.makeTensorInfo(n,s.dtype);const i=a.texData.get(f.dataId);i.values=r}else f=MP(s,c,a);p.push(f),u=gc(u.length,o)}dc("sum",u,o);const[g,m]=cc(f.shape,u);let b=g;r&&(b=hc(g,l));const x=kH(f,m,b,a);for(const y of p)a.disposeIntermediateTensorInfo(y);return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SH(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=r.shape.length,l=T(i,r.shape);let u=l;const c=pc(u,o);let h=r;null!=c&&(h=WP({inputs:{x:r},backend:n,attrs:{perm:c}}),u=gc(u.length,r.shape.length)),dc("min",u,o);const[d,p]=cc(h.shape,u),f=w(p),g=TP({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),m=FP(g,g.dtype,"min",n);let b;if(a){const e=hc(d,l);b=TP({inputs:{x:m},backend:n,attrs:{shape:e}})}else b=TP({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}const CH={kernelName:Zt,backendName:"webgl",kernelFunc:SH},$H=tP+"\n  return min(a, b);\n",NH="\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+sP+"\n  return result;\n",TH=yP({opSnippet:$H,packedOpSnippet:NH,cpuKernelImpl:VM}),EH={kernelName:Qt,backendName:"webgl",kernelFunc:TH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class RH{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=LL(s),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class AH{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=LL(s),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=bz("rc",s),l=bz("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const _H=({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:i}=n,a=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AH(s.shape,r,i):new RH(s.shape,r,i),o=t.runWebGLProgram(a,[s],s.dtype);return o},FH={kernelName:en,backendName:"webgl",kernelFunc:_H},DH="if (b == 0.0) return NAN;\n  return mod(a, b);",OH="\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+sP+"\n  return result;\n",LH=yP({opSnippet:DH,packedOpSnippet:OH}),MH={kernelName:tn,backendName:"webgl",kernelFunc:LH};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zH{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const PH="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",BH="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",WH=yP({opSnippet:PH,packedOpSnippet:BH,checkOutOfBounds:!0}),UH={kernelName:ot,backendName:"webgl",kernelFunc:WH},VH="return a - b;",GH=yP({opSnippet:VH,packedOpSnippet:VH,supportsComplex:!0,cpuKernelImpl:hz}),HH={kernelName:is,backendName:"webgl",kernelFunc:GH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jH(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:i}=s,a=T([i],r.shape),o=rH({inputs:{x:r},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=hc(o.shape,a),u=TP({inputs:{x:o},backend:n,attrs:{shape:l}}),c=GH({inputs:{a:r,b:u},backend:n}),h=bV({inputs:{x:c},backend:n}),d=PP({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=TP({inputs:{x:d},backend:n,attrs:{shape:l}}),f=WH({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const qH={kernelName:qn,backendName:"webgl",kernelFunc:jH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KH(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:i,seed:a,normalized:o}=s,l=o?r:jH({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new zH(u,c,i),d=[[a]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}const XH={kernelName:nn,backendName:"webgl",kernelFunc:KH},JH=Rz+"\n  return -x;\n",YH="\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";function ZH(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=HM(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=ie().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Vz(s.shape,YH):new Ez(s.shape,JH),n.runWebGLProgram(r,[s],s.dtype)}const QH={kernelName:rn,backendName:"webgl",kernelFunc:ZH},ej=Id;function tj(e){ks("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=ej(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const nj={kernelName:on,backendName:"webgl",kernelFunc:tj},sj=Sd;function rj(e){ks("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=sj(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const ij={kernelName:ln,backendName:"webgl",kernelFunc:rj},aj=Cd;function oj(e){ks("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),d=a,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=aj(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const lj={kernelName:un,backendName:"webgl",kernelFunc:oj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class uj{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const cj=e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:i,depth:a,onValue:o,offValue:l}=s,u=w(r.shape),c=new uj(u,a,o,l),h=TP({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=[...r.shape,a],f=TP({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),f},hj={kernelName:hn,backendName:"webgl",kernelFunc:cj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dj(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=xW({inputs:{input:s},backend:n}),t=dj({inputs:{x:e},backend:n}),r=zW({inputs:{input:s},backend:n}),i=dj({inputs:{x:r},backend:n}),a=oP({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return EV({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const pj={kernelName:gs,backendName:"webgl",kernelFunc:dj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fj(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=xW({inputs:{input:s},backend:n}),t=fj({inputs:{x:e},backend:n}),r=zW({inputs:{input:s},backend:n}),i=dj({inputs:{x:r},backend:n}),a=oP({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return EV({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const gj={kernelName:cn,backendName:"webgl",kernelFunc:fj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mj(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return yV({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{y(i,e.shape,"All tensors passed to stack must have matching shapes"),x(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=t.map((e=>{const t=yV({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),u=UW({inputs:l,backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const bj={kernelName:dn,backendName:"webgl",kernelFunc:mj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class xj{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=LL(s),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yj{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=LL(s),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=bz("rc",s),l=bz("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,g=1===s?2:4;f<g;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const vj=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,constantValue:a}=s;if(0===w(r.shape)){const e=i.map(((e,t)=>e[0]+r.shape[t]+e[1]));return EV({backend:n,attrs:{shape:e,value:a,dtype:r.dtype}})}const o=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yj(r.shape,i,a):new xj(r.shape,i,a),l=[[a]];return n.runWebGLProgram(o,[r],r.dtype,l)},wj={kernelName:pn,backendName:"webgl",kernelFunc:vj},kj="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",Ij="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+sP+"\n  return result;\n",Sj=yP({opSnippet:kj,packedOpSnippet:Ij}),Cj={kernelName:fn,backendName:"webgl",kernelFunc:Sj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $j(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=r.shape.length,l=[],u=T(i,r.shape);let c=u;const h=pc(c,o);let d,p=r;if(null!=h&&(p=WP({inputs:{x:r},backend:n,attrs:{perm:h}}),c=gc(c.length,o),l.push(p)),dc("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:s,outDtype:r}=qM(p.shape,p.dtype,e,c);d=n.makeTensorInfo(s,r,t)}else{const[e,t]=cc(p.shape,c),s=w(t),i=TP({inputs:{x:p},backend:n,attrs:{shape:[-1,s]}}),a=Lr(r.dtype),o=FP(i,a,"prod",n);d=TP({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(i),l.push(o)}if(a){l.push(d);const e=hc(d.shape,u);d=TP({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const Nj={kernelName:mn,backendName:"webgl",kernelFunc:$j};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tj(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),c=n.readSync(i.dataId),h=n.readSync(a.dataId),[d,p,f]=KM(l,u,c,i.shape,i.dtype,h,a.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,i.dtype,p);return g.concat([m])}const Ej={kernelName:bn,backendName:"webgl",kernelFunc:Tj};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rj(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:i}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,c]=XM(a,s.shape,s.dtype,o,r.shape,l,i.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const Aj={kernelName:xn,backendName:"webgl",kernelFunc:Rj};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _j(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),c=n.readSync(i.dataId),h=n.readSync(a.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,g]=JM(u,r.shape,c,i.shape,i.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,g)}const Fj={kernelName:yn,backendName:"webgl",kernelFunc:_j},Dj=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:i,dtype:a}=n,o=YM(s,r,i,a);return t.makeTensorInfo([o.length],a,o)},Oj={kernelName:vn,backendName:"webgl",kernelFunc:Dj},Lj="return 1.0 / x;",Mj=xP({opSnippet:Lj}),zj={kernelName:kn,backendName:"webgl",kernelFunc:Mj},Pj=Rz+"\n  return (x < 0.0) ? 0.0 : x;\n",Bj="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Wj=xP({opSnippet:Pj,packedOpSnippet:Bj}),Uj={kernelName:In,backendName:"webgl",kernelFunc:Wj},Vj=Rz+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Gj="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Hj=xP({opSnippet:Vj,packedOpSnippet:Gj}),jj={kernelName:En,backendName:"webgl",kernelFunc:Hj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class qj{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[s&&t>1?a-1:a,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Kj{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[s&&t>1?a-1:a,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xj(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,c=ie().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Kj(r.shape,l,u,i,a):new qj(r.shape,l,u,i,a);return n.runWebGLProgram(c,[r],"float32")}const Jj={kernelName:Nn,backendName:"webgl",kernelFunc:Xj};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Yj{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,i,a]=e,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zj(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:a}=s,o=new Yj(i.shape,r.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}const Qj={kernelName:Tn,backendName:"webgl",kernelFunc:Zj};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class eq{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[s&&t>1?a-1:a,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tq{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[s&&t>1?a-1:a,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nq(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,c=ie().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new tq(r.shape,l,u,i,a):new eq(r.shape,l,u,i,a);return n.runWebGLProgram(c,[r],r.dtype)}const sq={kernelName:Cn,backendName:"webgl",kernelFunc:nq};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class rq{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,i,a]=e,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iq(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:a}=s,o=new rq(i.shape,r.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}const aq={kernelName:$n,backendName:"webgl",kernelFunc:iq};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oq{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,r=e.map(((e,t)=>s(t))).join(","),i=LL(n);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class lq{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=bz("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,a=LL(n);function o(e){return h(e)}function l(e){return e[n-1]="("+e[n-1]+" + 1)",h(e)}function u(e){return e[n-2]="("+e[n-2]+" + 1)",h(e)}function c(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",h(e)}function h(t){const n=e.map(((e,n)=>d(n,t))),s=n.join(","),r=n.slice(-2).join(",");return`getChannel(getX(${s}), vec2(${r}))`}function d(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o(s.slice())};\n          if(${r}){\n            result.g = ${l(s.slice())};\n          }\n          if(${i}) {\n            result.b = ${u(s.slice())};\n            if(${r}) {\n              result.a = ${c(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uq(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:i}=s,a=r.shape.length,o=T(i,r.shape);if(0===a)return iP({inputs:{x:r},backend:n});const l=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lq(r.shape,o):new oq(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}const cq={kernelName:Rn,backendName:"webgl",kernelFunc:uq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class hq{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const dq={kernelName:xs,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:i,center:a}=t,o=n,l=new hq(s.shape,i),[u,c]=Ap(a,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]],d=o.runWebGLProgram(l,[s],s.dtype,h);return d}},pq="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",fq=xP({opSnippet:pq}),gq={kernelName:An,backendName:"webgl",kernelFunc:fq},mq="return inversesqrt(x);",bq=xP({opSnippet:mq,cpuKernelImpl:ZM}),xq={kernelName:_n,backendName:"webgl",kernelFunc:bq};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yq{constructor(e,t,n,s,r,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=LL(r.length),l=LL(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vq(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:i}=t,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Bp(i,r,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,r.dtype);const p=TP({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=TP({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),m=new yq(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(m,[f,p,g],f.dtype),x=TP({inputs:{x:b},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}const wq={kernelName:Fn,backendName:"webgl",kernelFunc:vq};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kq{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===ie().getNumber("WEBGL_VERSION")?r:i,o="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Iq(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:i}=t,{side:a}=s,o=new kq(r.shape[0],r.shape[1],i.shape[1],a),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,i],"int32",l)}const Sq={kernelName:Dn,backendName:"webgl",kernelFunc:Iq};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Cq{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let s=0;s<t.length;s++)a.push(`${n[s]}`),s<e&&i.push(`${n[s]}`);s=i.join(),r=a.join()}const i=LL(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $q(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:i}=t,a=new Cq(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(a,[s,r,i],Or(r.dtype,i.dtype))}const Nq={kernelName:On,backendName:"webgl",kernelFunc:$q},Tq=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Wp};\n  float scale = ${Up};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,Eq=xP({opSnippet:Tq}),Rq={kernelName:Ln,backendName:"webgl",kernelFunc:Eq},Aq=bP+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",_q="\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Fq=xP({opSnippet:Aq,packedOpSnippet:_q,cpuKernelImpl:ez}),Dq={kernelName:Wn,backendName:"webgl",kernelFunc:Fq},Oq="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",Lq=xP({opSnippet:Oq}),Mq={kernelName:Bn,backendName:"webgl",kernelFunc:Lq},zq=bP+"\n  return sin(x);\n",Pq=xP({opSnippet:zq}),Bq={kernelName:zn,backendName:"webgl",kernelFunc:Pq},Wq="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",Uq=xP({opSnippet:Wq}),Vq={kernelName:Pn,backendName:"webgl",kernelFunc:Uq},Gq="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",Hq=xP({opSnippet:Gq}),jq={kernelName:Un,backendName:"webgl",kernelFunc:Hq},qq=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,paddings:a}=s;x(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...a);for(let b=1+i.length;b<r.shape.length;++b)l.push([0,0]);const u=[],c=vj({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=_p(c.shape,i,o,!1),d=Fp(h.length,i.length,!1),p=Dp(c.shape,i,o,!1),f=TP({inputs:{x:c},backend:n,attrs:{shape:h}}),g=WP({inputs:{x:f},backend:n,attrs:{perm:d}}),m=TP({inputs:{x:g},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),m},Kq={kernelName:Hn,backendName:"webgl",kernelFunc:qq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xq(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(i.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,g]=sz(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const Jq={kernelName:Kn,backendName:"webgl",kernelFunc:Xq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yq(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:i}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(i.dataId)),[u,c,h]=rz(o,s.shape,s.dtype,a,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const Zq={kernelName:Xn,backendName:"webgl",kernelFunc:Yq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qq(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,c]=iz(a,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const eK={kernelName:Jn,backendName:"webgl",kernelFunc:Qq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tK(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,c]=iz(a,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}const nK={kernelName:Yn,backendName:"webgl",kernelFunc:tK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sK(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:i,defaultValue:a}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Bp(i,r,o),p=!1;if("string"===i.dtype){const e=n.bufferSync(r),t=n.bufferSync(i),s=nr(n.readSync(a.dataId)[0]),f=QM(e,t,o,d,c,u,l,h,s,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new yq(u,l,r.shape.length,i.shape.length,h,[d,1],p),g=n.runWebGLProgram(f,[i,r,a],i.dtype),m=TP({inputs:{x:g},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(g),m}const rK={kernelName:Zn,backendName:"webgl",kernelFunc:sK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iK(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:i,axis:a}=s,o=T(a,r.shape)[0],l=ff(r,i,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=oW({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}const aK={kernelName:jn,backendName:"webgl",kernelFunc:iK},oK="return sqrt(x);",lK=xP({opSnippet:oK,packedOpSnippet:oK,cpuKernelImpl:az}),uK={kernelName:Vn,backendName:"webgl",kernelFunc:lK},cK="return x * x;",hK=xP({opSnippet:cK}),dK={kernelName:es,backendName:"webgl",kernelFunc:hK},pK="return (a - b) * (a - b);",fK=yP({opSnippet:pK,packedOpSnippet:pK}),gK={kernelName:Qn,backendName:"webgl",kernelFunc:fK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mK({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=Rz+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new Ez(s.shape,r);return n.runWebGLProgram(i,[s],s.dtype)}const bK={kernelName:ms,backendName:"webgl",kernelFunc:mK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class xK{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=LL(n.length),i=LL(n.length);let a="";if(1===s)a="coords * strides + begin";else{let e=0;a=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yK(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:y,end:v,strides:w}=Xo(r.shape,i,a,o,l,u,c,h,d);let k;if(g)k=TP({inputs:{x:r},backend:n,attrs:{shape:f}});else if(m||b){x(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Lo(y,v,w),t=oW({inputs:{x:r},backend:n,attrs:{begin:y,size:e}});k=TP({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.shouldExecuteOnCPU([r]);if(e){const e=n.readSync(r.dataId),t=ca(r.shape,r.dtype,e),s=oz(p,t,w,y);k=n.makeTensorInfo(f,r.dtype,s.values)}else{const e=new xK(y,w,p);k=n.runWebGLProgram(e,[r],r.dtype)}}const I=TP({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),I}const vK={kernelName:ts,backendName:"webgl",kernelFunc:yK};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wK(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,g]=lz(d,p,r,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}const kK={kernelName:ns,backendName:"webgl",kernelFunc:wK};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function IK(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(i.dataId),l=n.readSync(a.dataId)[0],[u,c,h]=uz(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const SK={kernelName:ss,backendName:"webgl",kernelFunc:IK};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CK(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(i.dataId),o=cz(a,r);return n.makeTensorInfo(i.shape,"int32",o)}const $K={kernelName:rs,backendName:"webgl",kernelFunc:CK},NK="return tan(x);",TK=xP({opSnippet:NK}),EK={kernelName:as,backendName:"webgl",kernelFunc:TK},RK="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",AK=xP({opSnippet:RK}),_K={kernelName:os,backendName:"webgl",kernelFunc:AK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class FK{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;const s=LL(this.rank),r=DK(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function DK(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OK(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:i}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>nr(e))):e,s=ca(r.shape,r.dtype,t),a=dz(s,i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new FK(r.shape,i),o=n.runWebGLProgram(a,[r],r.dtype);return o}const LK={kernelName:ls,backendName:"webgl",kernelFunc:OK};class MK{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class zK{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PK(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function BK(e){let t=1;while(t<e)t*=2;return t}function WK(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:i,sorted:a}=s,o=ie().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=ie().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||i>l){const e=n.readSync(r.dataId),[t,s]=pz(e,u,r.dtype,i,a);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,EV({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=w(u),g=f/c,m=TP({inputs:{x:p},attrs:{shape:[g,c]},backend:n});d&&PK(n,p);const b=BK(i),x=BK(c);let y=null;const v=()=>null===y?[m,m]:[m,y],k=(e,t,s)=>{const r=v(),i=new MK(s),a=null===y?1:0,o=[[c],[a],[Number.NEGATIVE_INFINITY],[e],[t]],l=y;y=n.runWebGLProgram(i,r,"int32",o),PK(n,l)};for(let w=1;w<b;w*=2){const e=2*w;for(let t=w;t>=1;t/=2)k(e,t,[g,x])}for(let w=x;w>b;w/=2){const e=v(),t=new zK([g,w/2]),s=null===y?1:0,r=[[c],[s],[b]],i=y;y=n.runWebGLProgram(t,e,"int32",r),PK(n,i);const a=b/2,o=2*a;for(let n=a;n>=1;n/=2)k(o,n,y.shape)}let I=y;y=oW({inputs:{x:y},backend:n,attrs:{begin:0,size:[g,i]}}),PK(n,I);let S=tG({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});PK(n,m);const C=u.slice(0,-1);C.push(i),I=y,y=TP({inputs:{x:y},attrs:{shape:C},backend:n}),PK(n,I);const $=S;return S=TP({inputs:{x:S},attrs:{shape:C},backend:n}),PK(n,$),[S,y]}const UK={kernelName:us,backendName:"webgl",kernelFunc:WK};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class VK{constructor(e,t,n,s,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(s){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GK(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],b=new VK(h,d,a,o,l,m);return n.runWebGLProgram(b,[r,i],"float32")}const HK={kernelName:cs,backendName:"webgl",kernelFunc:GK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jK(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:i}=t;zO(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=gz(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const qK={kernelName:ds,backendName:"webgl",kernelFunc:jK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KK(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r,o=a.shape.length,l=r.shape[i],u=new Array(o-1);let c=0;for(let g=0;g<o;g++)g!==i&&(u[c++]=a.shape[g]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(l);for(let g=0;g<f.length;g++){d[i]=g;const e=oW({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),t=TP({inputs:{x:e},backend:n,attrs:{shape:u}});f[g]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const XK={kernelName:ps,backendName:"webgl",kernelFunc:KK};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class JK{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,i=e.numSegments,a=i*Math.ceil(r/n);this.outputShape=[s,a];const o="0.0",l="sumValue",u=4*Math.floor(n/4),c=n%4,h="\n        sumValue += dot(values, segFilter);\n    ";let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YK(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:i}=t,{numSegments:a}=s,o=r.shape.length,l=[];let u=0;const c=pc([u],o);let h=r;null!=c&&(h=WP({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=gc(1,o)[0]);const d=Tf(h.shape,u,a),p=w([h.shape[u]]),f=TP({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const g=Lr(r.dtype),m=(e,t,s,r,i)=>{const a=e.shape[0],o=e.shape[1],u=Nf(o,i),c={windowSize:u,inSize:o,batchSize:a,numSegments:i},h=new JK(c,t),d=n.compileAndRun(h,[e,s],r);if(l.push(d),d.shape[1]===i)return d;const p=Dj({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=OK({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});l.push(p),l.push(f);const g=m(d,t,f,r,i);return g},b=m(f,"unsortedSegmentSum",i,g,a),x=TP({inputs:{x:b},backend:n,attrs:{shape:d}});let y=x;if(null!=c){l.push(x);const e=fc(c);y=WP({inputs:{x:y},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const ZK={kernelName:fs,backendName:"webgl",kernelFunc:YK},QK=[jP,XP,ZP,tB,rB,lB,cB,dB,yB,wB,SB,NB,RB,DB,MB,WB,VB,qB,XB,YB,tW,cW,dW,fW,IW,$W,RW,lP,DW,VW,ZW,rU,aU,lU,cU,dU,gU,xU,wU,TU,RU,_U,OU,PU,VU,HU,KU,YU,QU,sV,oV,hV,fV,xV,vV,IV,NV,RV,_V,OV,PV,UV,qV,XV,ZV,nG,aG,cG,aP,dG,PW,gG,xG,wG,dP,CG,EG,AG,OG,zG,UG,HG,XG,QG,nH,iH,uH,hH,pH,bH,yH,wH,IH,CH,EH,FH,MH,XH,$P,QH,nj,ij,lj,bW,hj,gj,bj,wj,Cj,mP,Nj,Ej,Aj,Fj,Oj,yW,UH,zj,Uj,jj,EP,Jj,Qj,sq,aq,cq,dq,gq,xq,wq,Sq,Nq,Rq,Dq,Mq,Bq,Vq,lW,qH,jq,Kq,Jq,Zq,eK,nK,rK,aK,uK,dK,gK,bK,vK,kK,SK,$K,HH,BP,EK,_K,LK,UK,HK,UP,qK,XK,ZK,pj];for(const tX of QK)Es(tX)},262:function(e,t,n){"use strict";n.d(t,{Bj:function(){return i},Fl:function(){return He},IU:function(){return Re},Jd:function(){return S},PG:function(){return $e},Um:function(){return Ie},WL:function(){return Ue},X$:function(){return T},X3:function(){return Ee},Xl:function(){return Ae},dq:function(){return Le},iH:function(){return Me},j:function(){return $},lk:function(){return C},nZ:function(){return o},qj:function(){return ke},qq:function(){return v},yT:function(){return Te}});var s=n(577);let r;class i{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this.parent=r,!e&&r&&(this.index=(r.scopes||(r.scopes=[])).push(this)-1)}get active(){return this._active}run(e){if(this._active){const t=r;try{return r=this,e()}finally{r=t}}else 0}on(){r=this}off(){r=this.parent}stop(e){if(this._active){let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){const e=this.parent.scopes.pop();e&&e!==this&&(this.parent.scopes[this.index]=e,e.index=this.index)}this.parent=void 0,this._active=!1}}}function a(e,t=r){t&&t.active&&t.effects.push(e)}function o(){return r}const l=e=>{const t=new Set(e);return t.w=0,t.n=0,t},u=e=>(e.w&g)>0,c=e=>(e.n&g)>0,h=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=g},d=e=>{const{deps:t}=e;if(t.length){let n=0;for(let s=0;s<t.length;s++){const r=t[s];u(r)&&!c(r)?r.delete(e):t[n++]=r,r.w&=~g,r.n&=~g}t.length=n}},p=new WeakMap;let f=0,g=1;const m=30;let b;const x=Symbol(""),y=Symbol("");class v{constructor(e,t=null,n){this.fn=e,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,a(this,n)}run(){if(!this.active)return this.fn();let e=b,t=k;while(e){if(e===this)return;e=e.parent}try{return this.parent=b,b=this,k=!0,g=1<<++f,f<=m?h(this):w(this),this.fn()}finally{f<=m&&d(this),g=1<<--f,b=this.parent,k=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){b===this?this.deferStop=!0:this.active&&(w(this),this.onStop&&this.onStop(),this.active=!1)}}function w(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}let k=!0;const I=[];function S(){I.push(k),k=!1}function C(){const e=I.pop();k=void 0===e||e}function $(e,t,n){if(k&&b){let t=p.get(e);t||p.set(e,t=new Map);let s=t.get(n);s||t.set(n,s=l());const r=void 0;N(s,r)}}function N(e,t){let n=!1;f<=m?c(e)||(e.n|=g,n=!u(e)):n=!e.has(b),n&&(e.add(b),b.deps.push(e))}function T(e,t,n,r,i,a){const o=p.get(e);if(!o)return;let u=[];if("clear"===t)u=[...o.values()];else if("length"===n&&(0,s.kJ)(e)){const e=Number(r);o.forEach(((t,n)=>{("length"===n||n>=e)&&u.push(t)}))}else switch(void 0!==n&&u.push(o.get(n)),t){case"add":(0,s.kJ)(e)?(0,s.S0)(n)&&u.push(o.get("length")):(u.push(o.get(x)),(0,s._N)(e)&&u.push(o.get(y)));break;case"delete":(0,s.kJ)(e)||(u.push(o.get(x)),(0,s._N)(e)&&u.push(o.get(y)));break;case"set":(0,s._N)(e)&&u.push(o.get(x));break}if(1===u.length)u[0]&&E(u[0]);else{const e=[];for(const t of u)t&&e.push(...t);E(l(e))}}function E(e,t){const n=(0,s.kJ)(e)?e:[...e];for(const s of n)s.computed&&R(s,t);for(const s of n)s.computed||R(s,t)}function R(e,t){(e!==b||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const A=(0,s.fY)("__proto__,__v_isRef,__isVue"),_=new Set(Object.getOwnPropertyNames(Symbol).filter((e=>"arguments"!==e&&"caller"!==e)).map((e=>Symbol[e])).filter(s.yk)),F=P(),D=P(!1,!0),O=P(!0),L=M();function M(){const e={};return["includes","indexOf","lastIndexOf"].forEach((t=>{e[t]=function(...e){const n=Re(this);for(let t=0,r=this.length;t<r;t++)$(n,"get",t+"");const s=n[t](...e);return-1===s||!1===s?n[t](...e.map(Re)):s}})),["push","pop","shift","unshift","splice"].forEach((t=>{e[t]=function(...e){S();const n=Re(this)[t].apply(this,e);return C(),n}})),e}function z(e){const t=Re(this);return $(t,"has",e),t.hasOwnProperty(e)}function P(e=!1,t=!1){return function(n,r,i){if("__v_isReactive"===r)return!e;if("__v_isReadonly"===r)return e;if("__v_isShallow"===r)return t;if("__v_raw"===r&&i===(e?t?ye:xe:t?be:me).get(n))return n;const a=(0,s.kJ)(n);if(!e){if(a&&(0,s.RI)(L,r))return Reflect.get(L,r,i);if("hasOwnProperty"===r)return z}const o=Reflect.get(n,r,i);return((0,s.yk)(r)?_.has(r):A(r))?o:(e||$(n,"get",r),t?o:Le(o)?a&&(0,s.S0)(r)?o:o.value:(0,s.Kn)(o)?e?Se(o):ke(o):o)}}const B=U(),W=U(!0);function U(e=!1){return function(t,n,r,i){let a=t[n];if(Ne(a)&&Le(a)&&!Le(r))return!1;if(!e&&(Te(r)||Ne(r)||(a=Re(a),r=Re(r)),!(0,s.kJ)(t)&&Le(a)&&!Le(r)))return a.value=r,!0;const o=(0,s.kJ)(t)&&(0,s.S0)(n)?Number(n)<t.length:(0,s.RI)(t,n),l=Reflect.set(t,n,r,i);return t===Re(i)&&(o?(0,s.aU)(r,a)&&T(t,"set",n,r,a):T(t,"add",n,r)),l}}function V(e,t){const n=(0,s.RI)(e,t),r=e[t],i=Reflect.deleteProperty(e,t);return i&&n&&T(e,"delete",t,void 0,r),i}function G(e,t){const n=Reflect.has(e,t);return(0,s.yk)(t)&&_.has(t)||$(e,"has",t),n}function H(e){return $(e,"iterate",(0,s.kJ)(e)?"length":x),Reflect.ownKeys(e)}const j={get:F,set:B,deleteProperty:V,has:G,ownKeys:H},q={get:O,set(e,t){return!0},deleteProperty(e,t){return!0}},K=(0,s.l7)({},j,{get:D,set:W}),X=e=>e,J=e=>Reflect.getPrototypeOf(e);function Y(e,t,n=!1,s=!1){e=e["__v_raw"];const r=Re(e),i=Re(t);n||(t!==i&&$(r,"get",t),$(r,"get",i));const{has:a}=J(r),o=s?X:n?Fe:_e;return a.call(r,t)?o(e.get(t)):a.call(r,i)?o(e.get(i)):void(e!==r&&e.get(t))}function Z(e,t=!1){const n=this["__v_raw"],s=Re(n),r=Re(e);return t||(e!==r&&$(s,"has",e),$(s,"has",r)),e===r?n.has(e):n.has(e)||n.has(r)}function Q(e,t=!1){return e=e["__v_raw"],!t&&$(Re(e),"iterate",x),Reflect.get(e,"size",e)}function ee(e){e=Re(e);const t=Re(this),n=J(t),s=n.has.call(t,e);return s||(t.add(e),T(t,"add",e,e)),this}function te(e,t){t=Re(t);const n=Re(this),{has:r,get:i}=J(n);let a=r.call(n,e);a||(e=Re(e),a=r.call(n,e));const o=i.call(n,e);return n.set(e,t),a?(0,s.aU)(t,o)&&T(n,"set",e,t,o):T(n,"add",e,t),this}function ne(e){const t=Re(this),{has:n,get:s}=J(t);let r=n.call(t,e);r||(e=Re(e),r=n.call(t,e));const i=s?s.call(t,e):void 0,a=t.delete(e);return r&&T(t,"delete",e,void 0,i),a}function se(){const e=Re(this),t=0!==e.size,n=void 0,s=e.clear();return t&&T(e,"clear",void 0,void 0,n),s}function re(e,t){return function(n,s){const r=this,i=r["__v_raw"],a=Re(i),o=t?X:e?Fe:_e;return!e&&$(a,"iterate",x),i.forEach(((e,t)=>n.call(s,o(e),o(t),r)))}}function ie(e,t,n){return function(...r){const i=this["__v_raw"],a=Re(i),o=(0,s._N)(a),l="entries"===e||e===Symbol.iterator&&o,u="keys"===e&&o,c=i[e](...r),h=n?X:t?Fe:_e;return!t&&$(a,"iterate",u?y:x),{next(){const{value:e,done:t}=c.next();return t?{value:e,done:t}:{value:l?[h(e[0]),h(e[1])]:h(e),done:t}},[Symbol.iterator](){return this}}}}function ae(e){return function(...t){return"delete"!==e&&this}}function oe(){const e={get(e){return Y(this,e)},get size(){return Q(this)},has:Z,add:ee,set:te,delete:ne,clear:se,forEach:re(!1,!1)},t={get(e){return Y(this,e,!1,!0)},get size(){return Q(this)},has:Z,add:ee,set:te,delete:ne,clear:se,forEach:re(!1,!0)},n={get(e){return Y(this,e,!0)},get size(){return Q(this,!0)},has(e){return Z.call(this,e,!0)},add:ae("add"),set:ae("set"),delete:ae("delete"),clear:ae("clear"),forEach:re(!0,!1)},s={get(e){return Y(this,e,!0,!0)},get size(){return Q(this,!0)},has(e){return Z.call(this,e,!0)},add:ae("add"),set:ae("set"),delete:ae("delete"),clear:ae("clear"),forEach:re(!0,!0)},r=["keys","values","entries",Symbol.iterator];return r.forEach((r=>{e[r]=ie(r,!1,!1),n[r]=ie(r,!0,!1),t[r]=ie(r,!1,!0),s[r]=ie(r,!0,!0)})),[e,n,t,s]}const[le,ue,ce,he]=oe();function de(e,t){const n=t?e?he:ce:e?ue:le;return(t,r,i)=>"__v_isReactive"===r?!e:"__v_isReadonly"===r?e:"__v_raw"===r?t:Reflect.get((0,s.RI)(n,r)&&r in t?n:t,r,i)}const pe={get:de(!1,!1)},fe={get:de(!1,!0)},ge={get:de(!0,!1)};const me=new WeakMap,be=new WeakMap,xe=new WeakMap,ye=new WeakMap;function ve(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function we(e){return e["__v_skip"]||!Object.isExtensible(e)?0:ve((0,s.W7)(e))}function ke(e){return Ne(e)?e:Ce(e,!1,j,pe,me)}function Ie(e){return Ce(e,!1,K,fe,be)}function Se(e){return Ce(e,!0,q,ge,xe)}function Ce(e,t,n,r,i){if(!(0,s.Kn)(e))return e;if(e["__v_raw"]&&(!t||!e["__v_isReactive"]))return e;const a=i.get(e);if(a)return a;const o=we(e);if(0===o)return e;const l=new Proxy(e,2===o?r:n);return i.set(e,l),l}function $e(e){return Ne(e)?$e(e["__v_raw"]):!(!e||!e["__v_isReactive"])}function Ne(e){return!(!e||!e["__v_isReadonly"])}function Te(e){return!(!e||!e["__v_isShallow"])}function Ee(e){return $e(e)||Ne(e)}function Re(e){const t=e&&e["__v_raw"];return t?Re(t):e}function Ae(e){return(0,s.Nj)(e,"__v_skip",!0),e}const _e=e=>(0,s.Kn)(e)?ke(e):e,Fe=e=>(0,s.Kn)(e)?Se(e):e;function De(e){k&&b&&(e=Re(e),N(e.dep||(e.dep=l())))}function Oe(e,t){e=Re(e);const n=e.dep;n&&E(n)}function Le(e){return!(!e||!0!==e.__v_isRef)}function Me(e){return ze(e,!1)}function ze(e,t){return Le(e)?e:new Pe(e,t)}class Pe{constructor(e,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?e:Re(e),this._value=t?e:_e(e)}get value(){return De(this),this._value}set value(e){const t=this.__v_isShallow||Te(e)||Ne(e);e=t?e:Re(e),(0,s.aU)(e,this._rawValue)&&(this._rawValue=e,this._value=t?e:_e(e),Oe(this,e))}}function Be(e){return Le(e)?e.value:e}const We={get:(e,t,n)=>Be(Reflect.get(e,t,n)),set:(e,t,n,s)=>{const r=e[t];return Le(r)&&!Le(n)?(r.value=n,!0):Reflect.set(e,t,n,s)}};function Ue(e){return $e(e)?e:new Proxy(e,We)}var Ve;class Ge{constructor(e,t,n,s){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this[Ve]=!1,this._dirty=!0,this.effect=new v(e,(()=>{this._dirty||(this._dirty=!0,Oe(this))})),this.effect.computed=this,this.effect.active=this._cacheable=!s,this["__v_isReadonly"]=n}get value(){const e=Re(this);return De(e),!e._dirty&&e._cacheable||(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}function He(e,t,n=!1){let r,i;const a=(0,s.mf)(e);a?(r=e,i=s.dG):(r=e.get,i=e.set);const o=new Ge(r,i,a||!i,n);return o}Ve="__v_isReadonly"},252:function(e,t,n){"use strict";n.d(t,{$d:function(){return a},Ah:function(){return $e},FN:function(){return an},Fl:function(){return kn},HY:function(){return Nt},Ho:function(){return Kt},Ko:function(){return De},P$:function(){return ne},Q6:function(){return le},U2:function(){return re},Uk:function(){return Xt},Us:function(){return wt},Wm:function(){return Ht},Y3:function(){return x},Y8:function(){return Q},_:function(){return Gt},aZ:function(){return ue},bv:function(){return ke},dG:function(){return Qt},h:function(){return In},iD:function(){return zt},ic:function(){return Se},lA:function(){return Pt},m0:function(){return j},nK:function(){return oe},wg:function(){return Ft},wy:function(){return Ae}});var s=n(262),r=n(577);function i(e,t,n,s){let r;try{r=s?e(...s):e()}catch(i){o(i,t,n)}return r}function a(e,t,n,s){if((0,r.mf)(e)){const a=i(e,t,n,s);return a&&(0,r.tI)(a)&&a.catch((e=>{o(e,t,n)})),a}const l=[];for(let r=0;r<e.length;r++)l.push(a(e[r],t,n,s));return l}function o(e,t,n,s=!0){const r=t?t.vnode:null;if(t){let s=t.parent;const r=t.proxy,a=n;while(s){const t=s.ec;if(t)for(let n=0;n<t.length;n++)if(!1===t[n](e,r,a))return;s=s.parent}const o=t.appContext.config.errorHandler;if(o)return void i(o,null,10,[e,r,a])}l(e,n,r,s)}function l(e,t,n,s=!0){console.error(e)}let u=!1,c=!1;const h=[];let d=0;const p=[];let f=null,g=0;const m=Promise.resolve();let b=null;function x(e){const t=b||m;return e?t.then(this?e.bind(this):e):t}function y(e){let t=d+1,n=h.length;while(t<n){const s=t+n>>>1,r=$(h[s]);r<e?t=s+1:n=s}return t}function v(e){h.length&&h.includes(e,u&&e.allowRecurse?d+1:d)||(null==e.id?h.push(e):h.splice(y(e.id),0,e),w())}function w(){u||c||(c=!0,b=m.then(T))}function k(e){const t=h.indexOf(e);t>d&&h.splice(t,1)}function I(e){(0,r.kJ)(e)?p.push(...e):f&&f.includes(e,e.allowRecurse?g+1:g)||p.push(e),w()}function S(e,t=(u?d+1:0)){for(0;t<h.length;t++){const e=h[t];e&&e.pre&&(h.splice(t,1),t--,e())}}function C(e){if(p.length){const e=[...new Set(p)];if(p.length=0,f)return void f.push(...e);for(f=e,f.sort(((e,t)=>$(e)-$(t))),g=0;g<f.length;g++)f[g]();f=null,g=0}}const $=e=>null==e.id?1/0:e.id,N=(e,t)=>{const n=$(e)-$(t);if(0===n){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return n};function T(e){c=!1,u=!0,h.sort(N);r.dG;try{for(d=0;d<h.length;d++){const e=h[d];e&&!1!==e.active&&i(e,null,14)}}finally{d=0,h.length=0,C(e),u=!1,b=null,(h.length||p.length)&&T(e)}}new Set;new Map;function E(e,t,...n){if(e.isUnmounted)return;const s=e.vnode.props||r.kT;let i=n;const o=t.startsWith("update:"),l=o&&t.slice(7);if(l&&l in s){const e=`${"modelValue"===l?"model":l}Modifiers`,{number:t,trim:a}=s[e]||r.kT;a&&(i=n.map((e=>(0,r.HD)(e)?e.trim():e))),t&&(i=n.map(r.h5))}let u;let c=s[u=(0,r.hR)(t)]||s[u=(0,r.hR)((0,r._A)(t))];!c&&o&&(c=s[u=(0,r.hR)((0,r.rs)(t))]),c&&a(c,e,6,i);const h=s[u+"Once"];if(h){if(e.emitted){if(e.emitted[u])return}else e.emitted={};e.emitted[u]=!0,a(h,e,6,i)}}function R(e,t,n=!1){const s=t.emitsCache,i=s.get(e);if(void 0!==i)return i;const a=e.emits;let o={},l=!1;if(!(0,r.mf)(e)){const s=e=>{const n=R(e,t,!0);n&&(l=!0,(0,r.l7)(o,n))};!n&&t.mixins.length&&t.mixins.forEach(s),e.extends&&s(e.extends),e.mixins&&e.mixins.forEach(s)}return a||l?((0,r.kJ)(a)?a.forEach((e=>o[e]=null)):(0,r.l7)(o,a),(0,r.Kn)(e)&&s.set(e,o),o):((0,r.Kn)(e)&&s.set(e,null),null)}function A(e,t){return!(!e||!(0,r.F7)(t))&&(t=t.slice(2).replace(/Once$/,""),(0,r.RI)(e,t[0].toLowerCase()+t.slice(1))||(0,r.RI)(e,(0,r.rs)(t))||(0,r.RI)(e,t))}let _=null,F=null;function D(e){const t=_;return _=e,F=e&&e.type.__scopeId||null,t}function O(e,t=_,n){if(!t)return e;if(e._n)return e;const s=(...n)=>{s._d&&Lt(-1);const r=D(t);let i;try{i=e(...n)}finally{D(r),s._d&&Lt(1)}return i};return s._n=!0,s._c=!0,s._d=!0,s}function L(e){const{type:t,vnode:n,proxy:s,withProxy:i,props:a,propsOptions:[l],slots:u,attrs:c,emit:h,render:d,renderCache:p,data:f,setupState:g,ctx:m,inheritAttrs:b}=e;let x,y;const v=D(e);try{if(4&n.shapeFlag){const e=i||s;x=Jt(d.call(e,e,p,a,g,f,m)),y=c}else{const e=t;0,x=Jt(e.length>1?e(a,{attrs:c,slots:u,emit:h}):e(a,null)),y=t.props?c:M(c)}}catch(k){At.length=0,o(k,e,1),x=Ht(Et)}let w=x;if(y&&!1!==b){const e=Object.keys(y),{shapeFlag:t}=w;e.length&&7&t&&(l&&e.some(r.tR)&&(y=z(y,l)),w=Kt(w,y))}return n.dirs&&(w=Kt(w),w.dirs=w.dirs?w.dirs.concat(n.dirs):n.dirs),n.transition&&(w.transition=n.transition),x=w,D(v),x}const M=e=>{let t;for(const n in e)("class"===n||"style"===n||(0,r.F7)(n))&&((t||(t={}))[n]=e[n]);return t},z=(e,t)=>{const n={};for(const s in e)(0,r.tR)(s)&&s.slice(9)in t||(n[s]=e[s]);return n};function P(e,t,n){const{props:s,children:r,component:i}=e,{props:a,children:o,patchFlag:l}=t,u=i.emitsOptions;if(t.dirs||t.transition)return!0;if(!(n&&l>=0))return!(!r&&!o||o&&o.$stable)||s!==a&&(s?!a||B(s,a,u):!!a);if(1024&l)return!0;if(16&l)return s?B(s,a,u):!!a;if(8&l){const e=t.dynamicProps;for(let t=0;t<e.length;t++){const n=e[t];if(a[n]!==s[n]&&!A(u,n))return!0}}return!1}function B(e,t,n){const s=Object.keys(t);if(s.length!==Object.keys(e).length)return!0;for(let r=0;r<s.length;r++){const i=s[r];if(t[i]!==e[i]&&!A(n,i))return!0}return!1}function W({vnode:e,parent:t},n){while(t&&t.subTree===e)(e=t.vnode).el=n,t=t.parent}const U=e=>e.__isSuspense;function V(e,t){t&&t.pendingBranch?(0,r.kJ)(e)?t.effects.push(...e):t.effects.push(e):I(e)}function G(e,t){if(rn){let n=rn.provides;const s=rn.parent&&rn.parent.provides;s===n&&(n=rn.provides=Object.create(s)),n[e]=t}else 0}function H(e,t,n=!1){const s=rn||_;if(s){const i=null==s.parent?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides;if(i&&e in i)return i[e];if(arguments.length>1)return n&&(0,r.mf)(t)?t.call(s.proxy):t}else 0}function j(e,t){return X(e,null,t)}const q={};function K(e,t,n){return X(e,t,n)}function X(e,t,{immediate:n,deep:o,flush:l,onTrack:u,onTrigger:c}=r.kT){const h=(0,s.nZ)()===(null===rn||void 0===rn?void 0:rn.scope)?rn:null;let d,p,f=!1,g=!1;if((0,s.dq)(e)?(d=()=>e.value,f=(0,s.yT)(e)):(0,s.PG)(e)?(d=()=>e,o=!0):(0,r.kJ)(e)?(g=!0,f=e.some((e=>(0,s.PG)(e)||(0,s.yT)(e))),d=()=>e.map((e=>(0,s.dq)(e)?e.value:(0,s.PG)(e)?Z(e):(0,r.mf)(e)?i(e,h,2):void 0))):d=(0,r.mf)(e)?t?()=>i(e,h,2):()=>{if(!h||!h.isUnmounted)return p&&p(),a(e,h,3,[b])}:r.dG,t&&o){const e=d;d=()=>Z(e())}let m,b=e=>{p=k.onStop=()=>{i(e,h,4)}};if(dn){if(b=r.dG,t?n&&a(t,h,3,[d(),g?[]:void 0,b]):d(),"sync"!==l)return r.dG;{const e=Cn();m=e.__watcherHandles||(e.__watcherHandles=[])}}let x=g?new Array(e.length).fill(q):q;const y=()=>{if(k.active)if(t){const e=k.run();(o||f||(g?e.some(((e,t)=>(0,r.aU)(e,x[t]))):(0,r.aU)(e,x)))&&(p&&p(),a(t,h,3,[e,x===q?void 0:g&&x[0]===q?[]:x,b]),x=e)}else k.run()};let w;y.allowRecurse=!!t,"sync"===l?w=y:"post"===l?w=()=>vt(y,h&&h.suspense):(y.pre=!0,h&&(y.id=h.uid),w=()=>v(y));const k=new s.qq(d,w);t?n?y():x=k.run():"post"===l?vt(k.run.bind(k),h&&h.suspense):k.run();const I=()=>{k.stop(),h&&h.scope&&(0,r.Od)(h.scope.effects,k)};return m&&m.push(I),I}function J(e,t,n){const s=this.proxy,i=(0,r.HD)(e)?e.includes(".")?Y(s,e):()=>s[e]:e.bind(s,s);let a;(0,r.mf)(t)?a=t:(a=t.handler,n=t);const o=rn;on(this);const l=X(i,a.bind(s),n);return o?on(o):ln(),l}function Y(e,t){const n=t.split(".");return()=>{let t=e;for(let e=0;e<n.length&&t;e++)t=t[n[e]];return t}}function Z(e,t){if(!(0,r.Kn)(e)||e["__v_skip"])return e;if(t=t||new Set,t.has(e))return e;if(t.add(e),(0,s.dq)(e))Z(e.value,t);else if((0,r.kJ)(e))for(let n=0;n<e.length;n++)Z(e[n],t);else if((0,r.DM)(e)||(0,r._N)(e))e.forEach((e=>{Z(e,t)}));else if((0,r.PO)(e))for(const n in e)Z(e[n],t);return e}function Q(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return ke((()=>{e.isMounted=!0})),Ce((()=>{e.isUnmounting=!0})),e}const ee=[Function,Array],te={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:ee,onEnter:ee,onAfterEnter:ee,onEnterCancelled:ee,onBeforeLeave:ee,onLeave:ee,onAfterLeave:ee,onLeaveCancelled:ee,onBeforeAppear:ee,onAppear:ee,onAfterAppear:ee,onAppearCancelled:ee},setup(e,{slots:t}){const n=an(),r=Q();let i;return()=>{const a=t.default&&le(t.default(),!0);if(!a||!a.length)return;let o=a[0];if(a.length>1){let e=!1;for(const t of a)if(t.type!==Et){0,o=t,e=!0;break}}const l=(0,s.IU)(e),{mode:u}=l;if(r.isLeaving)return ie(o);const c=ae(o);if(!c)return ie(o);const h=re(c,l,r,n);oe(c,h);const d=n.subTree,p=d&&ae(d);let f=!1;const{getTransitionKey:g}=c.type;if(g){const e=g();void 0===i?i=e:e!==i&&(i=e,f=!0)}if(p&&p.type!==Et&&(!Bt(c,p)||f)){const e=re(p,l,r,n);if(oe(p,e),"out-in"===u)return r.isLeaving=!0,e.afterLeave=()=>{r.isLeaving=!1,!1!==n.update.active&&n.update()},ie(o);"in-out"===u&&c.type!==Et&&(e.delayLeave=(e,t,n)=>{const s=se(r,p);s[String(p.key)]=p,e._leaveCb=()=>{t(),e._leaveCb=void 0,delete h.delayedLeave},h.delayedLeave=n})}return o}}},ne=te;function se(e,t){const{leavingVNodes:n}=e;let s=n.get(t.type);return s||(s=Object.create(null),n.set(t.type,s)),s}function re(e,t,n,s){const{appear:i,mode:o,persisted:l=!1,onBeforeEnter:u,onEnter:c,onAfterEnter:h,onEnterCancelled:d,onBeforeLeave:p,onLeave:f,onAfterLeave:g,onLeaveCancelled:m,onBeforeAppear:b,onAppear:x,onAfterAppear:y,onAppearCancelled:v}=t,w=String(e.key),k=se(n,e),I=(e,t)=>{e&&a(e,s,9,t)},S=(e,t)=>{const n=t[1];I(e,t),(0,r.kJ)(e)?e.every((e=>e.length<=1))&&n():e.length<=1&&n()},C={mode:o,persisted:l,beforeEnter(t){let s=u;if(!n.isMounted){if(!i)return;s=b||u}t._leaveCb&&t._leaveCb(!0);const r=k[w];r&&Bt(e,r)&&r.el._leaveCb&&r.el._leaveCb(),I(s,[t])},enter(e){let t=c,s=h,r=d;if(!n.isMounted){if(!i)return;t=x||c,s=y||h,r=v||d}let a=!1;const o=e._enterCb=t=>{a||(a=!0,I(t?r:s,[e]),C.delayedLeave&&C.delayedLeave(),e._enterCb=void 0)};t?S(t,[e,o]):o()},leave(t,s){const r=String(e.key);if(t._enterCb&&t._enterCb(!0),n.isUnmounting)return s();I(p,[t]);let i=!1;const a=t._leaveCb=n=>{i||(i=!0,s(),I(n?m:g,[t]),t._leaveCb=void 0,k[r]===e&&delete k[r])};k[r]=e,f?S(f,[t,a]):a()},clone(e){return re(e,t,n,s)}};return C}function ie(e){if(he(e))return e=Kt(e),e.children=null,e}function ae(e){return he(e)?e.children?e.children[0]:void 0:e}function oe(e,t){6&e.shapeFlag&&e.component?oe(e.component.subTree,t):128&e.shapeFlag?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function le(e,t=!1,n){let s=[],r=0;for(let i=0;i<e.length;i++){let a=e[i];const o=null==n?a.key:String(n)+String(null!=a.key?a.key:i);a.type===Nt?(128&a.patchFlag&&r++,s=s.concat(le(a.children,t,o))):(t||a.type!==Et)&&s.push(null!=o?Kt(a,{key:o}):a)}if(r>1)for(let i=0;i<s.length;i++)s[i].patchFlag=-2;return s}function ue(e){return(0,r.mf)(e)?{setup:e,name:e.name}:e}const ce=e=>!!e.type.__asyncLoader;const he=e=>e.type.__isKeepAlive;RegExp,RegExp;function de(e,t){return(0,r.kJ)(e)?e.some((e=>de(e,t))):(0,r.HD)(e)?e.split(",").includes(t):!!(0,r.Kj)(e)&&e.test(t)}function pe(e,t){ge(e,"a",t)}function fe(e,t){ge(e,"da",t)}function ge(e,t,n=rn){const s=e.__wdc||(e.__wdc=()=>{let t=n;while(t){if(t.isDeactivated)return;t=t.parent}return e()});if(ye(t,s,n),n){let e=n.parent;while(e&&e.parent)he(e.parent.vnode)&&me(s,t,n,e),e=e.parent}}function me(e,t,n,s){const i=ye(t,e,s,!0);$e((()=>{(0,r.Od)(s[t],i)}),n)}function be(e){e.shapeFlag&=-257,e.shapeFlag&=-513}function xe(e){return 128&e.shapeFlag?e.ssContent:e}function ye(e,t,n=rn,r=!1){if(n){const i=n[e]||(n[e]=[]),o=t.__weh||(t.__weh=(...r)=>{if(n.isUnmounted)return;(0,s.Jd)(),on(n);const i=a(t,n,e,r);return ln(),(0,s.lk)(),i});return r?i.unshift(o):i.push(o),o}}const ve=e=>(t,n=rn)=>(!dn||"sp"===e)&&ye(e,((...e)=>t(...e)),n),we=ve("bm"),ke=ve("m"),Ie=ve("bu"),Se=ve("u"),Ce=ve("bum"),$e=ve("um"),Ne=ve("sp"),Te=ve("rtg"),Ee=ve("rtc");function Re(e,t=rn){ye("ec",e,t)}function Ae(e,t){const n=_;if(null===n)return e;const s=yn(n)||n.proxy,i=e.dirs||(e.dirs=[]);for(let a=0;a<t.length;a++){let[e,n,o,l=r.kT]=t[a];e&&((0,r.mf)(e)&&(e={mounted:e,updated:e}),e.deep&&Z(n),i.push({dir:e,instance:s,value:n,oldValue:void 0,arg:o,modifiers:l}))}return e}function _e(e,t,n,r){const i=e.dirs,o=t&&t.dirs;for(let l=0;l<i.length;l++){const u=i[l];o&&(u.oldValue=o[l].value);let c=u.dir[r];c&&((0,s.Jd)(),a(c,n,8,[e.el,u,e,t]),(0,s.lk)())}}const Fe=Symbol();function De(e,t,n,s){let i;const a=n&&n[s];if((0,r.kJ)(e)||(0,r.HD)(e)){i=new Array(e.length);for(let n=0,s=e.length;n<s;n++)i[n]=t(e[n],n,void 0,a&&a[n])}else if("number"===typeof e){0,i=new Array(e);for(let n=0;n<e;n++)i[n]=t(n+1,n,void 0,a&&a[n])}else if((0,r.Kn)(e))if(e[Symbol.iterator])i=Array.from(e,((e,n)=>t(e,n,void 0,a&&a[n])));else{const n=Object.keys(e);i=new Array(n.length);for(let s=0,r=n.length;s<r;s++){const r=n[s];i[s]=t(e[r],r,s,a&&a[s])}}else i=[];return n&&(n[s]=i),i}const Oe=e=>e?un(e)?yn(e)||e.proxy:Oe(e.parent):null,Le=(0,r.l7)(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Oe(e.parent),$root:e=>Oe(e.root),$emit:e=>e.emit,$options:e=>Ge(e),$forceUpdate:e=>e.f||(e.f=()=>v(e.update)),$nextTick:e=>e.n||(e.n=x.bind(e.proxy)),$watch:e=>J.bind(e)}),Me=(e,t)=>e!==r.kT&&!e.__isScriptSetup&&(0,r.RI)(e,t),ze={get({_:e},t){const{ctx:n,setupState:i,data:a,props:o,accessCache:l,type:u,appContext:c}=e;let h;if("$"!==t[0]){const s=l[t];if(void 0!==s)switch(s){case 1:return i[t];case 2:return a[t];case 4:return n[t];case 3:return o[t]}else{if(Me(i,t))return l[t]=1,i[t];if(a!==r.kT&&(0,r.RI)(a,t))return l[t]=2,a[t];if((h=e.propsOptions[0])&&(0,r.RI)(h,t))return l[t]=3,o[t];if(n!==r.kT&&(0,r.RI)(n,t))return l[t]=4,n[t];Pe&&(l[t]=0)}}const d=Le[t];let p,f;return d?("$attrs"===t&&(0,s.j)(e,"get",t),d(e)):(p=u.__cssModules)&&(p=p[t])?p:n!==r.kT&&(0,r.RI)(n,t)?(l[t]=4,n[t]):(f=c.config.globalProperties,(0,r.RI)(f,t)?f[t]:void 0)},set({_:e},t,n){const{data:s,setupState:i,ctx:a}=e;return Me(i,t)?(i[t]=n,!0):s!==r.kT&&(0,r.RI)(s,t)?(s[t]=n,!0):!(0,r.RI)(e.props,t)&&(("$"!==t[0]||!(t.slice(1)in e))&&(a[t]=n,!0))},has({_:{data:e,setupState:t,accessCache:n,ctx:s,appContext:i,propsOptions:a}},o){let l;return!!n[o]||e!==r.kT&&(0,r.RI)(e,o)||Me(t,o)||(l=a[0])&&(0,r.RI)(l,o)||(0,r.RI)(s,o)||(0,r.RI)(Le,o)||(0,r.RI)(i.config.globalProperties,o)},defineProperty(e,t,n){return null!=n.get?e._.accessCache[t]=0:(0,r.RI)(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}};let Pe=!0;function Be(e){const t=Ge(e),n=e.proxy,i=e.ctx;Pe=!1,t.beforeCreate&&Ue(t.beforeCreate,e,"bc");const{data:a,computed:o,methods:l,watch:u,provide:c,inject:h,created:d,beforeMount:p,mounted:f,beforeUpdate:g,updated:m,activated:b,deactivated:x,beforeDestroy:y,beforeUnmount:v,destroyed:w,unmounted:k,render:I,renderTracked:S,renderTriggered:C,errorCaptured:$,serverPrefetch:N,expose:T,inheritAttrs:E,components:R,directives:A,filters:_}=t,F=null;if(h&&We(h,i,F,e.appContext.config.unwrapInjectedRef),l)for(const s in l){const e=l[s];(0,r.mf)(e)&&(i[s]=e.bind(n))}if(a){0;const t=a.call(n,n);0,(0,r.Kn)(t)&&(e.data=(0,s.qj)(t))}if(Pe=!0,o)for(const s in o){const e=o[s],t=(0,r.mf)(e)?e.bind(n,n):(0,r.mf)(e.get)?e.get.bind(n,n):r.dG;0;const a=!(0,r.mf)(e)&&(0,r.mf)(e.set)?e.set.bind(n):r.dG,l=kn({get:t,set:a});Object.defineProperty(i,s,{enumerable:!0,configurable:!0,get:()=>l.value,set:e=>l.value=e})}if(u)for(const s in u)Ve(u[s],i,n,s);if(c){const e=(0,r.mf)(c)?c.call(n):c;Reflect.ownKeys(e).forEach((t=>{G(t,e[t])}))}function D(e,t){(0,r.kJ)(t)?t.forEach((t=>e(t.bind(n)))):t&&e(t.bind(n))}if(d&&Ue(d,e,"c"),D(we,p),D(ke,f),D(Ie,g),D(Se,m),D(pe,b),D(fe,x),D(Re,$),D(Ee,S),D(Te,C),D(Ce,v),D($e,k),D(Ne,N),(0,r.kJ)(T))if(T.length){const t=e.exposed||(e.exposed={});T.forEach((e=>{Object.defineProperty(t,e,{get:()=>n[e],set:t=>n[e]=t})}))}else e.exposed||(e.exposed={});I&&e.render===r.dG&&(e.render=I),null!=E&&(e.inheritAttrs=E),R&&(e.components=R),A&&(e.directives=A)}function We(e,t,n=r.dG,i=!1){(0,r.kJ)(e)&&(e=Xe(e));for(const a in e){const n=e[a];let o;o=(0,r.Kn)(n)?"default"in n?H(n.from||a,n.default,!0):H(n.from||a):H(n),(0,s.dq)(o)&&i?Object.defineProperty(t,a,{enumerable:!0,configurable:!0,get:()=>o.value,set:e=>o.value=e}):t[a]=o}}function Ue(e,t,n){a((0,r.kJ)(e)?e.map((e=>e.bind(t.proxy))):e.bind(t.proxy),t,n)}function Ve(e,t,n,s){const i=s.includes(".")?Y(n,s):()=>n[s];if((0,r.HD)(e)){const n=t[e];(0,r.mf)(n)&&K(i,n)}else if((0,r.mf)(e))K(i,e.bind(n));else if((0,r.Kn)(e))if((0,r.kJ)(e))e.forEach((e=>Ve(e,t,n,s)));else{const s=(0,r.mf)(e.handler)?e.handler.bind(n):t[e.handler];(0,r.mf)(s)&&K(i,s,e)}else 0}function Ge(e){const t=e.type,{mixins:n,extends:s}=t,{mixins:i,optionsCache:a,config:{optionMergeStrategies:o}}=e.appContext,l=a.get(t);let u;return l?u=l:i.length||n||s?(u={},i.length&&i.forEach((e=>He(u,e,o,!0))),He(u,t,o)):u=t,(0,r.Kn)(t)&&a.set(t,u),u}function He(e,t,n,s=!1){const{mixins:r,extends:i}=t;i&&He(e,i,n,!0),r&&r.forEach((t=>He(e,t,n,!0)));for(const a in t)if(s&&"expose"===a);else{const s=je[a]||n&&n[a];e[a]=s?s(e[a],t[a]):t[a]}return e}const je={data:qe,props:Ye,emits:Ye,methods:Ye,computed:Ye,beforeCreate:Je,created:Je,beforeMount:Je,mounted:Je,beforeUpdate:Je,updated:Je,beforeDestroy:Je,beforeUnmount:Je,destroyed:Je,unmounted:Je,activated:Je,deactivated:Je,errorCaptured:Je,serverPrefetch:Je,components:Ye,directives:Ye,watch:Ze,provide:qe,inject:Ke};function qe(e,t){return t?e?function(){return(0,r.l7)((0,r.mf)(e)?e.call(this,this):e,(0,r.mf)(t)?t.call(this,this):t)}:t:e}function Ke(e,t){return Ye(Xe(e),Xe(t))}function Xe(e){if((0,r.kJ)(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function Je(e,t){return e?[...new Set([].concat(e,t))]:t}function Ye(e,t){return e?(0,r.l7)((0,r.l7)(Object.create(null),e),t):t}function Ze(e,t){if(!e)return t;if(!t)return e;const n=(0,r.l7)(Object.create(null),e);for(const s in t)n[s]=Je(e[s],t[s]);return n}function Qe(e,t,n,i=!1){const a={},o={};(0,r.Nj)(o,Wt,1),e.propsDefaults=Object.create(null),tt(e,t,a,o);for(const s in e.propsOptions[0])s in a||(a[s]=void 0);n?e.props=i?a:(0,s.Um)(a):e.type.props?e.props=a:e.props=o,e.attrs=o}function et(e,t,n,i){const{props:a,attrs:o,vnode:{patchFlag:l}}=e,u=(0,s.IU)(a),[c]=e.propsOptions;let h=!1;if(!(i||l>0)||16&l){let s;tt(e,t,a,o)&&(h=!0);for(const i in u)t&&((0,r.RI)(t,i)||(s=(0,r.rs)(i))!==i&&(0,r.RI)(t,s))||(c?!n||void 0===n[i]&&void 0===n[s]||(a[i]=nt(c,u,i,void 0,e,!0)):delete a[i]);if(o!==u)for(const e in o)t&&(0,r.RI)(t,e)||(delete o[e],h=!0)}else if(8&l){const n=e.vnode.dynamicProps;for(let s=0;s<n.length;s++){let i=n[s];if(A(e.emitsOptions,i))continue;const l=t[i];if(c)if((0,r.RI)(o,i))l!==o[i]&&(o[i]=l,h=!0);else{const t=(0,r._A)(i);a[t]=nt(c,u,t,l,e,!1)}else l!==o[i]&&(o[i]=l,h=!0)}}h&&(0,s.X$)(e,"set","$attrs")}function tt(e,t,n,i){const[a,o]=e.propsOptions;let l,u=!1;if(t)for(let s in t){if((0,r.Gg)(s))continue;const c=t[s];let h;a&&(0,r.RI)(a,h=(0,r._A)(s))?o&&o.includes(h)?(l||(l={}))[h]=c:n[h]=c:A(e.emitsOptions,s)||s in i&&c===i[s]||(i[s]=c,u=!0)}if(o){const t=(0,s.IU)(n),i=l||r.kT;for(let s=0;s<o.length;s++){const l=o[s];n[l]=nt(a,t,l,i[l],e,!(0,r.RI)(i,l))}}return u}function nt(e,t,n,s,i,a){const o=e[n];if(null!=o){const e=(0,r.RI)(o,"default");if(e&&void 0===s){const e=o.default;if(o.type!==Function&&(0,r.mf)(e)){const{propsDefaults:r}=i;n in r?s=r[n]:(on(i),s=r[n]=e.call(null,t),ln())}else s=e}o[0]&&(a&&!e?s=!1:!o[1]||""!==s&&s!==(0,r.rs)(n)||(s=!0))}return s}function st(e,t,n=!1){const s=t.propsCache,i=s.get(e);if(i)return i;const a=e.props,o={},l=[];let u=!1;if(!(0,r.mf)(e)){const s=e=>{u=!0;const[n,s]=st(e,t,!0);(0,r.l7)(o,n),s&&l.push(...s)};!n&&t.mixins.length&&t.mixins.forEach(s),e.extends&&s(e.extends),e.mixins&&e.mixins.forEach(s)}if(!a&&!u)return(0,r.Kn)(e)&&s.set(e,r.Z6),r.Z6;if((0,r.kJ)(a))for(let h=0;h<a.length;h++){0;const e=(0,r._A)(a[h]);rt(e)&&(o[e]=r.kT)}else if(a){0;for(const e in a){const t=(0,r._A)(e);if(rt(t)){const n=a[e],s=o[t]=(0,r.kJ)(n)||(0,r.mf)(n)?{type:n}:Object.assign({},n);if(s){const e=ot(Boolean,s.type),n=ot(String,s.type);s[0]=e>-1,s[1]=n<0||e<n,(e>-1||(0,r.RI)(s,"default"))&&l.push(t)}}}}const c=[o,l];return(0,r.Kn)(e)&&s.set(e,c),c}function rt(e){return"$"!==e[0]}function it(e){const t=e&&e.toString().match(/^\s*(function|class) (\w+)/);return t?t[2]:null===e?"null":""}function at(e,t){return it(e)===it(t)}function ot(e,t){return(0,r.kJ)(t)?t.findIndex((t=>at(t,e))):(0,r.mf)(t)&&at(t,e)?0:-1}const lt=e=>"_"===e[0]||"$stable"===e,ut=e=>(0,r.kJ)(e)?e.map(Jt):[Jt(e)],ct=(e,t,n)=>{if(t._n)return t;const s=O(((...e)=>ut(t(...e))),n);return s._c=!1,s},ht=(e,t,n)=>{const s=e._ctx;for(const i in e){if(lt(i))continue;const n=e[i];if((0,r.mf)(n))t[i]=ct(i,n,s);else if(null!=n){0;const e=ut(n);t[i]=()=>e}}},dt=(e,t)=>{const n=ut(t);e.slots.default=()=>n},pt=(e,t)=>{if(32&e.vnode.shapeFlag){const n=t._;n?(e.slots=(0,s.IU)(t),(0,r.Nj)(t,"_",n)):ht(t,e.slots={})}else e.slots={},t&&dt(e,t);(0,r.Nj)(e.slots,Wt,1)},ft=(e,t,n)=>{const{vnode:s,slots:i}=e;let a=!0,o=r.kT;if(32&s.shapeFlag){const e=t._;e?n&&1===e?a=!1:((0,r.l7)(i,t),n||1!==e||delete i._):(a=!t.$stable,ht(t,i)),o=t}else t&&(dt(e,t),o={default:1});if(a)for(const r in i)lt(r)||r in o||delete i[r]};function gt(){return{app:null,config:{isNativeTag:r.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let mt=0;function bt(e,t){return function(n,s=null){(0,r.mf)(n)||(n=Object.assign({},n)),null==s||(0,r.Kn)(s)||(s=null);const i=gt(),a=new Set;let o=!1;const l=i.app={_uid:mt++,_component:n,_props:s,_container:null,_context:i,_instance:null,version:$n,get config(){return i.config},set config(e){0},use(e,...t){return a.has(e)||(e&&(0,r.mf)(e.install)?(a.add(e),e.install(l,...t)):(0,r.mf)(e)&&(a.add(e),e(l,...t))),l},mixin(e){return i.mixins.includes(e)||i.mixins.push(e),l},component(e,t){return t?(i.components[e]=t,l):i.components[e]},directive(e,t){return t?(i.directives[e]=t,l):i.directives[e]},mount(r,a,u){if(!o){0;const c=Ht(n,s);return c.appContext=i,a&&t?t(c,r):e(c,r,u),o=!0,l._container=r,r.__vue_app__=l,yn(c.component)||c.component.proxy}},unmount(){o&&(e(null,l._container),delete l._container.__vue_app__)},provide(e,t){return i.provides[e]=t,l}};return l}}function xt(e,t,n,a,o=!1){if((0,r.kJ)(e))return void e.forEach(((e,s)=>xt(e,t&&((0,r.kJ)(t)?t[s]:t),n,a,o)));if(ce(a)&&!o)return;const l=4&a.shapeFlag?yn(a.component)||a.component.proxy:a.el,u=o?null:l,{i:c,r:h}=e;const d=t&&t.r,p=c.refs===r.kT?c.refs={}:c.refs,f=c.setupState;if(null!=d&&d!==h&&((0,r.HD)(d)?(p[d]=null,(0,r.RI)(f,d)&&(f[d]=null)):(0,s.dq)(d)&&(d.value=null)),(0,r.mf)(h))i(h,c,12,[u,p]);else{const t=(0,r.HD)(h),i=(0,s.dq)(h);if(t||i){const s=()=>{if(e.f){const n=t?(0,r.RI)(f,h)?f[h]:p[h]:h.value;o?(0,r.kJ)(n)&&(0,r.Od)(n,l):(0,r.kJ)(n)?n.includes(l)||n.push(l):t?(p[h]=[l],(0,r.RI)(f,h)&&(f[h]=p[h])):(h.value=[l],e.k&&(p[e.k]=h.value))}else t?(p[h]=u,(0,r.RI)(f,h)&&(f[h]=u)):i&&(h.value=u,e.k&&(p[e.k]=u))};u?(s.id=-1,vt(s,n)):s()}else 0}}function yt(){}const vt=V;function wt(e){return kt(e)}function kt(e,t){yt();const n=(0,r.E9)();n.__VUE__=!0;const{insert:i,remove:a,patchProp:o,createElement:l,createText:u,createComment:c,setText:h,setElementText:d,parentNode:p,nextSibling:f,setScopeId:g=r.dG,insertStaticContent:m}=e,b=(e,t,n,s=null,r=null,i=null,a=!1,o=null,l=!!t.dynamicChildren)=>{if(e===t)return;e&&!Bt(e,t)&&(s=Z(e),q(e,r,i,!0),e=null),-2===t.patchFlag&&(l=!1,t.dynamicChildren=null);const{type:u,ref:c,shapeFlag:h}=t;switch(u){case Tt:x(e,t,n,s);break;case Et:y(e,t,n,s);break;case Rt:null==e&&w(t,n,s,a);break;case Nt:D(e,t,n,s,r,i,a,o,l);break;default:1&h?N(e,t,n,s,r,i,a,o,l):6&h?O(e,t,n,s,r,i,a,o,l):(64&h||128&h)&&u.process(e,t,n,s,r,i,a,o,l,ee)}null!=c&&r&&xt(c,e&&e.ref,i,t||e,!t)},x=(e,t,n,s)=>{if(null==e)i(t.el=u(t.children),n,s);else{const n=t.el=e.el;t.children!==e.children&&h(n,t.children)}},y=(e,t,n,s)=>{null==e?i(t.el=c(t.children||""),n,s):t.el=e.el},w=(e,t,n,s)=>{[e.el,e.anchor]=m(e.children,t,n,s,e.el,e.anchor)},I=({el:e,anchor:t},n,s)=>{let r;while(e&&e!==t)r=f(e),i(e,n,s),e=r;i(t,n,s)},$=({el:e,anchor:t})=>{let n;while(e&&e!==t)n=f(e),a(e),e=n;a(t)},N=(e,t,n,s,r,i,a,o,l)=>{a=a||"svg"===t.type,null==e?T(t,n,s,r,i,a,o,l):A(e,t,r,i,a,o,l)},T=(e,t,n,s,a,u,c,h)=>{let p,f;const{type:g,props:m,shapeFlag:b,transition:x,dirs:y}=e;if(p=e.el=l(e.type,u,m&&m.is,m),8&b?d(p,e.children):16&b&&R(e.children,p,null,s,a,u&&"foreignObject"!==g,c,h),y&&_e(e,null,s,"created"),E(p,e,e.scopeId,c,s),m){for(const t in m)"value"===t||(0,r.Gg)(t)||o(p,t,null,m[t],u,e.children,s,a,Y);"value"in m&&o(p,"value",null,m.value),(f=m.onVnodeBeforeMount)&&en(f,s,e)}y&&_e(e,null,s,"beforeMount");const v=(!a||a&&!a.pendingBranch)&&x&&!x.persisted;v&&x.beforeEnter(p),i(p,t,n),((f=m&&m.onVnodeMounted)||v||y)&&vt((()=>{f&&en(f,s,e),v&&x.enter(p),y&&_e(e,null,s,"mounted")}),a)},E=(e,t,n,s,r)=>{if(n&&g(e,n),s)for(let i=0;i<s.length;i++)g(e,s[i]);if(r){let n=r.subTree;if(t===n){const t=r.vnode;E(e,t,t.scopeId,t.slotScopeIds,r.parent)}}},R=(e,t,n,s,r,i,a,o,l=0)=>{for(let u=l;u<e.length;u++){const l=e[u]=o?Yt(e[u]):Jt(e[u]);b(null,l,t,n,s,r,i,a,o)}},A=(e,t,n,s,i,a,l)=>{const u=t.el=e.el;let{patchFlag:c,dynamicChildren:h,dirs:p}=t;c|=16&e.patchFlag;const f=e.props||r.kT,g=t.props||r.kT;let m;n&&It(n,!1),(m=g.onVnodeBeforeUpdate)&&en(m,n,t,e),p&&_e(t,e,n,"beforeUpdate"),n&&It(n,!0);const b=i&&"foreignObject"!==t.type;if(h?_(e.dynamicChildren,h,u,n,s,b,a):l||V(e,t,u,null,n,s,b,a,!1),c>0){if(16&c)F(u,t,f,g,n,s,i);else if(2&c&&f.class!==g.class&&o(u,"class",null,g.class,i),4&c&&o(u,"style",f.style,g.style,i),8&c){const r=t.dynamicProps;for(let t=0;t<r.length;t++){const a=r[t],l=f[a],c=g[a];c===l&&"value"!==a||o(u,a,l,c,i,e.children,n,s,Y)}}1&c&&e.children!==t.children&&d(u,t.children)}else l||null!=h||F(u,t,f,g,n,s,i);((m=g.onVnodeUpdated)||p)&&vt((()=>{m&&en(m,n,t,e),p&&_e(t,e,n,"updated")}),s)},_=(e,t,n,s,r,i,a)=>{for(let o=0;o<t.length;o++){const l=e[o],u=t[o],c=l.el&&(l.type===Nt||!Bt(l,u)||70&l.shapeFlag)?p(l.el):n;b(l,u,c,null,s,r,i,a,!0)}},F=(e,t,n,s,i,a,l)=>{if(n!==s){if(n!==r.kT)for(const u in n)(0,r.Gg)(u)||u in s||o(e,u,n[u],null,l,t.children,i,a,Y);for(const u in s){if((0,r.Gg)(u))continue;const c=s[u],h=n[u];c!==h&&"value"!==u&&o(e,u,h,c,l,t.children,i,a,Y)}"value"in s&&o(e,"value",n.value,s.value)}},D=(e,t,n,s,r,a,o,l,c)=>{const h=t.el=e?e.el:u(""),d=t.anchor=e?e.anchor:u("");let{patchFlag:p,dynamicChildren:f,slotScopeIds:g}=t;g&&(l=l?l.concat(g):g),null==e?(i(h,n,s),i(d,n,s),R(t.children,n,d,r,a,o,l,c)):p>0&&64&p&&f&&e.dynamicChildren?(_(e.dynamicChildren,f,n,r,a,o,l),(null!=t.key||r&&t===r.subTree)&&St(e,t,!0)):V(e,t,n,d,r,a,o,l,c)},O=(e,t,n,s,r,i,a,o,l)=>{t.slotScopeIds=o,null==e?512&t.shapeFlag?r.ctx.activate(t,n,s,a,l):M(t,n,s,r,i,a,l):z(e,t,l)},M=(e,t,n,s,r,i,a)=>{const o=e.component=sn(e,s,r);if(he(e)&&(o.ctx.renderer=ee),pn(o),o.asyncDep){if(r&&r.registerDep(o,B),!e.el){const e=o.subTree=Ht(Et);y(null,e,t,n)}}else B(o,e,t,n,r,i,a)},z=(e,t,n)=>{const s=t.component=e.component;if(P(e,t,n)){if(s.asyncDep&&!s.asyncResolved)return void U(s,t,n);s.next=t,k(s.update),s.update()}else t.el=e.el,s.vnode=t},B=(e,t,n,i,a,o,l)=>{const u=()=>{if(e.isMounted){let t,{next:n,bu:s,u:i,parent:u,vnode:c}=e,h=n;0,It(e,!1),n?(n.el=c.el,U(e,n,l)):n=c,s&&(0,r.ir)(s),(t=n.props&&n.props.onVnodeBeforeUpdate)&&en(t,u,n,c),It(e,!0);const d=L(e);0;const f=e.subTree;e.subTree=d,b(f,d,p(f.el),Z(f),e,a,o),n.el=d.el,null===h&&W(e,d.el),i&&vt(i,a),(t=n.props&&n.props.onVnodeUpdated)&&vt((()=>en(t,u,n,c)),a)}else{let s;const{el:l,props:u}=t,{bm:c,m:h,parent:d}=e,p=ce(t);if(It(e,!1),c&&(0,r.ir)(c),!p&&(s=u&&u.onVnodeBeforeMount)&&en(s,d,t),It(e,!0),l&&ne){const n=()=>{e.subTree=L(e),ne(l,e.subTree,e,a,null)};p?t.type.__asyncLoader().then((()=>!e.isUnmounted&&n())):n()}else{0;const s=e.subTree=L(e);0,b(null,s,n,i,e,a,o),t.el=s.el}if(h&&vt(h,a),!p&&(s=u&&u.onVnodeMounted)){const e=t;vt((()=>en(s,d,e)),a)}(256&t.shapeFlag||d&&ce(d.vnode)&&256&d.vnode.shapeFlag)&&e.a&&vt(e.a,a),e.isMounted=!0,t=n=i=null}},c=e.effect=new s.qq(u,(()=>v(h)),e.scope),h=e.update=()=>c.run();h.id=e.uid,It(e,!0),h()},U=(e,t,n)=>{t.component=e;const r=e.vnode.props;e.vnode=t,e.next=null,et(e,t.props,r,n),ft(e,t.children,n),(0,s.Jd)(),S(),(0,s.lk)()},V=(e,t,n,s,r,i,a,o,l=!1)=>{const u=e&&e.children,c=e?e.shapeFlag:0,h=t.children,{patchFlag:p,shapeFlag:f}=t;if(p>0){if(128&p)return void H(u,h,n,s,r,i,a,o,l);if(256&p)return void G(u,h,n,s,r,i,a,o,l)}8&f?(16&c&&Y(u,r,i),h!==u&&d(n,h)):16&c?16&f?H(u,h,n,s,r,i,a,o,l):Y(u,r,i,!0):(8&c&&d(n,""),16&f&&R(h,n,s,r,i,a,o,l))},G=(e,t,n,s,i,a,o,l,u)=>{e=e||r.Z6,t=t||r.Z6;const c=e.length,h=t.length,d=Math.min(c,h);let p;for(p=0;p<d;p++){const s=t[p]=u?Yt(t[p]):Jt(t[p]);b(e[p],s,n,null,i,a,o,l,u)}c>h?Y(e,i,a,!0,!1,d):R(t,n,s,i,a,o,l,u,d)},H=(e,t,n,s,i,a,o,l,u)=>{let c=0;const h=t.length;let d=e.length-1,p=h-1;while(c<=d&&c<=p){const s=e[c],r=t[c]=u?Yt(t[c]):Jt(t[c]);if(!Bt(s,r))break;b(s,r,n,null,i,a,o,l,u),c++}while(c<=d&&c<=p){const s=e[d],r=t[p]=u?Yt(t[p]):Jt(t[p]);if(!Bt(s,r))break;b(s,r,n,null,i,a,o,l,u),d--,p--}if(c>d){if(c<=p){const e=p+1,r=e<h?t[e].el:s;while(c<=p)b(null,t[c]=u?Yt(t[c]):Jt(t[c]),n,r,i,a,o,l,u),c++}}else if(c>p)while(c<=d)q(e[c],i,a,!0),c++;else{const f=c,g=c,m=new Map;for(c=g;c<=p;c++){const e=t[c]=u?Yt(t[c]):Jt(t[c]);null!=e.key&&m.set(e.key,c)}let x,y=0;const v=p-g+1;let w=!1,k=0;const I=new Array(v);for(c=0;c<v;c++)I[c]=0;for(c=f;c<=d;c++){const s=e[c];if(y>=v){q(s,i,a,!0);continue}let r;if(null!=s.key)r=m.get(s.key);else for(x=g;x<=p;x++)if(0===I[x-g]&&Bt(s,t[x])){r=x;break}void 0===r?q(s,i,a,!0):(I[r-g]=c+1,r>=k?k=r:w=!0,b(s,t[r],n,null,i,a,o,l,u),y++)}const S=w?Ct(I):r.Z6;for(x=S.length-1,c=v-1;c>=0;c--){const e=g+c,r=t[e],d=e+1<h?t[e+1].el:s;0===I[c]?b(null,r,n,d,i,a,o,l,u):w&&(x<0||c!==S[x]?j(r,n,d,2):x--)}}},j=(e,t,n,s,r=null)=>{const{el:a,type:o,transition:l,children:u,shapeFlag:c}=e;if(6&c)return void j(e.component.subTree,t,n,s);if(128&c)return void e.suspense.move(t,n,s);if(64&c)return void o.move(e,t,n,ee);if(o===Nt){i(a,t,n);for(let e=0;e<u.length;e++)j(u[e],t,n,s);return void i(e.anchor,t,n)}if(o===Rt)return void I(e,t,n);const h=2!==s&&1&c&&l;if(h)if(0===s)l.beforeEnter(a),i(a,t,n),vt((()=>l.enter(a)),r);else{const{leave:e,delayLeave:s,afterLeave:r}=l,o=()=>i(a,t,n),u=()=>{e(a,(()=>{o(),r&&r()}))};s?s(a,o,u):u()}else i(a,t,n)},q=(e,t,n,s=!1,r=!1)=>{const{type:i,props:a,ref:o,children:l,dynamicChildren:u,shapeFlag:c,patchFlag:h,dirs:d}=e;if(null!=o&&xt(o,null,n,e,!0),256&c)return void t.ctx.deactivate(e);const p=1&c&&d,f=!ce(e);let g;if(f&&(g=a&&a.onVnodeBeforeUnmount)&&en(g,t,e),6&c)J(e.component,n,s);else{if(128&c)return void e.suspense.unmount(n,s);p&&_e(e,null,t,"beforeUnmount"),64&c?e.type.remove(e,t,n,r,ee,s):u&&(i!==Nt||h>0&&64&h)?Y(u,t,n,!1,!0):(i===Nt&&384&h||!r&&16&c)&&Y(l,t,n),s&&K(e)}(f&&(g=a&&a.onVnodeUnmounted)||p)&&vt((()=>{g&&en(g,t,e),p&&_e(e,null,t,"unmounted")}),n)},K=e=>{const{type:t,el:n,anchor:s,transition:r}=e;if(t===Nt)return void X(n,s);if(t===Rt)return void $(e);const i=()=>{a(n),r&&!r.persisted&&r.afterLeave&&r.afterLeave()};if(1&e.shapeFlag&&r&&!r.persisted){const{leave:t,delayLeave:s}=r,a=()=>t(n,i);s?s(e.el,i,a):a()}else i()},X=(e,t)=>{let n;while(e!==t)n=f(e),a(e),e=n;a(t)},J=(e,t,n)=>{const{bum:s,scope:i,update:a,subTree:o,um:l}=e;s&&(0,r.ir)(s),i.stop(),a&&(a.active=!1,q(o,e,t,n)),l&&vt(l,t),vt((()=>{e.isUnmounted=!0}),t),t&&t.pendingBranch&&!t.isUnmounted&&e.asyncDep&&!e.asyncResolved&&e.suspenseId===t.pendingId&&(t.deps--,0===t.deps&&t.resolve())},Y=(e,t,n,s=!1,r=!1,i=0)=>{for(let a=i;a<e.length;a++)q(e[a],t,n,s,r)},Z=e=>6&e.shapeFlag?Z(e.component.subTree):128&e.shapeFlag?e.suspense.next():f(e.anchor||e.el),Q=(e,t,n)=>{null==e?t._vnode&&q(t._vnode,null,null,!0):b(t._vnode||null,e,t,null,null,null,n),S(),C(),t._vnode=e},ee={p:b,um:q,m:j,r:K,mt:M,mc:R,pc:V,pbc:_,n:Z,o:e};let te,ne;return t&&([te,ne]=t(ee)),{render:Q,hydrate:te,createApp:bt(Q,te)}}function It({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function St(e,t,n=!1){const s=e.children,i=t.children;if((0,r.kJ)(s)&&(0,r.kJ)(i))for(let r=0;r<s.length;r++){const e=s[r];let t=i[r];1&t.shapeFlag&&!t.dynamicChildren&&((t.patchFlag<=0||32===t.patchFlag)&&(t=i[r]=Yt(i[r]),t.el=e.el),n||St(e,t)),t.type===Tt&&(t.el=e.el)}}function Ct(e){const t=e.slice(),n=[0];let s,r,i,a,o;const l=e.length;for(s=0;s<l;s++){const l=e[s];if(0!==l){if(r=n[n.length-1],e[r]<l){t[s]=r,n.push(s);continue}i=0,a=n.length-1;while(i<a)o=i+a>>1,e[n[o]]<l?i=o+1:a=o;l<e[n[i]]&&(i>0&&(t[s]=n[i-1]),n[i]=s)}}i=n.length,a=n[i-1];while(i-- >0)n[i]=a,a=t[a];return n}const $t=e=>e.__isTeleport;const Nt=Symbol(void 0),Tt=Symbol(void 0),Et=Symbol(void 0),Rt=Symbol(void 0),At=[];let _t=null;function Ft(e=!1){At.push(_t=e?null:[])}function Dt(){At.pop(),_t=At[At.length-1]||null}let Ot=1;function Lt(e){Ot+=e}function Mt(e){return e.dynamicChildren=Ot>0?_t||r.Z6:null,Dt(),Ot>0&&_t&&_t.push(e),e}function zt(e,t,n,s,r,i){return Mt(Gt(e,t,n,s,r,i,!0))}function Pt(e){return!!e&&!0===e.__v_isVNode}function Bt(e,t){return e.type===t.type&&e.key===t.key}const Wt="__vInternal",Ut=({key:e})=>null!=e?e:null,Vt=({ref:e,ref_key:t,ref_for:n})=>null!=e?(0,r.HD)(e)||(0,s.dq)(e)||(0,r.mf)(e)?{i:_,r:e,k:t,f:!!n}:e:null;function Gt(e,t=null,n=null,s=0,i=null,a=(e===Nt?0:1),o=!1,l=!1){const u={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&Ut(t),ref:t&&Vt(t),scopeId:F,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:a,patchFlag:s,dynamicProps:i,dynamicChildren:null,appContext:null,ctx:_};return l?(Zt(u,n),128&a&&e.normalize(u)):n&&(u.shapeFlag|=(0,r.HD)(n)?8:16),Ot>0&&!o&&_t&&(u.patchFlag>0||6&a)&&32!==u.patchFlag&&_t.push(u),u}const Ht=jt;function jt(e,t=null,n=null,i=0,a=null,o=!1){if(e&&e!==Fe||(e=Et),Pt(e)){const s=Kt(e,t,!0);return n&&Zt(s,n),Ot>0&&!o&&_t&&(6&s.shapeFlag?_t[_t.indexOf(e)]=s:_t.push(s)),s.patchFlag|=-2,s}if(wn(e)&&(e=e.__vccOpts),t){t=qt(t);let{class:e,style:n}=t;e&&!(0,r.HD)(e)&&(t.class=(0,r.C_)(e)),(0,r.Kn)(n)&&((0,s.X3)(n)&&!(0,r.kJ)(n)&&(n=(0,r.l7)({},n)),t.style=(0,r.j5)(n))}const l=(0,r.HD)(e)?1:U(e)?128:$t(e)?64:(0,r.Kn)(e)?4:(0,r.mf)(e)?2:0;return Gt(e,t,n,i,a,l,o,!0)}function qt(e){return e?(0,s.X3)(e)||Wt in e?(0,r.l7)({},e):e:null}function Kt(e,t,n=!1){const{props:s,ref:i,patchFlag:a,children:o}=e,l=t?Qt(s||{},t):s,u={__v_isVNode:!0,__v_skip:!0,type:e.type,props:l,key:l&&Ut(l),ref:t&&t.ref?n&&i?(0,r.kJ)(i)?i.concat(Vt(t)):[i,Vt(t)]:Vt(t):i,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:o,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==Nt?-1===a?16:16|a:a,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Kt(e.ssContent),ssFallback:e.ssFallback&&Kt(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce};return u}function Xt(e=" ",t=0){return Ht(Tt,null,e,t)}function Jt(e){return null==e||"boolean"===typeof e?Ht(Et):(0,r.kJ)(e)?Ht(Nt,null,e.slice()):"object"===typeof e?Yt(e):Ht(Tt,null,String(e))}function Yt(e){return null===e.el&&-1!==e.patchFlag||e.memo?e:Kt(e)}function Zt(e,t){let n=0;const{shapeFlag:s}=e;if(null==t)t=null;else if((0,r.kJ)(t))n=16;else if("object"===typeof t){if(65&s){const n=t.default;return void(n&&(n._c&&(n._d=!1),Zt(e,n()),n._c&&(n._d=!0)))}{n=32;const s=t._;s||Wt in t?3===s&&_&&(1===_.slots._?t._=1:(t._=2,e.patchFlag|=1024)):t._ctx=_}}else(0,r.mf)(t)?(t={default:t,_ctx:_},n=32):(t=String(t),64&s?(n=16,t=[Xt(t)]):n=8);e.children=t,e.shapeFlag|=n}function Qt(...e){const t={};for(let n=0;n<e.length;n++){const s=e[n];for(const e in s)if("class"===e)t.class!==s.class&&(t.class=(0,r.C_)([t.class,s.class]));else if("style"===e)t.style=(0,r.j5)([t.style,s.style]);else if((0,r.F7)(e)){const n=t[e],i=s[e];!i||n===i||(0,r.kJ)(n)&&n.includes(i)||(t[e]=n?[].concat(n,i):i)}else""!==e&&(t[e]=s[e])}return t}function en(e,t,n,s=null){a(e,t,7,[n,s])}const tn=gt();let nn=0;function sn(e,t,n){const i=e.type,a=(t?t.appContext:e.appContext)||tn,o={uid:nn++,vnode:e,type:i,parent:t,appContext:a,root:null,next:null,subTree:null,effect:null,update:null,scope:new s.Bj(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(a.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:st(i,a),emitsOptions:R(i,a),emit:null,emitted:null,propsDefaults:r.kT,inheritAttrs:i.inheritAttrs,ctx:r.kT,data:r.kT,props:r.kT,attrs:r.kT,slots:r.kT,refs:r.kT,setupState:r.kT,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=t?t.root:o,o.emit=E.bind(null,o),e.ce&&e.ce(o),o}let rn=null;const an=()=>rn||_,on=e=>{rn=e,e.scope.on()},ln=()=>{rn&&rn.scope.off(),rn=null};function un(e){return 4&e.vnode.shapeFlag}let cn,hn,dn=!1;function pn(e,t=!1){dn=t;const{props:n,children:s}=e.vnode,r=un(e);Qe(e,n,r,t),pt(e,s);const i=r?fn(e,t):void 0;return dn=!1,i}function fn(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=(0,s.Xl)(new Proxy(e.ctx,ze));const{setup:a}=n;if(a){const n=e.setupContext=a.length>1?xn(e):null;on(e),(0,s.Jd)();const l=i(a,e,0,[e.props,n]);if((0,s.lk)(),ln(),(0,r.tI)(l)){if(l.then(ln,ln),t)return l.then((n=>{gn(e,n,t)})).catch((t=>{o(t,e,0)}));e.asyncDep=l}else gn(e,l,t)}else mn(e,t)}function gn(e,t,n){(0,r.mf)(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:(0,r.Kn)(t)&&(e.setupState=(0,s.WL)(t)),mn(e,n)}function mn(e,t,n){const i=e.type;if(!e.render){if(!t&&cn&&!i.render){const t=i.template||Ge(e).template;if(t){0;const{isCustomElement:n,compilerOptions:s}=e.appContext.config,{delimiters:a,compilerOptions:o}=i,l=(0,r.l7)((0,r.l7)({isCustomElement:n,delimiters:a},s),o);i.render=cn(t,l)}}e.render=i.render||r.dG,hn&&hn(e)}on(e),(0,s.Jd)(),Be(e),(0,s.lk)(),ln()}function bn(e){return new Proxy(e.attrs,{get(t,n){return(0,s.j)(e,"get","$attrs"),t[n]}})}function xn(e){const t=t=>{e.exposed=t||{}};let n;return{get attrs(){return n||(n=bn(e))},slots:e.slots,emit:e.emit,expose:t}}function yn(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy((0,s.WL)((0,s.Xl)(e.exposed)),{get(t,n){return n in t?t[n]:n in Le?Le[n](e):void 0},has(e,t){return t in e||t in Le}}))}function vn(e,t=!0){return(0,r.mf)(e)?e.displayName||e.name:e.name||t&&e.__name}function wn(e){return(0,r.mf)(e)&&"__vccOpts"in e}const kn=(e,t)=>(0,s.Fl)(e,t,dn);function In(e,t,n){const s=arguments.length;return 2===s?(0,r.Kn)(t)&&!(0,r.kJ)(t)?Pt(t)?Ht(e,null,[t]):Ht(e,t):Ht(e,null,t):(s>3?n=Array.prototype.slice.call(arguments,2):3===s&&Pt(n)&&(n=[n]),Ht(e,t,n))}const Sn=Symbol(""),Cn=()=>{{const e=H(Sn);return e}};const $n="3.2.47"},963:function(e,t,n){"use strict";n.d(t,{e8:function(){return ae},ri:function(){return pe}});var s=n(577),r=n(252),i=n(262);const a="http://www.w3.org/2000/svg",o="undefined"!==typeof document?document:null,l=o&&o.createElement("template"),u={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,s)=>{const r=t?o.createElementNS(a,e):o.createElement(e,n?{is:n}:void 0);return"select"===e&&s&&null!=s.multiple&&r.setAttribute("multiple",s.multiple),r},createText:e=>o.createTextNode(e),createComment:e=>o.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>o.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,n,s,r,i){const a=n?n.previousSibling:t.lastChild;if(r&&(r===i||r.nextSibling)){while(1)if(t.insertBefore(r.cloneNode(!0),n),r===i||!(r=r.nextSibling))break}else{l.innerHTML=s?`<svg>${e}</svg>`:e;const r=l.content;if(s){const e=r.firstChild;while(e.firstChild)r.appendChild(e.firstChild);r.removeChild(e)}t.insertBefore(r,n)}return[a?a.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}};function c(e,t,n){const s=e._vtc;s&&(t=(t?[t,...s]:[...s]).join(" ")),null==t?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}function h(e,t,n){const r=e.style,i=(0,s.HD)(n);if(n&&!i){if(t&&!(0,s.HD)(t))for(const e in t)null==n[e]&&p(r,e,"");for(const e in n)p(r,e,n[e])}else{const s=r.display;i?t!==n&&(r.cssText=n):t&&e.removeAttribute("style"),"_vod"in e&&(r.display=s)}}const d=/\s*!important$/;function p(e,t,n){if((0,s.kJ)(n))n.forEach((n=>p(e,t,n)));else if(null==n&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const r=m(e,t);d.test(n)?e.setProperty((0,s.rs)(r),n.replace(d,""),"important"):e[r]=n}}const f=["Webkit","Moz","ms"],g={};function m(e,t){const n=g[t];if(n)return n;let r=(0,s._A)(t);if("filter"!==r&&r in e)return g[t]=r;r=(0,s.kC)(r);for(let s=0;s<f.length;s++){const n=f[s]+r;if(n in e)return g[t]=n}return t}const b="http://www.w3.org/1999/xlink";function x(e,t,n,r,i){if(r&&t.startsWith("xlink:"))null==n?e.removeAttributeNS(b,t.slice(6,t.length)):e.setAttributeNS(b,t,n);else{const r=(0,s.Pq)(t);null==n||r&&!(0,s.yA)(n)?e.removeAttribute(t):e.setAttribute(t,r?"":n)}}function y(e,t,n,r,i,a,o){if("innerHTML"===t||"textContent"===t)return r&&o(r,i,a),void(e[t]=null==n?"":n);if("value"===t&&"PROGRESS"!==e.tagName&&!e.tagName.includes("-")){e._value=n;const s=null==n?"":n;return e.value===s&&"OPTION"!==e.tagName||(e.value=s),void(null==n&&e.removeAttribute(t))}let l=!1;if(""===n||null==n){const r=typeof e[t];"boolean"===r?n=(0,s.yA)(n):null==n&&"string"===r?(n="",l=!0):"number"===r&&(n=0,l=!0)}try{e[t]=n}catch(u){0}l&&e.removeAttribute(t)}function v(e,t,n,s){e.addEventListener(t,n,s)}function w(e,t,n,s){e.removeEventListener(t,n,s)}function k(e,t,n,s,r=null){const i=e._vei||(e._vei={}),a=i[t];if(s&&a)a.value=s;else{const[n,o]=S(t);if(s){const a=i[t]=T(s,r);v(e,n,a,o)}else a&&(w(e,n,a,o),i[t]=void 0)}}const I=/(?:Once|Passive|Capture)$/;function S(e){let t;if(I.test(e)){let n;t={};while(n=e.match(I))e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}const n=":"===e[2]?e.slice(3):(0,s.rs)(e.slice(2));return[n,t]}let C=0;const $=Promise.resolve(),N=()=>C||($.then((()=>C=0)),C=Date.now());function T(e,t){const n=e=>{if(e._vts){if(e._vts<=n.attached)return}else e._vts=Date.now();(0,r.$d)(E(e,n.value),t,5,[e])};return n.value=e,n.attached=N(),n}function E(e,t){if((0,s.kJ)(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map((e=>t=>!t._stopped&&e&&e(t)))}return t}const R=/^on[a-z]/,A=(e,t,n,r,i=!1,a,o,l,u)=>{"class"===t?c(e,r,i):"style"===t?h(e,n,r):(0,s.F7)(t)?(0,s.tR)(t)||k(e,t,n,r,o):("."===t[0]?(t=t.slice(1),1):"^"===t[0]?(t=t.slice(1),0):_(e,t,r,i))?y(e,t,r,a,o,l,u):("true-value"===t?e._trueValue=r:"false-value"===t&&(e._falseValue=r),x(e,t,r,i))};function _(e,t,n,r){return r?"innerHTML"===t||"textContent"===t||!!(t in e&&R.test(t)&&(0,s.mf)(n)):"spellcheck"!==t&&"draggable"!==t&&"translate"!==t&&("form"!==t&&(("list"!==t||"INPUT"!==e.tagName)&&(("type"!==t||"TEXTAREA"!==e.tagName)&&((!R.test(t)||!(0,s.HD)(n))&&t in e))))}"undefined"!==typeof HTMLElement&&HTMLElement;const F="transition",D="animation",O=(e,{slots:t})=>(0,r.h)(r.P$,B(e),t);O.displayName="Transition";const L={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},M=O.props=(0,s.l7)({},r.P$.props,L),z=(e,t=[])=>{(0,s.kJ)(e)?e.forEach((e=>e(...t))):e&&e(...t)},P=e=>!!e&&((0,s.kJ)(e)?e.some((e=>e.length>1)):e.length>1);function B(e){const t={};for(const s in e)s in L||(t[s]=e[s]);if(!1===e.css)return t;const{name:n="v",type:r,duration:i,enterFromClass:a=`${n}-enter-from`,enterActiveClass:o=`${n}-enter-active`,enterToClass:l=`${n}-enter-to`,appearFromClass:u=a,appearActiveClass:c=o,appearToClass:h=l,leaveFromClass:d=`${n}-leave-from`,leaveActiveClass:p=`${n}-leave-active`,leaveToClass:f=`${n}-leave-to`}=e,g=W(i),m=g&&g[0],b=g&&g[1],{onBeforeEnter:x,onEnter:y,onEnterCancelled:v,onLeave:w,onLeaveCancelled:k,onBeforeAppear:I=x,onAppear:S=y,onAppearCancelled:C=v}=t,$=(e,t,n)=>{G(e,t?h:l),G(e,t?c:o),n&&n()},N=(e,t)=>{e._isLeaving=!1,G(e,d),G(e,f),G(e,p),t&&t()},T=e=>(t,n)=>{const s=e?S:y,i=()=>$(t,e,n);z(s,[t,i]),H((()=>{G(t,e?u:a),V(t,e?h:l),P(s)||q(t,r,m,i)}))};return(0,s.l7)(t,{onBeforeEnter(e){z(x,[e]),V(e,a),V(e,o)},onBeforeAppear(e){z(I,[e]),V(e,u),V(e,c)},onEnter:T(!1),onAppear:T(!0),onLeave(e,t){e._isLeaving=!0;const n=()=>N(e,t);V(e,d),Y(),V(e,p),H((()=>{e._isLeaving&&(G(e,d),V(e,f),P(w)||q(e,r,b,n))})),z(w,[e,n])},onEnterCancelled(e){$(e,!1),z(v,[e])},onAppearCancelled(e){$(e,!0),z(C,[e])},onLeaveCancelled(e){N(e),z(k,[e])}})}function W(e){if(null==e)return null;if((0,s.Kn)(e))return[U(e.enter),U(e.leave)];{const t=U(e);return[t,t]}}function U(e){const t=(0,s.He)(e);return t}function V(e,t){t.split(/\s+/).forEach((t=>t&&e.classList.add(t))),(e._vtc||(e._vtc=new Set)).add(t)}function G(e,t){t.split(/\s+/).forEach((t=>t&&e.classList.remove(t)));const{_vtc:n}=e;n&&(n.delete(t),n.size||(e._vtc=void 0))}function H(e){requestAnimationFrame((()=>{requestAnimationFrame(e)}))}let j=0;function q(e,t,n,s){const r=e._endId=++j,i=()=>{r===e._endId&&s()};if(n)return setTimeout(i,n);const{type:a,timeout:o,propCount:l}=K(e,t);if(!a)return s();const u=a+"end";let c=0;const h=()=>{e.removeEventListener(u,d),i()},d=t=>{t.target===e&&++c>=l&&h()};setTimeout((()=>{c<l&&h()}),o+1),e.addEventListener(u,d)}function K(e,t){const n=window.getComputedStyle(e),s=e=>(n[e]||"").split(", "),r=s(`${F}Delay`),i=s(`${F}Duration`),a=X(r,i),o=s(`${D}Delay`),l=s(`${D}Duration`),u=X(o,l);let c=null,h=0,d=0;t===F?a>0&&(c=F,h=a,d=i.length):t===D?u>0&&(c=D,h=u,d=l.length):(h=Math.max(a,u),c=h>0?a>u?F:D:null,d=c?c===F?i.length:l.length:0);const p=c===F&&/\b(transform|all)(,|$)/.test(s(`${F}Property`).toString());return{type:c,timeout:h,propCount:d,hasTransform:p}}function X(e,t){while(e.length<t.length)e=e.concat(e);return Math.max(...t.map(((t,n)=>J(t)+J(e[n]))))}function J(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Y(){return document.body.offsetHeight}const Z=new WeakMap,Q=new WeakMap,ee={name:"TransitionGroup",props:(0,s.l7)({},M,{tag:String,moveClass:String}),setup(e,{slots:t}){const n=(0,r.FN)(),s=(0,r.Y8)();let a,o;return(0,r.ic)((()=>{if(!a.length)return;const t=e.moveClass||`${e.name||"v"}-move`;if(!re(a[0].el,n.vnode.el,t))return;a.forEach(te),a.forEach(ne);const s=a.filter(se);Y(),s.forEach((e=>{const n=e.el,s=n.style;V(n,t),s.transform=s.webkitTransform=s.transitionDuration="";const r=n._moveCb=e=>{e&&e.target!==n||e&&!/transform$/.test(e.propertyName)||(n.removeEventListener("transitionend",r),n._moveCb=null,G(n,t))};n.addEventListener("transitionend",r)}))})),()=>{const l=(0,i.IU)(e),u=B(l);let c=l.tag||r.HY;a=o,o=t.default?(0,r.Q6)(t.default()):[];for(let e=0;e<o.length;e++){const t=o[e];null!=t.key&&(0,r.nK)(t,(0,r.U2)(t,u,s,n))}if(a)for(let e=0;e<a.length;e++){const t=a[e];(0,r.nK)(t,(0,r.U2)(t,u,s,n)),Z.set(t,t.el.getBoundingClientRect())}return(0,r.Wm)(c,null,o)}}};ee.props;function te(e){const t=e.el;t._moveCb&&t._moveCb(),t._enterCb&&t._enterCb()}function ne(e){Q.set(e,e.el.getBoundingClientRect())}function se(e){const t=Z.get(e),n=Q.get(e),s=t.left-n.left,r=t.top-n.top;if(s||r){const t=e.el.style;return t.transform=t.webkitTransform=`translate(${s}px,${r}px)`,t.transitionDuration="0s",e}}function re(e,t,n){const s=e.cloneNode();e._vtc&&e._vtc.forEach((e=>{e.split(/\s+/).forEach((e=>e&&s.classList.remove(e)))})),n.split(/\s+/).forEach((e=>e&&s.classList.add(e))),s.style.display="none";const r=1===t.nodeType?t:t.parentNode;r.appendChild(s);const{hasTransform:i}=K(s);return r.removeChild(s),i}const ie=e=>{const t=e.props["onUpdate:modelValue"]||!1;return(0,s.kJ)(t)?e=>(0,s.ir)(t,e):t};const ae={deep:!0,created(e,t,n){e._assign=ie(n),v(e,"change",(()=>{const t=e._modelValue,n=le(e),r=e.checked,i=e._assign;if((0,s.kJ)(t)){const e=(0,s.hq)(t,n),a=-1!==e;if(r&&!a)i(t.concat(n));else if(!r&&a){const n=[...t];n.splice(e,1),i(n)}}else if((0,s.DM)(t)){const e=new Set(t);r?e.add(n):e.delete(n),i(e)}else i(ue(e,r))}))},mounted:oe,beforeUpdate(e,t,n){e._assign=ie(n),oe(e,t,n)}};function oe(e,{value:t,oldValue:n},r){e._modelValue=t,(0,s.kJ)(t)?e.checked=(0,s.hq)(t,r.props.value)>-1:(0,s.DM)(t)?e.checked=t.has(r.props.value):t!==n&&(e.checked=(0,s.WV)(t,ue(e,!0)))}function le(e){return"_value"in e?e._value:e.value}function ue(e,t){const n=t?"_trueValue":"_falseValue";return n in e?e[n]:t}const ce=(0,s.l7)({patchProp:A},u);let he;function de(){return he||(he=(0,r.Us)(ce))}const pe=(...e)=>{const t=de().createApp(...e);const{mount:n}=t;return t.mount=e=>{const r=fe(e);if(!r)return;const i=t._component;(0,s.mf)(i)||i.render||i.template||(i.template=r.innerHTML),r.innerHTML="";const a=n(r,!1,r instanceof SVGElement);return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),a},t};function fe(e){if((0,s.HD)(e)){const t=document.querySelector(e);return t}return e}},577:function(e,t,n){"use strict";function s(e,t){const n=Object.create(null),s=e.split(",");for(let r=0;r<s.length;r++)n[s[r]]=!0;return t?e=>!!n[e.toLowerCase()]:e=>!!n[e]}n.d(t,{C_:function(){return h},DM:function(){return F},E9:function(){return ae},F7:function(){return C},Gg:function(){return j},HD:function(){return M},He:function(){return re},Kj:function(){return O},Kn:function(){return P},NO:function(){return I},Nj:function(){return ne},Od:function(){return T},PO:function(){return G},Pq:function(){return p},RI:function(){return R},S0:function(){return H},W7:function(){return V},WV:function(){return m},Z6:function(){return w},_A:function(){return X},_N:function(){return _},aU:function(){return ee},dG:function(){return k},e1:function(){return i},fY:function(){return s},h5:function(){return se},hR:function(){return Q},hq:function(){return b},ir:function(){return te},j5:function(){return a},kC:function(){return Z},kJ:function(){return A},kT:function(){return v},l7:function(){return N},mf:function(){return L},rs:function(){return Y},tI:function(){return B},tR:function(){return $},yA:function(){return f},yk:function(){return z},zw:function(){return x}});const r="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",i=s(r);function a(e){if(A(e)){const t={};for(let n=0;n<e.length;n++){const s=e[n],r=M(s)?c(s):a(s);if(r)for(const e in r)t[e]=r[e]}return t}return M(e)||P(e)?e:void 0}const o=/;(?![^(]*\))/g,l=/:([^]+)/,u=/\/\*.*?\*\//gs;function c(e){const t={};return e.replace(u,"").split(o).forEach((e=>{if(e){const n=e.split(l);n.length>1&&(t[n[0].trim()]=n[1].trim())}})),t}function h(e){let t="";if(M(e))t=e;else if(A(e))for(let n=0;n<e.length;n++){const s=h(e[n]);s&&(t+=s+" ")}else if(P(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}const d="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",p=s(d);function f(e){return!!e||""===e}function g(e,t){if(e.length!==t.length)return!1;let n=!0;for(let s=0;n&&s<e.length;s++)n=m(e[s],t[s]);return n}function m(e,t){if(e===t)return!0;let n=D(e),s=D(t);if(n||s)return!(!n||!s)&&e.getTime()===t.getTime();if(n=z(e),s=z(t),n||s)return e===t;if(n=A(e),s=A(t),n||s)return!(!n||!s)&&g(e,t);if(n=P(e),s=P(t),n||s){if(!n||!s)return!1;const r=Object.keys(e).length,i=Object.keys(t).length;if(r!==i)return!1;for(const n in e){const s=e.hasOwnProperty(n),r=t.hasOwnProperty(n);if(s&&!r||!s&&r||!m(e[n],t[n]))return!1}}return String(e)===String(t)}function b(e,t){return e.findIndex((e=>m(e,t)))}const x=e=>M(e)?e:null==e?"":A(e)||P(e)&&(e.toString===W||!L(e.toString))?JSON.stringify(e,y,2):String(e),y=(e,t)=>t&&t.__v_isRef?y(e,t.value):_(t)?{[`Map(${t.size})`]:[...t.entries()].reduce(((e,[t,n])=>(e[`${t} =>`]=n,e)),{})}:F(t)?{[`Set(${t.size})`]:[...t.values()]}:!P(t)||A(t)||G(t)?t:String(t),v={},w=[],k=()=>{},I=()=>!1,S=/^on[^a-z]/,C=e=>S.test(e),$=e=>e.startsWith("onUpdate:"),N=Object.assign,T=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},E=Object.prototype.hasOwnProperty,R=(e,t)=>E.call(e,t),A=Array.isArray,_=e=>"[object Map]"===U(e),F=e=>"[object Set]"===U(e),D=e=>"[object Date]"===U(e),O=e=>"[object RegExp]"===U(e),L=e=>"function"===typeof e,M=e=>"string"===typeof e,z=e=>"symbol"===typeof e,P=e=>null!==e&&"object"===typeof e,B=e=>P(e)&&L(e.then)&&L(e.catch),W=Object.prototype.toString,U=e=>W.call(e),V=e=>U(e).slice(8,-1),G=e=>"[object Object]"===U(e),H=e=>M(e)&&"NaN"!==e&&"-"!==e[0]&&""+parseInt(e,10)===e,j=s(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),q=e=>{const t=Object.create(null);return n=>{const s=t[n];return s||(t[n]=e(n))}},K=/-(\w)/g,X=q((e=>e.replace(K,((e,t)=>t?t.toUpperCase():"")))),J=/\B([A-Z])/g,Y=q((e=>e.replace(J,"-$1").toLowerCase())),Z=q((e=>e.charAt(0).toUpperCase()+e.slice(1))),Q=q((e=>e?`on${Z(e)}`:"")),ee=(e,t)=>!Object.is(e,t),te=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},ne=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},se=e=>{const t=parseFloat(e);return isNaN(t)?e:t},re=e=>{const t=M(e)?Number(e):NaN;return isNaN(t)?e:t};let ie;const ae=()=>ie||(ie="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:"undefined"!==typeof window?window:"undefined"!==typeof n.g?n.g:{})},720:function(e){e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e["__isLong__"])}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},i={};function a(e,t){var n,s,a;return t?(e>>>=0,(a=0<=e&&e<256)&&(s=i[e],s)?s:(n=l(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n)):(e|=0,(a=-128<=e&&e<128)&&(s=r[e],s)?s:(n=l(e,e<0?-1:0,!1),a&&(r[e]=n),n))}function o(e,t){if(isNaN(e))return t?y:x;if(t){if(e<0)return y;if(e>=g)return S}else{if(e<=-m)return C;if(e+1>=m)return I}return e<0?o(-e,t).neg():l(e%f|0,e/f|0,t)}function l(e,t,s){return new n(e,t,s)}n.fromInt=a,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return x;if("number"===typeof t?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return c(e.substring(1),t,n).neg();for(var r=o(u(n,8)),i=x,a=0;a<e.length;a+=8){var l=Math.min(8,e.length-a),h=parseInt(e.substring(a,a+l),n);if(l<8){var d=o(u(n,l));i=i.mul(d).add(o(h))}else i=i.mul(r),i=i.add(o(h))}return i.unsigned=t,i}function h(e,t){return"number"===typeof e?o(e,t):"string"===typeof e?c(e,t):l(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=65536,p=1<<24,f=d*d,g=f*f,m=g/2,b=a(p),x=a(0);n.ZERO=x;var y=a(0,!0);n.UZERO=y;var v=a(1);n.ONE=v;var w=a(1,!0);n.UONE=w;var k=a(-1);n.NEG_ONE=k;var I=l(-1,2147483647,!1);n.MAX_VALUE=I;var S=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=S;var C=l(0,-2147483648,!1);n.MIN_VALUE=C;var $=n.prototype;$.toInt=function(){return this.unsigned?this.low>>>0:this.low},$.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},$.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(C)){var t=o(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}var r=o(u(e,6),this.unsigned),i=this,a="";while(1){var l=i.div(r),c=i.sub(l.mul(r)).toInt()>>>0,h=c.toString(e);if(i=l,i.isZero())return h+a;while(h.length<6)h="0"+h;a=""+h+a}},$.getHighBits=function(){return this.high},$.getHighBitsUnsigned=function(){return this.high>>>0},$.getLowBits=function(){return this.low},$.getLowBitsUnsigned=function(){return this.low>>>0},$.getNumBitsAbs=function(){if(this.isNegative())return this.eq(C)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0;t--)if(0!=(e&1<<t))break;return 0!=this.high?t+33:t+1},$.isZero=function(){return 0===this.high&&0===this.low},$.eqz=$.isZero,$.isNegative=function(){return!this.unsigned&&this.high<0},$.isPositive=function(){return this.unsigned||this.high>=0},$.isOdd=function(){return 1===(1&this.low)},$.isEven=function(){return 0===(1&this.low)},$.equals=function(e){return s(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},$.eq=$.equals,$.notEquals=function(e){return!this.eq(e)},$.neq=$.notEquals,$.ne=$.notEquals,$.lessThan=function(e){return this.comp(e)<0},$.lt=$.lessThan,$.lessThanOrEqual=function(e){return this.comp(e)<=0},$.lte=$.lessThanOrEqual,$.le=$.lessThanOrEqual,$.greaterThan=function(e){return this.comp(e)>0},$.gt=$.greaterThan,$.greaterThanOrEqual=function(e){return this.comp(e)>=0},$.gte=$.greaterThanOrEqual,$.ge=$.greaterThanOrEqual,$.compare=function(e){if(s(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},$.comp=$.compare,$.negate=function(){return!this.unsigned&&this.eq(C)?C:this.not().add(v)},$.neg=$.negate,$.add=function(e){s(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,i=65535&this.low,a=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=65535&e.low,d=0,p=0,f=0,g=0;return g+=i+c,f+=g>>>16,g&=65535,f+=r+u,p+=f>>>16,f&=65535,p+=n+o,d+=p>>>16,p&=65535,d+=t+a,d&=65535,l(f<<16|g,d<<16|p,this.unsigned)},$.subtract=function(e){return s(e)||(e=h(e)),this.add(e.neg())},$.sub=$.subtract,$.multiply=function(e){if(this.isZero())return x;if(s(e)||(e=h(e)),t){var n=t.mul(this.low,this.high,e.low,e.high);return l(n,t.get_high(),this.unsigned)}if(e.isZero())return x;if(this.eq(C))return e.isOdd()?C:x;if(e.eq(C))return this.isOdd()?C:x;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(b)&&e.lt(b))return o(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,i=65535&this.high,a=this.low>>>16,u=65535&this.low,c=e.high>>>16,d=65535&e.high,p=e.low>>>16,f=65535&e.low,g=0,m=0,y=0,v=0;return v+=u*f,y+=v>>>16,v&=65535,y+=a*f,m+=y>>>16,y&=65535,y+=u*p,m+=y>>>16,y&=65535,m+=i*f,g+=m>>>16,m&=65535,m+=a*p,g+=m>>>16,m&=65535,m+=u*d,g+=m>>>16,m&=65535,g+=r*f+i*p+a*d+u*c,g&=65535,l(y<<16|v,g<<16|m,this.unsigned)},$.mul=$.multiply,$.divide=function(e){if(s(e)||(e=h(e)),e.isZero())throw Error("division by zero");if(t){if(!this.unsigned&&-2147483648===this.high&&-1===e.low&&-1===e.high)return this;var n=(this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high);return l(n,t.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?y:x;var r,i,a;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return w;a=y}else{if(this.eq(C)){if(e.eq(v)||e.eq(k))return C;if(e.eq(C))return v;var c=this.shr(1);return r=c.div(e).shl(1),r.eq(x)?e.isNegative()?v:k:(i=this.sub(e.mul(r)),a=r.add(i.div(e)),a)}if(e.eq(C))return this.unsigned?y:x;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=x}i=this;while(i.gte(e)){r=Math.max(1,Math.floor(i.toNumber()/e.toNumber()));var d=Math.ceil(Math.log(r)/Math.LN2),p=d<=48?1:u(2,d-48),f=o(r),g=f.mul(e);while(g.isNegative()||g.gt(i))r-=p,f=o(r,this.unsigned),g=f.mul(e);f.isZero()&&(f=v),a=a.add(f),i=i.sub(g)}return a},$.div=$.divide,$.modulo=function(e){if(s(e)||(e=h(e)),t){var n=(this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high);return l(n,t.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},$.mod=$.modulo,$.rem=$.modulo,$.not=function(){return l(~this.low,~this.high,this.unsigned)},$.and=function(e){return s(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},$.or=function(e){return s(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},$.xor=function(e){return s(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},$.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},$.shl=$.shiftLeft,$.shiftRight=function(e){return s(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},$.shr=$.shiftRight,$.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),e&=63,0===e)return this;var t=this.high;if(e<32){var n=this.low;return l(n>>>e|t<<32-e,t>>>e,this.unsigned)}return l(32===e?t:t>>>e-32,0,this.unsigned)},$.shru=$.shiftRightUnsigned,$.shr_u=$.shiftRightUnsigned,$.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},$.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},$.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},$.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},$.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},377:function(e,t,n){var s=n(832),r=n(652),i=n(801),a=n(30),o=n(618),l=n(49),u=n(971);u.alea=s,u.xor128=r,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,e.exports=u},832:function(e,t,n){var s;e=n.nmd(e),function(e,r,i){function a(e){var t=this,n=u();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new a(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}function u(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var s=.02519603282416938*e;e=s>>>0,s-=e,s*=e,e=s>>>0,s-=e,e+=4294967296*s}return 2.3283064365386963e-10*(e>>>0)};return t}r&&r.exports?r.exports=l:n.amdD&&n.amdO?(s=function(){return l}.call(t,n,t,r),void 0===s||(r.exports=s)):this.alea=l}(0,e,n.amdD)},49:function(e,t,n){var s;e=n.nmd(e),function(e,r,i){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?(s=function(){return l}.call(t,n,t,r),void 0===s||(r.exports=s)):this.tychei=l}(0,e,n.amdD)},652:function(e,t,n){var s;e=n.nmd(e),function(e,r,i){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?(s=function(){return l}.call(t,n,t,r),void 0===s||(r.exports=s)):this.xor128=l}(0,e,n.amdD)},618:function(e,t,n){var s;e=n.nmd(e),function(e,r,i){function a(e){var t=this;function n(e,t){var n,s,r,i,a,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,i=-32;i<l;++i)t&&(s^=t.charCodeAt((i+32)%t.length)),0===i&&(a=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,i>=0&&(a=a+1640531527|0,n=o[127&i]^=s+a,r=0==n?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,i=512;i>0;--i)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=a,e.X=o,e.i=r}t.next=function(){var e,n,s=t.w,r=t.X,i=t.i;return t.w=s=s+1640531527|0,n=r[i+34&127],e=r[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[i]=n^e,t.i=i,n+(s^s>>>16)|0},n(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?(s=function(){return l}.call(t,n,t,r),void 0===s||(r.exports=s)):this.xor4096=l}(0,e,n.amdD)},30:function(e,t,n){var s;e=n.nmd(e),function(e,r,i){function a(e){var t=this;function n(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;while(s.length<8)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],e^=e>>>7,n=e^e<<24,e=s[r+1&7],n^=e^e>>>10,e=s[r+3&7],n^=e^e>>>3,e=s[r+4&7],n^=e^e<<7,e=s[r+7&7],e^=e<<13,n^=e^e<<9,s[r]=n,t.i=r+1&7,n},n(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?(s=function(){return l}.call(t,n,t,r),void 0===s||(r.exports=s)):this.xorshift7=l}(0,e,n.amdD)},801:function(e,t,n){var s;e=n.nmd(e),function(e,r,i){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?(s=function(){return l}.call(t,n,t,r),void 0===s||(r.exports=s)):this.xorwow=l}(0,e,n.amdD)},971:function(e,t,n){var s;(function(r,i,a){var o,l=256,u=6,c=52,h="random",d=a.pow(l,u),p=a.pow(2,c),f=2*p,g=l-1;function m(e,t,n){var s=[];t=1==t?{entropy:!0}:t||{};var r=v(y(t.entropy?[e,k(i)]:null==e?w():e,3),s),o=new b(s),c=function(){var e=o.g(u),t=d,n=0;while(e<p)e=(e+n)*l,t*=l,n=o.g(1);while(e>=f)e/=2,t/=2,n>>>=1;return(e+n)/t};return c.int32=function(){return 0|o.g(4)},c.quick=function(){return o.g(4)/4294967296},c.double=c,v(k(o.S),i),(t.pass||n||function(e,t,n,s){return s&&(s.S&&x(s,o),e.state=function(){return x(o,{})}),n?(a[h]=e,t):e})(c,r,"global"in t?t.global:this==a,t.state)}function b(e){var t,n=e.length,s=this,r=0,i=s.i=s.j=0,a=s.S=[];n||(e=[n++]);while(r<l)a[r]=r++;for(r=0;r<l;r++)a[r]=a[i=g&i+e[r%n]+(t=a[r])],a[i]=t;(s.g=function(e){var t,n=0,r=s.i,i=s.j,a=s.S;while(e--)t=a[r=g&r+1],n=n*l+a[g&(a[r]=a[i=g&i+t])+(a[i]=t)];return s.i=r,s.j=i,n})(l)}function x(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(y(e[n],t-1))}catch(i){}return s.length?s:"string"==r?e:e+"\0"}function v(e,t){var n,s=e+"",r=0;while(r<s.length)t[g&r]=g&(n^=19*t[g&r])+s.charCodeAt(r++);return k(t)}function w(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(r.crypto||r.msCrypto).getRandomValues(e)),k(e)}catch(s){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,k(i)]}}function k(e){return String.fromCharCode.apply(0,e)}if(v(a.random(),i),e.exports){e.exports=m;try{o=n(42)}catch(I){}}else s=function(){return m}.call(t,n,t,e),void 0===s||(e.exports=s)})("undefined"!==typeof self?self:this,[],Math)},744:function(e,t){"use strict";t.Z=(e,t)=>{const n=e.__vccOpts||e;for(const[s,r]of t)n[s]=r;return n}},874:function(e,t,n){"use strict";n.d(t,{Am:function(){return Ue},ZP:function(){return He}});var s=n(262),r=n(252),i=n(963),a=Object.defineProperty,o=Object.defineProperties,l=Object.getOwnPropertyDescriptors,u=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&d(e,n,t[n]);if(u)for(var n of u(t))h.call(t,n)&&d(e,n,t[n]);return e},f=(e,t)=>o(e,l(t)),g=(e,t)=>{var n={};for(var s in e)c.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&u)for(var s of u(e))t.indexOf(s)<0&&h.call(e,s)&&(n[s]=e[s]);return n},m={TOP_LEFT:"top-left",TOP_RIGHT:"top-right",TOP_CENTER:"top-center",BOTTOM_LEFT:"bottom-left",BOTTOM_RIGHT:"bottom-right",BOTTOM_CENTER:"bottom-center"},b={LIGHT:"light",DARK:"dark",COLORED:"colored",AUTO:"auto"},x={INFO:"info",SUCCESS:"success",WARNING:"warning",ERROR:"error",DEFAULT:"default"},y={BOUNCE:"bounce",SLIDE:"slide",FLIP:"flip",ZOOM:"zoom"},v={dangerouslyHTMLString:!1,multiple:!0,position:m.TOP_RIGHT,autoClose:5e3,transition:"bounce",hideProgressBar:!1,pauseOnHover:!0,pauseOnFocusLoss:!0,closeOnClick:!0,className:"",bodyClassName:"",style:{},progressClassName:"",progressStyle:{},role:"alert",theme:"light"},w={rtl:!1,newestOnTop:!1,toastClassName:""},k=p(p({},v),w),I=(f(p({},v),{data:{},type:x.DEFAULT,icon:!1}),function(e){return e[e["COLLAPSE_DURATION"]=300]="COLLAPSE_DURATION",e[e["DEBOUNCE_DURATION"]=50]="DEBOUNCE_DURATION",e["CSS_NAMESPACE"]="Toastify",e}({})),S=function(e){return e["ENTRANCE_ANIMATION_END"]="d",e}({}),C={enter:`${I.CSS_NAMESPACE}--animate ${I.CSS_NAMESPACE}__bounce-enter`,exit:`${I.CSS_NAMESPACE}--animate ${I.CSS_NAMESPACE}__bounce-exit`,appendPosition:!0},$={enter:`${I.CSS_NAMESPACE}--animate ${I.CSS_NAMESPACE}__slide-enter`,exit:`${I.CSS_NAMESPACE}--animate ${I.CSS_NAMESPACE}__slide-exit`,appendPosition:!0},N={enter:`${I.CSS_NAMESPACE}--animate ${I.CSS_NAMESPACE}__zoom-enter`,exit:`${I.CSS_NAMESPACE}--animate ${I.CSS_NAMESPACE}__zoom-exit`},T={enter:`${I.CSS_NAMESPACE}--animate ${I.CSS_NAMESPACE}__flip-enter`,exit:`${I.CSS_NAMESPACE}--animate ${I.CSS_NAMESPACE}__flip-exit`};function E(e){let t=C;if(e&&"string"!==typeof e)t=e;else switch(e){case"flip":t=T;break;case"zoom":t=N;break;case"slide":t=$;break;default:break}return t}function R(e){return e.containerId||String(e.position)}var A="will-unmount";function _(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:m.TOP_RIGHT;return!!document.querySelector(`.${I.CSS_NAMESPACE}__toast-container--${e}`)}function F(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:m.TOP_RIGHT;return`${I.CSS_NAMESPACE}__toast-container--${e}`}function D(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=[`${I.CSS_NAMESPACE}__toast-container`,`${I.CSS_NAMESPACE}__toast-container--${e}`,n?`${I.CSS_NAMESPACE}__toast-container--rtl`:null].filter(Boolean).join(" ");return ae(t)?t({position:e,rtl:n,defaultClassName:s}):`${s} ${t||""}`}function O(e){var t;const{position:n,containerClassName:s,rtl:r=!1,style:i={}}=e,a=I.CSS_NAMESPACE,o=F(n),l=document.querySelector(`.${a}`),u=document.querySelector(`.${o}`),c=!!u&&!(null==(t=u.className)?void 0:t.includes(A)),h=l||document.createElement("div"),d=document.createElement("div");d.className=D(n,s,r),d.dataset.testid=`${I.CSS_NAMESPACE}__toast-container--${n}`,d.id=R(e);for(const p in i)if(Object.prototype.hasOwnProperty.call(i,p)){const e=i[p];d.style[p]=e}return l||(h.className=I.CSS_NAMESPACE,document.body.appendChild(h)),c||h.appendChild(d),d}function L(e){var t,n,s;const r="string"===typeof e?e:(null==(t=e.currentTarget)?void 0:t.id)||(null==(n=e.target)?void 0:n.id),i=document.getElementById(r);i&&i.removeEventListener("animationend",L,!1);try{M[r].unmount(),null==(s=document.getElementById(r))||s.remove(),delete M[r],delete X[r]}catch(a){}}var M=(0,s.qj)({});function z(e,t){const n=document.getElementById(String(t));n&&(M[n.id]=e)}function P(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=String(e);if(!M[n])return;const s=document.getElementById(n);s&&s.classList.add(A),t?(U(e),s&&s.addEventListener("animationend",L,!1)):L(n),J.items=J.items.filter((t=>t.containerId!==e))}function B(e){for(const t in M)P(t,e);J.items=[]}function W(e,t){const n=document.getElementById(e.toastId);if(n){let s=e;s=p(p({},s),E(s.transition));const r=s.appendPosition?`${s.exit}--${s.position}`:s.exit;n.className+=` ${r}`,t&&t(n)}}function U(e){for(const t in X)if(t===e)for(const e of X[t]||[])W(e)}function V(e){const t=Y(),n=t.find((t=>t.toastId===e));return null==n?void 0:n.containerId}function G(e){return document.getElementById(e)}function H(e){const t=G(e.containerId);return t&&t.classList.contains(A)}function j(e){var t;const n=(0,r.lA)(e.content)?(0,s.IU)(e.content.props):null;return null!=n?n:(0,s.IU)(null!=(t=e.data)?t:{})}function q(e){if(e){const t=J.items.filter((t=>t.containerId===e));return t.length>0}return J.items.length>0}function K(){if(J.items.length>0){const e=J.items.shift();Q(null==e?void 0:e.toastContent,null==e?void 0:e.toastProps)}}var X=(0,s.qj)({}),J=(0,s.qj)({items:[]});function Y(){const e=(0,s.IU)(X);return Object.values(e).reduce(((e,t)=>[...e,...t]),[])}function Z(e){const t=Y();return t.find((t=>t.toastId===e))}function Q(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(H(t)){const n=G(t.containerId);n&&n.addEventListener("animationend",ee.bind(null,e,t),!1)}else ee(e,t)}function ee(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=G(t.containerId);n&&n.removeEventListener("animationend",ee.bind(null,e,t),!1);const s=X[t.containerId]||[],a=s.length>0;if(!a&&!_(t.position)){const e=O(t),n=(0,i.ri)(De,t);n.mount(e),z(n,e.id)}a&&(t.position=s[0].position),(0,r.Y3)((()=>{t.updateId?te.update(t):te.add(e,t)}))}var te={add(e,t){const{containerId:n=""}=t;n&&(X[n]=X[n]||[],X[n].find((e=>e.toastId===t.toastId))||setTimeout((()=>{var e,s;t.newestOnTop?null==(e=X[n])||e.unshift(t):null==(s=X[n])||s.push(t),t.onOpen&&t.onOpen(j(t))}),t.delay||0))},remove(e){if(e){const t=V(e);if(t){const n=X[t];let s=n.find((t=>t.toastId===e));X[t]=n.filter((t=>t.toastId!==e)),X[t].length||q(t)||P(t,!1),K(),(0,r.Y3)((()=>{(null==s?void 0:s.onClose)&&(s.onClose(j(s)),s=void 0)}))}}},update(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{containerId:t=""}=e;if(t&&e.updateId){X[t]=X[t]||[];const n=X[t].find((t=>t.toastId===e.toastId));n&&setTimeout((()=>{for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)){const s=e[t];n[t]=s}}),e.delay||0)}},clear(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];e?P(e,t):B(t)},dismissCallback(e){var t;const n=null==(t=e.currentTarget)?void 0:t.id,s=document.getElementById(n);s&&(s.removeEventListener("animationend",te.dismissCallback,!1),setTimeout((()=>{te.remove(n)})))},dismiss(e){if(e){const t=Y();for(const n of t)if(n.toastId===e){W(n,(e=>{e.addEventListener("animationend",te.dismissCallback,!1)}));break}}}},ne=(0,s.qj)({});function se(){return Math.random().toString(36).substring(2,9)}function re(e){return"number"===typeof e&&!isNaN(e)}function ie(e){return"string"===typeof e}function ae(e){return"function"===typeof e}function oe(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return(0,r.dG)(...t)}function le(e){return"object"===typeof e&&(!!(null==e?void 0:e.render)||!!(null==e?void 0:e.setup)||"object"===typeof(null==e?void 0:e.type))}function ue(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};ne[`${I.CSS_NAMESPACE}-default-options`]=e}function ce(){return ne[`${I.CSS_NAMESPACE}-default-options`]||k}function he(){return document.documentElement.classList.contains("dark")?"dark":"light"}var de=function(e){return e[e["Enter"]=0]="Enter",e[e["Exit"]=1]="Exit",e}({}),pe={containerId:{type:[String,Number],required:!1,default:""},dangerouslyHTMLString:{type:Boolean,required:!1,default:!1},multiple:{type:Boolean,required:!1,default:!0},limit:{type:Number,required:!1,default:void 0},position:{type:String,required:!1,default:m.TOP_LEFT},bodyClassName:{type:String,required:!1,default:""},autoClose:{type:[Number,Boolean],required:!1,default:!1},closeButton:{type:[Boolean,Function,Object],required:!1,default:void 0},transition:{type:[String,Object],required:!1,default:"bounce"},hideProgressBar:{type:Boolean,required:!1,default:!1},pauseOnHover:{type:Boolean,required:!1,default:!0},pauseOnFocusLoss:{type:Boolean,required:!1,default:!0},closeOnClick:{type:Boolean,required:!1,default:!0},progress:{type:Number,required:!1,default:void 0},progressClassName:{type:String,required:!1,default:""},toastStyle:{type:Object,required:!1,default(){return{}}},progressStyle:{type:Object,required:!1,default(){return{}}},role:{type:String,required:!1,default:"alert"},theme:{type:String,required:!1,default:b.AUTO},content:{type:[String,Object,Function],required:!1,default:""},toastId:{type:[String,Number],required:!1,default:""},data:{type:[Object,String],required:!1,default(){return{}}},type:{type:String,required:!1,default:x.DEFAULT},icon:{type:[Boolean,String,Number,Object,Function],required:!1,default:void 0},delay:{type:Number,required:!1,default:void 0},onOpen:{type:Function,required:!1,default:void 0},onClose:{type:Function,required:!1,default:void 0},onClick:{type:Function,required:!1,default:void 0},isLoading:{type:Boolean,required:!1,default:void 0},rtl:{type:Boolean,required:!1,default:!1},toastClassName:{type:String,required:!1,default:""},updateId:{type:[String,Number],required:!1,default:""}},fe=pe,ge={autoClose:{type:[Number,Boolean],required:!0},isRunning:{type:Boolean,required:!1,default:void 0},type:{type:String,required:!1,default:x.DEFAULT},theme:{type:String,required:!1,default:b.AUTO},hide:{type:Boolean,required:!1,default:void 0},className:{type:[String,Function],required:!1,default:""},controlledProgress:{type:Boolean,required:!1,default:void 0},rtl:{type:Boolean,required:!1,default:void 0},isIn:{type:Boolean,required:!1,default:void 0},progress:{type:Number,required:!1,default:void 0},closeToast:{type:Function,required:!1,default:void 0}},me=(0,r.aZ)({name:"ProgressBar",props:ge,setup(e,t){let{attrs:n}=t;const i=(0,s.iH)(),a=(0,r.Fl)((()=>e.hide?"true":"false")),o=(0,r.Fl)((()=>f(p({},n.style||{}),{animationDuration:`${!0===e.autoClose?5e3:e.autoClose}ms`,animationPlayState:e.isRunning?"running":"paused",opacity:e.hide?0:1,transform:e.controlledProgress?`scaleX(${e.progress})`:"none"}))),l=(0,r.Fl)((()=>[`${I.CSS_NAMESPACE}__progress-bar`,e.controlledProgress?`${I.CSS_NAMESPACE}__progress-bar--controlled`:`${I.CSS_NAMESPACE}__progress-bar--animated`,`${I.CSS_NAMESPACE}__progress-bar-theme--${e.theme}`,`${I.CSS_NAMESPACE}__progress-bar--${e.type}`,e.rtl?`${I.CSS_NAMESPACE}__progress-bar--rtl`:null].filter(Boolean).join(" "))),u=(0,r.Fl)((()=>`${l.value} ${(null==n?void 0:n.class)||""}`)),c=()=>{i.value&&(i.value.onanimationend=null,i.value.ontransitionend=null)},h=()=>{e.isIn&&e.closeToast&&!1!==e.autoClose&&(e.closeToast(),c())},d=(0,r.Fl)((()=>e.controlledProgress?null:h)),g=(0,r.Fl)((()=>e.controlledProgress?h:null));return(0,r.m0)((()=>{i.value&&(c(),i.value.onanimationend=d.value,i.value.ontransitionend=g.value)})),()=>(0,r.Wm)("div",{ref:i,role:"progressbar","aria-hidden":a.value,"aria-label":"notification timer",class:u.value,style:o.value},null)}}),be=me,xe=(0,r.aZ)({name:"CloseButton",inheritAttrs:!1,props:{theme:{type:String,required:!1,default:b.AUTO},type:{type:String,required:!1,default:b.LIGHT},ariaLabel:{type:String,required:!1,default:"close"},closeToast:{type:Function,required:!1,default:void 0}},setup(e){return()=>(0,r.Wm)("button",{class:`${I.CSS_NAMESPACE}__close-button ${I.CSS_NAMESPACE}__close-button--${e.theme}`,type:"button",onClick:t=>{t.stopPropagation(),e.closeToast&&e.closeToast(t)},"aria-label":e.ariaLabel},[(0,r.Wm)("svg",{"aria-hidden":"true",viewBox:"0 0 14 16"},[(0,r.Wm)("path",{"fill-rule":"evenodd",d:"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"},null)])])}}),ye=e=>{let t=e,{theme:n,type:s,path:i}=t,a=g(t,["theme","type","path"]);return(0,r.Wm)("svg",(0,r.dG)({viewBox:"0 0 24 24",width:"100%",height:"100%",fill:"colored"===n?"currentColor":`var(--toastify-icon-color-${s})`},a),[(0,r.Wm)("path",{d:i},null)])};function ve(e){return(0,r.Wm)(ye,(0,r.dG)(e,{path:"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z"}),null)}function we(e){return(0,r.Wm)(ye,(0,r.dG)(e,{path:"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z"}),null)}function ke(e){return(0,r.Wm)(ye,(0,r.dG)(e,{path:"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z"}),null)}function Ie(e){return(0,r.Wm)(ye,(0,r.dG)(e,{path:"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z"}),null)}function Se(){return(0,r.Wm)("div",{class:`${I.CSS_NAMESPACE}__spinner`},null)}var Ce={info:we,warning:ve,success:ke,error:Ie,spinner:Se},$e=e=>e in Ce;function Ne(e){let t,{theme:n,type:i,isLoading:a,icon:o}=e;const l={theme:n,type:i};if(a)t=Ce.spinner();else if(!1===o)t=void 0;else if(le(o))t=(0,s.IU)(o);else if(ae(o)){const e=o;t=e(l)}else(0,r.lA)(o)?t=(0,r.Ho)(o,l):ie(o)||re(o)?t=o:$e(i)&&(t=Ce[i](l));return t}var Te=()=>{};function Ee(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:I.COLLAPSE_DURATION;const{scrollHeight:s,style:r}=e,i=n;requestAnimationFrame((()=>{r.minHeight="initial",r.height=s+"px",r.transition=`all ${i}ms`,requestAnimationFrame((()=>{r.height="0",r.padding="0",r.margin="0",setTimeout(t,i)}))}))}function Re(e){const t=(0,s.iH)(!1),n=(0,s.iH)(!1),i=(0,s.iH)(!1),a=(0,s.iH)(de.Enter),o=(0,s.qj)(f(p({},e),{appendPosition:e.appendPosition||!1,collapse:"undefined"===typeof e.collapse||e.collapse,collapseDuration:e.collapseDuration||I.COLLAPSE_DURATION})),l=o.done||Te,u=(0,r.Fl)((()=>o.appendPosition?`${o.enter}--${o.position}`:o.enter)),c=(0,r.Fl)((()=>o.appendPosition?`${o.exit}--${o.position}`:o.exit)),h=(0,r.Fl)((()=>e.pauseOnHover?{onMouseenter:v,onMouseleave:y}:{}));function d(){const t=u.value.split(" ");m().addEventListener(S.ENTRANCE_ANIMATION_END,y,{once:!0});const n=e=>{const s=m();e.target===s&&(s.dispatchEvent(new Event(S.ENTRANCE_ANIMATION_END)),s.removeEventListener("animationend",n),s.removeEventListener("animationcancel",n),a.value===de.Enter&&"animationcancel"!==e.type&&s.classList.remove(...t))},s=()=>{const e=m();e.classList.add(...t),e.addEventListener("animationend",n),e.addEventListener("animationcancel",n)};e.pauseOnFocusLoss&&b(),s()}function g(){if(!m())return;const e=()=>{const t=m();t.removeEventListener("animationend",e),o.collapse?Ee(t,l,o.collapseDuration):l()},t=()=>{const t=m();a.value=de.Exit,t&&(t.className+=` ${c.value}`,t.addEventListener("animationend",e))};n.value||(i.value?e():setTimeout(t))}function m(){return e.toastRef.value}function b(){document.hasFocus()||v(),window.addEventListener("focus",y),window.addEventListener("blur",v)}function x(){window.removeEventListener("focus",y),window.removeEventListener("blur",v)}function y(){e.loading.value&&void 0!==e.isLoading||(t.value=!0)}function v(){t.value=!1}function w(e){e&&(e.stopPropagation(),e.preventDefault()),n.value=!1}return(0,r.m0)(g),(0,r.m0)((()=>{const e=Y();n.value=e.findIndex((e=>e.toastId===o.toastId))>-1})),(0,r.m0)((()=>{void 0!==e.isLoading&&(e.loading.value?v():y())})),(0,r.bv)(d),(0,r.Ah)((()=>{e.pauseOnFocusLoss&&x()})),{isIn:n,isRunning:t,hideToast:w,eventHandlers:h}}var Ae=(0,r.aZ)({name:"ToastItem",inheritAttrs:!1,props:fe,setup(e){const t=(0,s.iH)(),n=(0,r.Fl)((()=>!!e.isLoading)),i=(0,r.Fl)((()=>void 0!==e.progress&&null!==e.progress)),a=(0,r.Fl)((()=>Ne(e))),o=(0,r.Fl)((()=>[`${I.CSS_NAMESPACE}__toast`,`${I.CSS_NAMESPACE}__toast-theme--${e.theme}`,`${I.CSS_NAMESPACE}__toast--${e.type}`,e.rtl?`${I.CSS_NAMESPACE}__toast--rtl`:void 0,e.toastClassName||""].filter(Boolean).join(" "))),{isRunning:l,isIn:u,hideToast:c,eventHandlers:h}=Re(p(p({toastRef:t,loading:n,done:()=>{te.remove(e.toastId)}},E(e.transition)),e));return()=>(0,r.Wm)("div",(0,r.dG)({id:e.toastId,class:o.value,style:e.toastStyle||{},ref:t,"data-testid":`toast-item-${e.toastId}`,onClick:t=>{e.closeOnClick&&c(),e.onClick&&e.onClick(t)}},h.value),[(0,r.Wm)("div",{role:e.role,"data-testid":"toast-body",class:`${I.CSS_NAMESPACE}__toast-body ${e.bodyClassName||""}`},[null!=a.value&&(0,r.Wm)("div",{"data-testid":`toast-icon-${e.type}`,class:[`${I.CSS_NAMESPACE}__toast-icon`,e.isLoading?"":`${I.CSS_NAMESPACE}--animate-icon ${I.CSS_NAMESPACE}__zoom-enter`].join(" ")},[le(a.value)?(0,r.h)((0,s.IU)(a.value),{theme:e.theme,type:e.type}):ae(a.value)?a.value({theme:e.theme,type:e.type}):a.value]),(0,r.Wm)("div",{"data-testid":"toast-content"},[le(e.content)?(0,r.h)((0,s.IU)(e.content),{toastProps:(0,s.IU)(e),closeToast:c,data:e.data}):ae(e.content)?e.content({toastProps:(0,s.IU)(e),closeToast:c,data:e.data}):e.dangerouslyHTMLString?(0,r.h)("div",{innerHTML:e.content}):e.content])]),(void 0===e.closeButton||!0===e.closeButton)&&(0,r.Wm)(xe,{theme:e.theme,closeToast:e=>{e.stopPropagation(),e.preventDefault(),c()}},null),le(e.closeButton)?(0,r.h)((0,s.IU)(e.closeButton),{closeToast:c,type:e.type,theme:e.theme}):ae(e.closeButton)?e.closeButton({closeToast:c,type:e.type,theme:e.theme}):null,(0,r.Wm)(be,{className:e.progressClassName,style:e.progressStyle,rtl:e.rtl,theme:e.theme,isIn:u.value,type:e.type,hide:e.hideProgressBar,isRunning:l.value,autoClose:e.autoClose,controlledProgress:i.value,progress:e.progress,closeToast:e.isLoading?void 0:c},null)])}}),_e=Ae,Fe=(0,r.aZ)({name:"ToastifyContainer",inheritAttrs:!1,props:fe,setup(e){const t=(0,r.Fl)((()=>e.containerId)),n=(0,r.Fl)((()=>X[t.value]||[])),s=(0,r.Fl)((()=>n.value.filter((t=>t.position===e.position))));return()=>(0,r.Wm)(r.HY,null,[s.value.map((e=>{const{toastId:t=""}=e;return(0,r.Wm)(_e,(0,r.dG)({key:t},e),null)}))])}}),De=Fe,Oe=!1;function Le(){const e=[],t=Y();return t.forEach((t=>{const n=document.getElementById(t.containerId);n&&!n.classList.contains(A)&&e.push(t)})),e}function Me(e){const t=Le().length,n=null!=e?e:0;return n>0&&t+J.items.length>=n}function ze(e){Me(e.limit)&&!e.updateId&&J.items.push({toastId:e.toastId,containerId:e.containerId,toastContent:e.content,toastProps:e})}function Pe(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(Oe)return;n=oe(ce(),t,n),(!n.toastId||"string"!==typeof n.toastId&&"number"!==typeof n.toastId)&&(n.toastId=se()),n=f(p({},n),{content:e,containerId:n.containerId||String(n.position)});const s=Number(null==n?void 0:n.progress);return s<0&&(n.progress=0),s>1&&(n.progress=1),"auto"===n.theme&&(n.theme=he()),ze(n),n.multiple?J.items.length||Q(e,n):(Oe=!0,Be.clearAll(void 0,!1),setTimeout((()=>{Q(e,n)}),0),setTimeout((()=>{Oe=!1}),390)),n.toastId}var Be=(e,t)=>Pe(e,x.DEFAULT,t);function We(e,t,n){let s,{pending:r,error:i,success:a}=t;r&&(s=ie(r)?Be.loading(r,n):Be.loading(r.render,p(p({},n),r)));const o={isLoading:void 0,autoClose:null,closeOnClick:null,closeButton:null,draggable:null,delay:100},l=(e,t,r)=>{if(null==t)return void Be.remove(s);const i=f(p(p({type:e},o),n),{data:r}),a=ie(t)?{render:t}:t;return s?Be.update(s,f(p(p({},i),a),{isLoading:!1,autoClose:!0})):Be(a.render,f(p(p({},i),a),{isLoading:!1,autoClose:!0})),r},u=ae(e)?e():e;return u.then((e=>l("success",a,e))).catch((e=>l("error",i,e))),u}Be.info=(e,t)=>Pe(e,x.DEFAULT,f(p({},t),{type:x.INFO})),Be.error=(e,t)=>Pe(e,x.DEFAULT,f(p({},t),{type:x.ERROR})),Be.warning=(e,t)=>Pe(e,x.DEFAULT,f(p({},t),{type:x.WARNING})),Be.warn=Be.warning,Be.success=(e,t)=>Pe(e,x.DEFAULT,f(p({},t),{type:x.SUCCESS})),Be.loading=(e,t)=>Pe(e,x.DEFAULT,oe(t,{isLoading:!0,autoClose:!1,closeOnClick:!1,closeButton:!1,draggable:!1})),Be.dark=(e,t)=>Pe(e,x.DEFAULT,oe(t,{theme:b.DARK})),Be.remove=e=>{e?te.dismiss(e):te.clear()},Be.clearAll=(e,t)=>{te.clear(e,t)},Be.isActive=e=>{let t=!1;const n=Le();return t=n.findIndex((t=>t.toastId===e))>-1,t},Be.update=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};setTimeout((()=>{const n=Z(e);if(n){const r=(0,s.IU)(n),{content:i}=r,a=f(p(p({},r),t),{toastId:t.toastId||e,updateId:se()}),o=a.render||i;delete a.render,Pe(o,a.type,a)}}),0)},Be.done=e=>{Be.update(e,{isLoading:!1,progress:1})},Be.promise=We,Be.POSITION=m,Be.THEME=b,Be.TYPE=x,Be.TRANSITIONS=y;var Ue=Be,Ve={install(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Ge(t)}};function Ge(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=oe(k,e);ue(t)}"undefined"!==typeof window&&(window.Vue3Toastify=Ve);var He=Ve}}]);
//# sourceMappingURL=chunk-vendors.3c28ed52.js.map